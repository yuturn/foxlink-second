{"version":3,"sources":["assets/foxlink_logo.png","tools/crypt.js","components/logo.js","api.js","pages/LoginPage.js","icons/user-circle.js","components/dashboard-navbar.js","icons/chart-bar.js","icons/layout.js","icons/qrcode.js","icons/info.js","components/nav-item.js","components/dashboard-sidebar.js","components/dashboard-layout.js","pages/homepage.js","pages/Snackbar.js","components/severity-pill.js","components/workshop-picker.js","pages/AllStatus.js","components/date-range.js","components/rate.js","components/crashed-devices.js","components/accept-mission-employees.js","components/reject-mission-employees.js","components/abnormal-missions.js","components/abnormal-devices.js","pages/Statistics.js","pages/Qrcode.js","pages/Map.js","components/excel-table-view.js","components/parameter.js","components/alert-component.js","icons/upload.js","pages/DevicesUpload.js","components/worker-experiences.js","pages/WorkinfoUpload.js","pages/MapUpload.js","pages/WhiteList.js","components/emergency.js","components/mission-need-repair.js","pages/OtherMission.js","pages/app.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Object","defineProperty","value","verify","encrypt","HashType","crypto_1","require","buffer_1","dictionary","shuffleMap","sha256","sha512","roundsDefault","getRandomString","length","min","max","result","i","Math","ceil","floor","random","generateHash","plaintext","conf","digestSize","id","hashType","digestA","hashA","createHash","update","saltString","hashB","digestB","digest","plaintextByteLength","Buffer","byteLength","offset","remainder","slice","toString","split","reverse","forEach","num","generateDigestA","hashDP","digestDP","alloc","set","hashDS","step18","digestDS","s","saltByteLength","saltRemainder","hash","idx","buf","bufferToBase64","base64Encode","Array","rounds","fill","reduce","acc","curr","hashC","first","parseInt","second","third","fourth","charAt","salt","specifyRounds","parts","Number","Error","match","substr","parseSalt","push","concat","join","normalizeSalt","computedHash","lastIndexOf","timingSafeEqual","from","Logo","_ref","handler","React","createElement","Button","src","foxlinkLogo","width","height","baseRequest","axios","create","baseURL","process","headers","Access-Control-Allow-Origin","timeout","auth_except","x","catch","e","response","status","alert","statusText","apiStatisticsWithDate","data","get","accept","Content-Type","apiStatisticsWithShift","apiMissionNeedRepair","Authorization","apiMissionEmergency","apiWorkShopList","token","apiQRCode","responseType","apiMapGet","apiMapPost","post","apiGetFileName","apiDevices","_headers2","_defineProperty","apiDevicesData","apiWorkerinfos","_headers3","apiWorkerAll","apiGetWhiteList","workshop_name","apiGetDeviceRecommend","apiGetDeviceNameById","apiGetWorkersByDevice","apiPostAddWorkersWhitelist","apiDeleteWorkersWhitelist","delete","apiGetSystemEnvSetting","apiPostSystemEnvSetting","apiGetSystemEnvSettingCount","apiPostSystemEnvSettingCount","createTheme","palette","mode","background","default","paper","text","primary","main","UserCircle","createSvgIcon","viewBox","xmlns","fillRule","clipRule","d","DashboardNavbarRoot","styled","AppBar","theme","backgroundColor","boxShadow","DashboardNavbar","_ref2","user","Fragment","sx","left","lg","Toolbar","disableGutters","minHeight","px","Box","flexGrow","Tooltip","title","username","IconButton","ml","Typography","level","Avatar","UserCircleIcon","fontSize","ChartBar","Layout","version","y","QRCode","data-name","Info","NavItem","props","icon","url","globalIdx","setIdx","active","_objectWithoutProperties","document","location","href","at","Link","to","style","textDecoration","ListItem","display","mb","py","component","startIcon","disableRipple","color","fontWeight","justifyContent","textAlign","& .MuiButton-startIcon","&:hover","DashboardSidebar","items","StatusIcon","QRCodeIcon","MapIcon","SummarizeIcon","upload_items","LayoutIcon","InfoIcon","content","flexDirection","Divider","borderColor","my","map","item","key","Drawer","anchor","PaperProps","variant","DashboardLayoutRoot","flex","maxWidth","paddingTop","breakpoints","up","paddingLeft","DashboardLayout","_ref3","children","Container","FoxlinkPages","authUser","navigate","useNavigate","useEffect","Outlet","SnackbarAlert","open","type","message","setAlert","Alert","forwardRef","ref","MuiAlert","assign","elevation","handleClose","event","reason","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","severity","ownerState","colorHEX","alignItems","borderRadius","contrastText","cursor","flexShrink","fontFamily","typography","pxToRem","lineHeight","letterSpacing","minWidth","spacing","paddingRight","textTransform","whiteSpace","WorkshopPicker","workshop","setWorkshop","_useState","useState","_useState2","_slicedToArray","selectItem","setSelectItem","then","res","name","MenuItem","err","Select","labelId","label","onChange","target","secondary","light","dark","success","info","warning","error","leave","working","notice","moving","idle","DateRange","sDate","eDate","setSDate","setEDate","setShift","shift_","setShift_","Card","CardContent","Grid","container","gutterBottom","pt","pr","LocalizationProvider","dateAdapter","AdapterDayjs","DatePicker","newValue","renderInput","params","TextField","Stack","direction","FormControl","mt","mr","InputLabel","CONTENT","Rate","list_data","login_users","employees","m","badge","setData","_useState3","_useState4","setOpen","percentage","toFixed","InsertChartIcon","LinearProgress","onClick","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogActions","autoFocus","CrashedDevices","device","device_id","device_cname","count","BrokenImageSharpIcon","AcceptMissionEmployees","employee","LibraryAddCheckIcon","RejectMissionEmployees","full_name","CancelIcon","AbnormalMissions","mission","mission_id","categories","messages","AssignmentLateIcon","AbnormalDevices","category","top_great_assignees","darkTheme","Statistics","useRef","statusData","_useState5","_useState6","loading","setLoading","_useState7","Date","_useState8","_useState9","_useState10","_useState11","_useState12","shift","ThemeProvider","pb","xs","LoadingButton","size","_shift","console","log","msg","finally","updatedata","start","toISOString","end","login_users_percentage_this_week","devices_stats","most_frequent_crashed_devices","top_most_accept_mission_employees","top_most_reject_mission_employees","top_abnormal_missions_this_month","top_abnormal_devices","QrcodeDownload","downloading","setDownload","CardHeader","borderBottomWidth","saveAs","endIcon","ArrowCircleDownIcon","loadingPosition","Map","img","setImg","buffer","binary","call","Uint8Array","b","String","fromCharCode","img_component","window","btoa","arrayBufferToBase64","overflowX","ExcelTableView","keys","datas","id2words","Table","TableHead","TableRow","index","TableCell","TableBody","j","Parameter","csv_data","fullScreen","AlertComponent","duration","state","Upload","project","line","device_name","x_axis","y_axis","is_rescue","sop_link","Input","DevicesUpload","dataStatus","setDataStatus","uploading","setUpload","setKeys","_useState13","_useState14","setId2Word","_useState15","_useState16","setDatas","_useState17","_useState18","parameter","setParameter","_useState19","_useState20","_useState21","_useState22","errmsg","setErrMsg","_useState23","_useState24","rescueStatus","setRescueStatus","_useState25","_useState26","rescueCount","setRescueCount","_useState27","_useState28","_useState29","_useState30","handleOpen","updateData","_useState31","_useState32","deviceName","setDeviceName","handleOnClick","devices","updateFileName","htmlFor","files","file","formData","FormData","append","rawdata","processed_data","temp","obj","CloudUploadOutlinedIcon","margin","getElementById","newKeys","exp","WorkExperiences","superior","experiences","infotable","WorkerinfoUpload","workerFile","setWorkFile","setDeviceFile","UpdateData","prototype","replaceAt","char","a","this","postData","str","flag","parseParm","workerinfoName","setWorkerinfoName","worker","fd","MapUpload","mapName","setMapName","images","regex","filename","editTitle","recommand","action","remove","WhiteList","deviceMap","setDeviceMap","deviceRecommend","setDeviceRecommend","deviceSelect","setDeviceSelect","workSelect","setWorkSelect","setDevice","setWorker","handleUpdate","GetDeviceName","Promise","resolve","reject","promises","all","PerfectScrollbar","hover","user_id","Emergency","ReportGmailerrorredSharpIcon","MissionNeedRepair","description","ENRMission","emergencyMission","setEmergencyMission","needRepairMissions","setNeedRepairMissions","now","Skeleton","bgcolor","App","token_type","Router","Routes","Route","element","path","reportWebVitals","onPerfEntry","Function","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.cb61bb6e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/foxlink_logo.7d1cd178.png\";","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.verify = exports.encrypt = void 0;\nvar crypto_1 = require(\"crypto\");\nvar buffer_1 = require(\"buffer\");\nvar HashType;\n(function (HashType) {\n    HashType[HashType[\"sha256\"] = 5] = \"sha256\";\n    HashType[HashType[\"sha512\"] = 6] = \"sha512\";\n})(HashType || (HashType = {}));\nvar dictionary = \"./0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n// prettier-ignore\nvar shuffleMap = {\n    sha256: [\n        20, 10, 0,\n        11, 1, 21,\n        2, 22, 12,\n        23, 13, 3,\n        14, 4, 24,\n        5, 25, 15,\n        26, 16, 6,\n        17, 7, 27,\n        8, 28, 18,\n        29, 19, 9,\n        30, 31\n    ],\n    sha512: [\n        42, 21, 0,\n        1, 43, 22,\n        23, 2, 44,\n        45, 24, 3,\n        4, 46, 25,\n        26, 5, 47,\n        48, 27, 6,\n        7, 49, 28,\n        29, 8, 50,\n        51, 30, 9,\n        10, 52, 31,\n        32, 11, 53,\n        54, 33, 12,\n        13, 55, 34,\n        35, 14, 56,\n        57, 36, 15,\n        16, 58, 37,\n        38, 17, 59,\n        60, 39, 18,\n        19, 61, 40,\n        41, 20, 62,\n        63,\n    ]\n};\nvar roundsDefault = 5000;\nfunction getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n/**\n * Generate a random string\n * @param length Length of salt\n */\nfunction getRandomString(length) {\n    var result = \"\";\n    for (var i = 0; i < length; i++) {\n        result += dictionary[getRandomInt(0, dictionary.length - 1)];\n    }\n    return result;\n}\n/**\n * Normalize salt for use with hash, for example: \"$6$rounds=1234&saltsalt\" or \"$6$saltsalt\"\n * @param conf The separate parts of id, rounds, specifyRounds, and saltString\n */\nfunction normalizeSalt(conf) {\n    var parts = [\"\", conf.id];\n    if (conf.specifyRounds || conf.rounds !== roundsDefault) {\n        parts.push(\"rounds=\".concat(conf.rounds));\n    }\n    parts.push(conf.saltString);\n    return parts.join(\"$\");\n}\n/**\n * Parse salt into pieces, performs sanity checks, and returns proper defaults for missing values\n * @param salt Standard salt, \"$6$rounds=1234$saltsalt\", \"$6$saltsalt\", \"$6\", \"$6$rounds=1234\"\n */\nfunction parseSalt(salt) {\n    var roundsMin = 1000;\n    var roundsMax = 999999999;\n    var conf = {\n        id: HashType.sha512,\n        saltString: getRandomString(16),\n        rounds: roundsDefault,\n        specifyRounds: false,\n    };\n    if (salt) {\n        var parts = salt.split(\"$\");\n        conf.id = Number(parts[1]);\n        if (conf.id !== HashType.sha256 && conf.id !== HashType.sha512) {\n            throw new Error(\"Only sha256 and sha512 is supported by this library\");\n        }\n        if (parts.length < 2 || parts.length > 4) {\n            throw new Error(\"Invalid salt string\");\n        }\n        else if (parts.length > 2) {\n            var rounds = parts[2].match(/^rounds=(\\d*)$/);\n            if (rounds) {\n                // number of rounds has been specified\n                conf.rounds = Number(rounds[1]);\n                conf.specifyRounds = true;\n                if (parts[3]) {\n                    conf.saltString = parts[3];\n                }\n            }\n            else {\n                // default number of rounds has already been set\n                conf.saltString = parts[2];\n            }\n        }\n    }\n    // sanity-check rounds\n    conf.rounds =\n        conf.rounds < roundsMin\n            ? roundsMin\n            : conf.rounds > roundsMax\n                ? /* istanbul ignore next */\n                    (conf.rounds = roundsMax)\n                : conf.rounds;\n    // sanity-check saltString\n    conf.saltString = conf.saltString.substr(0, 16);\n    if (conf.saltString.match(\"[^./0-9A-Za-z]\")) {\n        throw new Error(\"Invalid salt string\");\n    }\n    return conf;\n}\n/**\n * Steps 1-12 in the spec\n * @param plaintext\n * @param conf\n */\nfunction generateDigestA(plaintext, conf) {\n    var digestSize = conf.id === HashType.sha256 ? 32 : 64;\n    // steps 1-8\n    var hashA = (0, crypto_1.createHash)(HashType[conf.id]);\n    hashA.update(plaintext);\n    hashA.update(conf.saltString);\n    var hashB = (0, crypto_1.createHash)(HashType[conf.id]);\n    hashB.update(plaintext);\n    hashB.update(conf.saltString);\n    hashB.update(plaintext);\n    var digestB = hashB.digest();\n    // step 9\n    var plaintextByteLength = buffer_1.Buffer.byteLength(plaintext);\n    for (var offset = 0; offset + digestSize < plaintextByteLength; offset += digestSize) {\n        hashA.update(digestB);\n    }\n    // step 10\n    var remainder = plaintextByteLength % digestSize;\n    hashA.update(digestB.slice(0, remainder));\n    // step 11\n    plaintextByteLength\n        .toString(2)\n        .split(\"\")\n        .reverse()\n        .forEach(function (num) {\n        hashA.update(num === \"0\" ? plaintext : digestB);\n    });\n    // step 12\n    return hashA.digest();\n}\nfunction generateHash(plaintext, conf) {\n    var digestSize = conf.id === HashType.sha256 ? 32 : 64;\n    var hashType = HashType[conf.id];\n    // steps 1-12\n    var digestA = generateDigestA(plaintext, conf);\n    // steps 13-15\n    var plaintextByteLength = buffer_1.Buffer.byteLength(plaintext);\n    var hashDP = (0, crypto_1.createHash)(hashType);\n    for (var i = 0; i < plaintextByteLength; i++) {\n        hashDP.update(plaintext);\n    }\n    var digestDP = hashDP.digest();\n    // step 16a\n    var p = buffer_1.Buffer.alloc(plaintextByteLength);\n    for (var offset = 0; offset + digestSize < plaintextByteLength; offset += digestSize) {\n        p.set(digestDP, offset);\n    }\n    // step 16b\n    var remainder = plaintextByteLength % digestSize;\n    p.set(digestDP.slice(0, remainder), plaintextByteLength - remainder);\n    // step 17-19\n    var hashDS = (0, crypto_1.createHash)(hashType);\n    var step18 = 16 + digestA[0];\n    for (var i = 0; i < step18; i++) {\n        hashDS.update(conf.saltString);\n    }\n    var digestDS = hashDS.digest();\n    // step 20\n    var s = buffer_1.Buffer.alloc(conf.saltString.length);\n    // step 20a\n    // Isn't this step redundant? The salt string doesn't have 32 or 64 bytes. It's truncated to 16 characters\n    var saltByteLength = buffer_1.Buffer.byteLength(conf.saltString);\n    for (var offset = 0; offset + digestSize < saltByteLength; offset += digestSize) {\n        /* istanbul ignore next */\n        s.set(digestDS, offset);\n    }\n    // step 20b\n    var saltRemainder = saltByteLength % digestSize;\n    s.set(digestDS.slice(0, saltRemainder), saltByteLength - saltRemainder);\n    // step 21\n    var rounds = Array(conf.rounds).fill(0);\n    var digestC = rounds.reduce(function (acc, curr, idx) {\n        var hashC = (0, crypto_1.createHash)(hashType);\n        // steps b-c\n        if (idx % 2 === 0) {\n            hashC.update(acc);\n        }\n        else {\n            hashC.update(p);\n        }\n        // step d\n        if (idx % 3 !== 0) {\n            hashC.update(s);\n        }\n        // step e\n        if (idx % 7 !== 0) {\n            hashC.update(p);\n        }\n        // steps f-g\n        if (idx % 2 !== 0) {\n            hashC.update(acc);\n        }\n        else {\n            hashC.update(p);\n        }\n        return hashC.digest();\n    }, digestA);\n    // step 22\n    return base64Encode(digestC, shuffleMap[hashType]);\n}\nfunction base64Encode(digest, shuffleMap) {\n    var hash = \"\";\n    for (var idx = 0; idx < digest.length; idx += 3) {\n        var buf = buffer_1.Buffer.alloc(3);\n        buf[0] = digest[shuffleMap[idx]];\n        buf[1] = digest[shuffleMap[idx + 1]];\n        buf[2] = digest[shuffleMap[idx + 2]];\n        hash += bufferToBase64(buf);\n    }\n    // adjust hash length by stripping trailing zeroes induced by base64-encoding\n    return hash.slice(0, digest.length === 32 ? -1 : -2);\n}\n/**\n * Encode buffer to base64 using our dictionary\n * @param buf Buffer of bytes to be encoded\n */\nfunction bufferToBase64(buf) {\n    var first = buf[0] & parseInt(\"00111111\", 2);\n    var second = ((buf[0] & parseInt(\"11000000\", 2)) >>> 6) |\n        ((buf[1] & parseInt(\"00001111\", 2)) << 2);\n    var third = ((buf[1] & parseInt(\"11110000\", 2)) >>> 4) |\n        ((buf[2] & parseInt(\"00000011\", 2)) << 4);\n    var fourth = (buf[2] & parseInt(\"11111100\", 2)) >>> 2;\n    return (dictionary.charAt(first) +\n        dictionary.charAt(second) +\n        dictionary.charAt(third) +\n        dictionary.charAt(fourth));\n}\n/**\n * Create sha256 or sha512 crypt of plaintext password\n * @param plaintext The plaintext password\n * @param salt optional salt, for example \"$6$salt\" or \"$6$rounds=10000$salt\"\n */\nfunction encrypt(plaintext, salt) {\n    var conf = parseSalt(salt);\n    var hash = generateHash(plaintext, conf);\n    return normalizeSalt(conf) + \"$\" + hash;\n}\nexports.encrypt = encrypt;\n/**\n * Verify plaintext password against expected hash\n * @param plaintext The plaintext password\n * @param hash The expected hash\n */\nfunction verify(plaintext, hash) {\n    var salt = hash.slice(0, hash.lastIndexOf(\"$\"));\n    var computedHash = encrypt(plaintext, salt);\n    return (0, crypto_1.timingSafeEqual)(buffer_1.Buffer.from(computedHash, \"utf8\"), buffer_1.Buffer.from(hash, \"utf8\"));\n}\nexports.verify = verify;\n","import { Button } from '@mui/material';\nimport React from \"react\";\nimport foxlinkLogo from '../assets/foxlink_logo.png';\n\nexport const Logo = ({handler}) => {\n  return (\n    <Button>\n      <img src={foxlinkLogo}width=\"178\" height=\"46\"/>\n    </Button>\n  );\n};\n\n\n","import axios from 'axios';\nimport { useNavigate } from \"react-router-dom\";\n\n\nconst baseRequest = axios.create({\n  baseURL: process.env.REACT_APP_BASEURL,\n  headers: { \"Access-Control-Allow-Origin\": \"*\" },\n  timeout: 300000,\n});\n\nconst auth_except = (x) => x.catch((e) => {\n  if (e.response.status == 403) {\n    //alert('无法验证身份');\n    alert(e.response.statusText);\n  }\n  throw e;\n})\n\nexport const apiSystemSpace = (token) => auth_except(baseRequest.get('/system/space', {\n  headers: {\n    'accept': 'application/json',\n    'Authorization': `Bearer ${token}`\n  }\n}));\n\nexport const apiUserLogin = (data) => auth_except(baseRequest.post('/auth/token', data, {\n  headers:\n  {\n    'accept': 'application/json',\n    'Content-Type': 'application/x-www-form-urlencoded'\n  },\n  timeout: 30000,\n}));\nexport const apiUserLevel = (token) => auth_except(baseRequest.get('/users/info', {\n  headers: {\n    'accept': 'application/json',\n    'Authorization': `Bearer ${token}`\n  }\n}));\n\nexport const apiStatisticsWithDate = (data) => auth_except(baseRequest.get(`/stats/?workshop_name=${data['workshop']}&start_date=${data['start']}&end_date=${data['end']}`, {\n  headers:\n  {\n    'accept': 'application/json',\n    'Content-Type': 'application/x-www-form-urlencoded'\n  }\n}));\n\n// export const apiStatisticsWithDate = (data) => auth_except(baseRequest.get(`/stats/?workshop_name=${data['workshop']}&start_date=${data['start']}&end_date=${data['end']}`, {\n//   headers:\n//   {\n//     'accept': 'application/json',\n//     'Content-Type': 'application/x-www-form-urlencoded'\n//   }\n\nexport const apiStatisticsWithShift = (data) => auth_except(baseRequest.get(`/stats/?workshop_name=${data['workshop']}&start_date=${data['start']}&end_date=${data['end']}&is_night_shift=${data['shift']}`, {\n  headers:\n  {\n    'accept': 'application/json',\n    'Content-Type': 'application/x-www-form-urlencoded'\n  }\n\n}));\n/*\n*\n* FQ-9%E8%BB%8A%E9%96%93 新改 ＡＰＩ\n*\n*/\nexport const apiWorkStatus = (workshop) => auth_except(baseRequest.get(`/stats/${workshop}/worker-status`, {\n  headers: {\n    'accept': 'application/json',\n    'Content-Type': 'application/x-www-form-urlencoded'\n  },\n  timeout: 60000,\n}));\n\nexport const apiMissionNeedRepair = (data) => auth_except(baseRequest.get(`missions/?workshop_name=${data['workshop']}&is_worker_null=true&is_done=false`, {\n  headers: {\n    'accept': 'application/json',\n    'Authorization': `Bearer ${data['token']}`\n  }\n}));\nexport const apiMissionEmergency = (data) => auth_except(baseRequest.get(`missions/?workshop_name=${data['workshop']}&is_started=false&is_done=false&is_emergency=true`, {\n  headers: {\n    'accept': 'application/json',\n    'Authorization': `Bearer ${data['token']}`\n  }\n}));\n\n// List\nexport const apiWorkShopList = (token) => auth_except(baseRequest.get('/workshop/list', {\n  headers: {\n    'accept': 'application/json',\n    'Authorization': `Bearer ${token}`\n  }\n}));\nexport const apiProjectList = (data) => auth_except(baseRequest.get(`workshop/${data['workshopname']}/projects`, {\n  headers: {\n    'accept': 'application/json',\n    'Authorization': `Bearer ${data['token']}`\n  }\n}));\n\nexport const apiQRCode = (data) => auth_except(baseRequest.get(`/workshop/qrcode?workshop_name=${data['name']}`, {\n  headers:\n  {\n    'accept': 'application/x-zip-compressed',\n    'Authorization': `Bearer ${data['token']}`\n  },\n  responseType: 'blob'\n}));\n\nexport const apiMapGet = (data) => auth_except(baseRequest.get(`/workshop/${data['name']}/image`, {\n  headers:\n  {\n    'accept': 'application/json',\n    'Authorization': `Bearer ${data['token']}`\n  },\n  responseType: 'arraybuffer'\n}));\nexport const apiMapPost = (data) => auth_except(baseRequest.post(`/workshop/${data['name']}/image`, data['file'], {\n  headers:\n  {\n    'accept': 'application/json',\n    'Content-Type': 'multipart/form-data',\n    'Authorization': `Bearer ${data['token']}`\n  }\n}));\n\nexport const apiGetFileName = (data) => auth_except(baseRequest.get(`/workshop/filename`, {\n  headers:\n  {\n    'accept': 'application/json',\n    'Authorization': `Bearer ${data['token']}`\n  },\n}));\n\nexport const apiEventbook = (data) => auth_except(baseRequest.post('/migration/workshop-eventbook', data['file'], {\n  headers:\n  {\n    'accept': 'application/json',\n    'Content-Type': 'multipart/form-data',\n    'accept': 'application/json',\n    'Authorization': `Bearer ${data['token']}`\n  }\n}));\nexport const apiEventbookGet = (data) => auth_except(baseRequest.get(`/device/category-priority?workshop_name=${data['workshop']}&project=${data['project']}`, {\n  headers:\n  {\n    'accept': 'application/json',\n    'Authorization': `Bearer ${data['token']}`\n  },\n}));\n\nexport const apiDevices = (data) => auth_except(baseRequest.post('/migration/devices', data['file'], {\n  headers:\n  {\n    'accept': 'application/json',\n    'Content-Type': 'multipart/form-data',\n    'accept': 'application/json',\n    'Authorization': `Bearer ${data['token']}`\n  }\n}));\nexport const apiDevicesData = (data) => auth_except(baseRequest.get(`/device/?workshop_name=${data['name']}`, {\n  headers:\n  {\n    'accept': 'application/json',\n    'Authorization': `Bearer ${data['token']}`\n  }\n}));\n\nexport const apiWorkerinfos = (data) => auth_except(baseRequest.post('/migration/factory-worker-infos', data['file'], {\n  headers:\n  {\n    'accept': 'application/json',\n    'Content-Type': 'multipart/form-data',\n    'accept': 'application/json',\n    'Authorization': `Bearer ${data['token']}`\n  }\n}));\nexport const apiWorkerAll = (data) => auth_except(baseRequest.get(`/users/overview?workshop_name=${data['workshop']}`,\n  {\n    headers:\n    {\n      'accept': 'application/json',\n      'Authorization': `Bearer ${data['token']}`\n    }\n  }));\n\n// white list\nexport const apiGetWhiteList = (workshop_name) => auth_except(baseRequest.get(`/device/whitelist?workshop_name=${workshop_name}`, {\n  headers: {\n    'accept': 'application/json',\n  }\n}));\nexport const apiGetDeviceRecommend = (workshop_name) => auth_except(baseRequest.get(`/device/whitelist/recommend?workshop_name=${workshop_name}`, {\n  headers: {\n    'accept': 'application/json',\n  }\n}));\nexport const apiGetDeviceNameById = (data) => auth_except(baseRequest.get(`/device/${data['device_id']}`, {\n  headers:\n  {\n    'accept': 'application/json',\n    'Authorization': `Bearer ${data['token']}`\n  }\n}));\nexport const apiGetWorkersByDevice = (data) => auth_except(baseRequest.get(`/device/${data['device_id']}/workers?shift_type=${data['shift']}`, {\n  headers: {\n    'accept': 'application/json',\n  }\n}));\nexport const apiPostAddWorkersWhitelist = (data) => auth_except(baseRequest.post(`/device/${data['device_id']}/whitelist?username=${data['username']}`, {\n  headers: {\n    'accept': 'application/json',\n  }\n}));\nexport const apiDeleteWorkersWhitelist = (data) => auth_except(baseRequest.delete(`/device/${data['device_id']}/whitelist?username=${data['username']}`, {\n  headers: {\n    'accept': 'application/json',\n  }\n}));\n\nexport const apiGetSystemEnvSetting = (data) => auth_except(baseRequest.get(`/system/env-get-settings/${data['key']}`, {\n  headers:\n  {\n    'accept': 'application/json',\n    'Authorization': `Bearer ${data['token']}`\n  }\n}));\n\nexport const apiPostSystemEnvSetting = (data) => auth_except(baseRequest.post(`/system/env-update-settings/${data['key']}?value=${data['value']}`, data, {\n  headers:\n  {\n    'accept': 'application/json',\n    'Authorization': `Bearer ${data['token']}`\n  }\n}));\n\nexport const apiGetSystemEnvSettingCount = (data) => auth_except(baseRequest.get(`/system/env-get-settings/${data['key']}`, {\n  headers:\n  {\n    'accept': 'application/json',\n    'Authorization': `Bearer ${data['token']}`\n  }\n}));\n\nexport const apiPostSystemEnvSettingCount = (data) => auth_except(baseRequest.post(`/system/env-update-settings/${data['key']}?value=${data['value']}`, data, {\n  headers:\n  {\n    'accept': 'application/json',\n    'Authorization': `Bearer ${data['token']}`\n  }\n}));\n\n// $5$rounds=10000$F0XL1NKPWDHaSH$x7OJPMIuQs3XFigY6rsIzhYVDezZa0i3O1qZrDemcm5\n","import React, { useRef, useEffect } from \"react\";\n\nimport { Box, Button, Container, TextField, Typography, Grid } from '@mui/material';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { Logo } from \"../components/logo.js\";\n\nimport { apiUserLogin, apiSystemSpace } from \"../api.js\";\n\nimport { useNavigate } from 'react-router-dom';\n\nimport { encrypt, verify } from \"../tools/crypt\";\n\nconst darkTheme = createTheme({\n    palette: {\n        mode: 'dark',\n        background: {\n            default: '#1a1e2b',\n            paper: '#1a1e2b',\n        },\n        text: {\n            primary: '#EDF2F7',\n        },\n        primary: {\n            // Purple and green play nicely together.\n            main: '#5048E5',\n        },\n\n    },\n});\n\nexport default function Login({ setUser, setAlert }) {\n    const navigate = useNavigate();\n    const _isMounted = useRef(true);\n    useEffect(() => {\n        return () => {\n            _isMounted.current = false;\n        }\n    }, []);\n    function handleOnClick() {\n        try {\n            let account = document.getElementById('account').value;\n            let password = document.getElementById('password').value;\n            const hashPassWord = encrypt(\"foxlink\", \"$5$rounds=10000$F0XL1NKPWDHaSH\");\n\n            if (account == '' || password == '') throw \"帐密不可為空\";\n            apiUserLogin(`grant_type=&username=${account}&password=${hashPassWord}&scope=&client_id=123&client_secret=`)\n                .then(res => {\n                    if (_isMounted.current) {\n                        setUser({\n                            'token': res.data['access_token'],\n                            'token_type': res.data['token_type'],\n                            'username': '',\n                            'level': '',\n                        })\n                        apiSystemSpace(res.data['access_token'])\n                            .then(res => {\n                                setAlert({\n                                    'open': true,\n                                    'msg': `硬盘使用率 : ${(100 * Number(res.data)).toFixed(2)}%`,\n                                    'type': 'warning',\n                                    'duration': 10000\n                                })\n                                navigate('/all-status');\n                            })\n                    }\n                })\n                .catch(err => {\n                    let errMsg = '';\n                    if (err.response && err.response.status == 401) errMsg = '帐密错误';\n                    else if (err.response && err.response.status == 422) errMsg = '验证错误，请重试';\n                    else errMsg = '服务器拒绝连线，请联络相关人员';\n                    setAlert({\n                        'open': true,\n                        'msg': errMsg,\n                        'type': 'error'\n                    })\n                })\n\n        } catch (e) {\n            console.log(e);\n            setAlert({\n                'open': true,\n                'msg': e,\n                'type': 'error'\n            })\n        }\n        document.getElementById('account').value = \"\";\n        document.getElementById('password').value = \"\";\n    }\n    return (\n        <ThemeProvider theme={darkTheme}>\n            <Grid\n                container\n                spacing={0}\n                direction=\"column\"\n                alignItems=\"center\"\n                justifyContent=\"center\"\n                sx={{ minHeight: '100vh', background: '#121212' }}\n            >\n                <Grid item xs={3}>\n                    <Box\n                        component=\"main\"\n                        sx={{\n                            alignItems: 'center',\n                            display: 'flex',\n                            flexGrow: 1,\n                            minHeight: '100%',\n                            maxWidth: 'sm',\n                            background: '#1a1e2b',\n                            borderRadius: 4,\n                            border: 'solid',\n                            borderColor: '#2D3748'\n                        }}\n                    >\n                        <Container maxWidth=\"sm\">\n                            <Grid\n                                container\n                                spacing={0}\n                                direction=\"column\"\n                                alignItems=\"center\"\n                                justifyContent=\"center\"\n                                sx={{ pt: 5 }}\n                            >\n                                <Grid item xs={3}>\n                                    <Logo />\n                                </Grid>\n                            </Grid>\n                            <Box sx={{\n                                pt: 5,\n                                my: 3\n                            }}>\n                                <Typography\n                                    color=\"textPrimary\"\n                                    variant=\"h4\"\n                                >\n                                    系统登入\n                                </Typography>\n                                <Typography\n                                    color=\"textSecondary\"\n                                    gutterBottom\n                                    variant=\"body2\"\n                                >\n                                    使用主管级帐户进入\n                                </Typography>\n                            </Box>\n                            <Box\n                                sx={{\n                                    pb: 1,\n                                    pt: 3\n                                }}\n                            >\n                            </Box>\n                            <TextField\n                                fullWidth\n                                label=\"帐户\"\n                                margin=\"normal\"\n                                name=\"account\"\n                                id=\"account\"\n                                variant=\"outlined\"\n                            />\n                            <TextField\n                                fullWidth\n                                label=\"密码\"\n                                margin=\"normal\"\n                                name=\"password\"\n                                id=\"password\"\n                                type=\"password\"\n                                variant=\"outlined\"\n                            />\n                            <Box sx={{ py: 2 }}>\n                                <Button\n                                    color=\"primary\"\n                                    fullWidth\n                                    size=\"large\"\n                                    type=\"submit\"\n                                    variant=\"contained\"\n                                    onClick={handleOnClick}\n                                >\n                                    登入\n                                </Button>\n                            </Box>\n                        </Container>\n                    </Box>\n                </Grid>\n            </Grid>\n        </ThemeProvider>\n    );\n}","import { createSvgIcon } from '@mui/material/utils';\nimport React from \"react\";\nexport const UserCircle = createSvgIcon(\n  <svg\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M19.5999 9.99999C19.5999 12.5461 18.5885 14.9879 16.7881 16.7882C14.9878 18.5886 12.546 19.6 9.9999 19.6C7.45382 19.6 5.01203 18.5886 3.21168 16.7882C1.41133 14.9879 0.399902 12.5461 0.399902 9.99999C0.399902 7.45392 1.41133 5.01212 3.21168 3.21177C5.01203 1.41142 7.45382 0.399994 9.9999 0.399994C12.546 0.399994 14.9878 1.41142 16.7881 3.21177C18.5885 5.01212 19.5999 7.45392 19.5999 9.99999ZM12.3999 6.39999C12.3999 7.03651 12.147 7.64696 11.697 8.09705C11.2469 8.54714 10.6364 8.79999 9.9999 8.79999C9.36338 8.79999 8.75293 8.54714 8.30285 8.09705C7.85276 7.64696 7.5999 7.03651 7.5999 6.39999C7.5999 5.76347 7.85276 5.15302 8.30285 4.70294C8.75293 4.25285 9.36338 3.99999 9.9999 3.99999C10.6364 3.99999 11.2469 4.25285 11.697 4.70294C12.147 5.15302 12.3999 5.76347 12.3999 6.39999ZM9.9999 11.2C8.85102 11.1998 7.72623 11.5294 6.7592 12.1497C5.79217 12.77 5.02355 13.6549 4.5447 14.6992C5.21991 15.4847 6.05703 16.1149 6.99864 16.5466C7.94024 16.9782 8.96407 17.2011 9.9999 17.2C11.0357 17.2011 12.0596 16.9782 13.0012 16.5466C13.9428 16.1149 14.7799 15.4847 15.4551 14.6992C14.9762 13.6549 14.2076 12.77 13.2406 12.1497C12.2736 11.5294 11.1488 11.1998 9.9999 11.2Z\"\n    />\n  </svg>,\n  'UserCircle'\n);\n","import React from \"react\";\n\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport { AppBar, Avatar, Box, IconButton, Toolbar, Tooltip, Typography } from '@mui/material';\n\nimport { UserCircle as UserCircleIcon } from '../icons/user-circle';\n\n\nconst DashboardNavbarRoot = styled(AppBar)(({ theme }) => ({\n // backgroundColor: \"#0c0d13\",\n  backgroundColor: \"#FFFFFF\",\n  boxShadow: '0px 1px 4px rgba(100, 116, 139, 0.12)'\n}));\n\nexport function DashboardNavbar({user}){\n  return (\n    <>\n    {\n      user && \n      <DashboardNavbarRoot\n        sx={{\n          left: {\n            lg: 280\n          },\n          width: {\n            lg: 'calc(100% - 280px)'\n          }\n        }}\n      >\n      <Toolbar\n        disableGutters\n        sx={{\n          minHeight: 64,\n          left: 0,\n          px: 2\n        }}\n      >\n        <Box sx={{ flexGrow: 1 }} />\n        <Tooltip title={`You are ${user.username} !`}>\n          <IconButton sx={{ ml: 1 }}>\n            <Typography>\n                {user.username}\n            </Typography>\n          </IconButton>\n        </Tooltip>\n        <Tooltip title={`Level ${user.level}`}>\n          <Avatar\n            sx={{\n              height: 40,\n              width: 40,\n              ml: 1\n            }}\n          >\n            <UserCircleIcon fontSize=\"small\" />\n          </Avatar>\n        </Tooltip>\n      </Toolbar>\n    </DashboardNavbarRoot>\n    }\n    </>\n  );\n};\n\n","import { createSvgIcon } from '@mui/material/utils';\nimport React from \"react\";\nexport const ChartBar = createSvgIcon(\n  <svg\n    viewBox=\"0 0 20 18\"\n    fill=\"currentColor\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M0.399902 10.2C0.399902 9.88175 0.52633 9.57652 0.751374 9.35148C0.976418 9.12644 1.28164 9.00001 1.5999 9.00001H3.9999C4.31816 9.00001 4.62339 9.12644 4.84843 9.35148C5.07347 9.57652 5.1999 9.88175 5.1999 10.2V16.2C5.1999 16.5183 5.07347 16.8235 4.84843 17.0485C4.62339 17.2736 4.31816 17.4 3.9999 17.4H1.5999C1.28164 17.4 0.976418 17.2736 0.751374 17.0485C0.52633 16.8235 0.399902 16.5183 0.399902 16.2V10.2ZM7.5999 5.40001C7.5999 5.08175 7.72633 4.77652 7.95137 4.55148C8.17642 4.32643 8.48164 4.20001 8.7999 4.20001H11.1999C11.5182 4.20001 11.8234 4.32643 12.0484 4.55148C12.2735 4.77652 12.3999 5.08175 12.3999 5.40001V16.2C12.3999 16.5183 12.2735 16.8235 12.0484 17.0485C11.8234 17.2736 11.5182 17.4 11.1999 17.4H8.7999C8.48164 17.4 8.17642 17.2736 7.95137 17.0485C7.72633 16.8235 7.5999 16.5183 7.5999 16.2V5.40001ZM14.7999 1.80001C14.7999 1.48175 14.9263 1.17652 15.1514 0.951478C15.3764 0.726434 15.6816 0.600006 15.9999 0.600006H18.3999C18.7182 0.600006 19.0234 0.726434 19.2484 0.951478C19.4735 1.17652 19.5999 1.48175 19.5999 1.80001V16.2C19.5999 16.5183 19.4735 16.8235 19.2484 17.0485C19.0234 17.2736 18.7182 17.4 18.3999 17.4H15.9999C15.6816 17.4 15.3764 17.2736 15.1514 17.0485C14.9263 16.8235 14.7999 16.5183 14.7999 16.2V1.80001Z\"\n    />\n  </svg>,\n  'ChartBar'\n);\n","import { createSvgIcon } from '@mui/material/utils';\nimport React from \"react\";\nexport const Layout = createSvgIcon(\n  <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\"  x=\"0px\" y=\"0px\"\n\t viewBox=\"0 0 456.578 456.578\" >\n<g>\n\t<g>\n\t\t<g>\n\t\t\t<path d=\"M435.539,0h-184c-8.284,0-15,6.716-15,15v426.578c0,8.284,6.716,15,15,15h184c8.284,0,15-6.716,15-15V15\n\t\t\t\tC450.539,6.716,443.823,0,435.539,0z\"/>\n\t\t\t<path d=\"M191.291,0H21.039c-8.284,0-15,6.716-15,15v102.249c0,8.284,6.716,15,15,15h170.252c8.284,0,15-6.716,15-15V15\n\t\t\t\tC206.291,6.716,199.575,0,191.291,0z\"/>\n\t\t\t<path d=\"M191.291,324.329H21.039c-8.284,0-15,6.716-15,15v102.249c0,8.284,6.716,15,15,15h170.252c8.284,0,15-6.716,15-15\n\t\t\t\tV339.329C206.291,331.045,199.575,324.329,191.291,324.329z\"/>\n\t\t\t<path d=\"M191.291,162.165H21.039c-8.284,0-15,6.716-15,15v102.248c0,8.284,6.716,15,15,15h170.252c8.284,0,15-6.716,15-15\n\t\t\t\tV177.165C206.291,168.881,199.575,162.165,191.291,162.165z\"/>\n\t\t</g>\n\t</g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n</svg>,\n  'Layout'\n);\n","import { createSvgIcon } from '@mui/material/utils';\nimport React from \"react\";\nexport const QRCode = createSvgIcon(\n  <svg width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" data-name=\"Layer 1\">\n    <path d=\"M8,21H4a1,1,0,0,1-1-1V16a1,1,0,0,0-2,0v4a3,3,0,0,0,3,3H8a1,1,0,0,0,0-2Zm14-6a1,1,0,0,0-1,1v4a1,1,0,0,1-1,1H16a1,1,0,0,0,0,2h4a3,3,0,0,0,3-3V16A1,1,0,0,0,22,15ZM20,1H16a1,1,0,0,0,0,2h4a1,1,0,0,1,1,1V8a1,1,0,0,0,2,0V4A3,3,0,0,0,20,1ZM2,9A1,1,0,0,0,3,8V4A1,1,0,0,1,4,3H8A1,1,0,0,0,8,1H4A3,3,0,0,0,1,4V8A1,1,0,0,0,2,9Zm8-4H6A1,1,0,0,0,5,6v4a1,1,0,0,0,1,1h4a1,1,0,0,0,1-1V6A1,1,0,0,0,10,5ZM9,9H7V7H9Zm5,2h4a1,1,0,0,0,1-1V6a1,1,0,0,0-1-1H14a1,1,0,0,0-1,1v4A1,1,0,0,0,14,11Zm1-4h2V9H15Zm-5,6H6a1,1,0,0,0-1,1v4a1,1,0,0,0,1,1h4a1,1,0,0,0,1-1V14A1,1,0,0,0,10,13ZM9,17H7V15H9Zm5-1a1,1,0,0,0,1-1,1,1,0,0,0,0-2H14a1,1,0,0,0-1,1v1A1,1,0,0,0,14,16Zm4-3a1,1,0,0,0-1,1v3a1,1,0,0,0,0,2h1a1,1,0,0,0,1-1V14A1,1,0,0,0,18,13Zm-4,4a1,1,0,1,0,1,1A1,1,0,0,0,14,17Z\"/>\n  </svg>,\n  'QRCode'\n);\n","import { createSvgIcon } from '@mui/material/utils';\nimport React from \"react\";\nexport const Info = createSvgIcon(\n  <svg version=\"1.1\"  xmlns=\"http://www.w3.org/2000/svg\" \n\t viewBox=\"0 0 460 460\" >\n<g id=\"XMLID_1055_\">\n\t<g>\n\t\t<path d=\"M230,0C102.975,0,0,102.975,0,230s102.975,230,230,230s230-102.974,230-230S357.025,0,230,0z M268.333,377.36\n\t\t\tc0,8.676-7.034,15.71-15.71,15.71h-43.101c-8.676,0-15.71-7.034-15.71-15.71V202.477c0-8.676,7.033-15.71,15.71-15.71h43.101\n\t\t\tc8.676,0,15.71,7.033,15.71,15.71V377.36z M230,157c-21.539,0-39-17.461-39-39s17.461-39,39-39s39,17.461,39,39\n\t\t\tS251.539,157,230,157z\"/>\n\t</g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n</svg>\n,\n  'Info'\n);\n","import { Box, Button, ListItem } from '@mui/material';\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport const NavItem = (props) => {\n  const { icon, title, globalIdx, setIdx, url,  ...others } = props;\n  const active = ('/' + document.location.href.split('/').at(-1)) === url;\n  return (\n    <Link to={url} style={{ textDecoration: 'none' }}>\n      <ListItem\n      disableGutters\n      sx={{\n        display: 'flex',\n        mb: 0.5,\n        py: 0,\n        px: 2,\n        textDecoration:'none'\n      }}\n    >\n      <Button\n          component=\"a\"\n          startIcon={icon}\n          disableRipple\n          sx={{\n            backgroundColor: active && 'rgba(255,255,255, 0.08)',\n            color: active ? '#10B981' : '#D1D5DB',\n            fontWeight: active && 'fontWeightBold',\n            justifyContent: 'flex-start',\n            px: 3,\n            textAlign: 'left',\n            width: '100%',\n            '& .MuiButton-startIcon': {\n              color: active ? '#10B981' : '#9CA3AF'\n            },\n            '&:hover': {\n              backgroundColor: 'rgba(255,255,255, 0.08)'\n            }\n          }}\n        >\n          <Box sx={{ flexGrow: 1}}>\n            {title}\n          </Box>\n      </Button>\n    </ListItem>\n    </Link>\n  );\n};\n\n","import React from \"react\";\n\nimport { Box, Divider, Drawer } from '@mui/material';\nimport { ChartBar as StatusIcon } from '../icons/chart-bar';\nimport { Layout as LayoutIcon } from '../icons/layout';\nimport { QRCode as QRCodeIcon } from '../icons/qrcode';\nimport { Info as InfoIcon } from '../icons/info';\n\nimport SummarizeIcon from '@mui/icons-material/Summarize';\nimport MapIcon from '@mui/icons-material/Map';\nimport { Logo } from './logo';\nimport { DashboardNavbar } from './dashboard-navbar';\nimport { NavItem } from './nav-item';\nimport { Link } from \"react-router-dom\";\n\nexport const DashboardSidebar = ({idx, setIdx}) => {\n  const items = [\n      {\n        url: '/statistics',\n        icon: (<StatusIcon fontSize=\"small\" />),\n        title: '统计资料',\n        active: false\n      },\n      {\n        url : '/ENRMission',\n        icon: (<StatusIcon fontSize=\"small\"/>),\n        title: '紧急和需维修任务',\n        active: false\n      },\n      {\n        url: '/qrcode-download',\n        icon: (<QRCodeIcon fontSize=\"small\" />),\n        title: 'QR Code 下载',\n        active: false\n      },\n      {\n        url: '/map',\n        icon: (<MapIcon fontSize=\"small\" />),\n        title: '车间地图',\n        active: false\n      },\n      {\n        url : '/white-list',\n        icon: (<SummarizeIcon fontSize=\"small\"/>),\n        title: '白名單',\n        active: false\n      }\n  ];\n\n  const upload_items = [\n    {\n      url: '/devices-upload',\n      icon: (<LayoutIcon fontSize=\"small\" />),\n      title: 'Layout 座标表 上传',\n      active: false\n    },\n    {\n      url: '/worker-info-upload',\n      icon: (<InfoIcon fontSize=\"small\" />),\n      title: '员工专职表 上传',\n      active: false\n    },\n    {\n      url : '/map-upload',\n      icon: (<MapIcon fontSize=\"small\"/>),\n      title: '车间地图 上传',\n      active: false\n    }\n  ];\n  const content = (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%'\n      }}\n    >\n      <Box sx={{ p: 3 }}>\n        <Link to={'/all-status'}>\n          <Logo sx={{height: 42, width: 42 }} />\n        </Link>\n      </Box>\n      <Divider\n        sx={{\n          borderColor: '#2D3748',\n          my: 3,\n          height:1.5\n        }}\n      />\n      <Box sx={{ flexGrow: 1 }}>\n        \n        {items.map((item) => (\n          <NavItem\n            key={item.title}\n            icon={item.icon}\n            url={item.url}\n            title={item.title}\n            globalIdx={idx}\n            setIdx={setIdx}\n          />\n        ))}\n      </Box>\n      <Divider\n        sx={{\n          borderColor: '#2D3748',\n          my: 3,\n          height:1.5\n        }}\n      />\n        <Box sx={{ flexGrow: 1 }}>\n          {upload_items.map((item) => (\n            <NavItem\n              key={item.title}\n              icon={item.icon}\n              url={item.url}\n              title={item.title}\n              globalIdx={idx}\n              setIdx={setIdx}\n            />\n          ))}\n      </Box>\n    </Box>\n  );\n\n  return (\n    <>\n    <Drawer\n        anchor=\"left\"\n        PaperProps={{\n          sx: {\n            backgroundColor: '#111827',\n            color: '#FFFFFF',\n            width: 280\n          }\n        }}\n        variant=\"permanent\"\n      >\n        {content}\n      </Drawer>\n      <DashboardNavbar  />\n    </>\n  );\n};","import React from \"react\";\n\nimport { Box, Container } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { DashboardNavbar } from './dashboard-navbar';\nimport { DashboardSidebar } from './dashboard-sidebar';\n\nconst DashboardLayoutRoot = styled('div')(({ theme }) => ({\n  display: 'flex',\n  flex: '1 1 auto',\n  maxWidth: '100%',\n  paddingTop: 64,\n  [theme.breakpoints.up('lg')]: {\n    paddingLeft: 280\n  }\n}));\n\nexport const DashboardLayout = ({children, user}) => {\n  return (\n    <Box\n      component=\"main\"\n      sx={{\n      flexGrow: 1,\n      py: 6\n      }}\n    >\n      <Container maxWidth={false}>\n      <DashboardLayoutRoot>\n        <Box\n          sx={{\n            display: 'flex',\n            flex: '1 1 auto',\n            flexDirection: 'column',\n            width: '100%',\n          }}\n        >\n          {children}\n        </Box>\n      </DashboardLayoutRoot>\n      <DashboardSidebar />\n      <DashboardNavbar user={user} />\n      </Container>\n    </Box>\n      \n  );\n};\n","import React, { useEffect } from \"react\";\nimport {DashboardLayout} from \"../components/dashboard-layout\";\nimport {\n    useNavigate,\n    Outlet,\n  } from 'react-router-dom'\n\nexport default function FoxlinkPages({authUser}) {\n    const navigate = useNavigate();\n    useEffect(() => {\n        if(authUser.token){\n            // pass\n        } else{\n            navigate('404-not-found');\n        }\n    }, []);\n    return (\n        <DashboardLayout>\n            <Outlet />\n        </DashboardLayout>\n    );\n}","import React from \"react\";\nimport {Snackbar} from \"@mui/material\";\nimport MuiAlert from '@mui/material/Alert';\n\nexport default function SnackbarAlert({open, type, message, setAlert}) {\n    const Alert = React.forwardRef(function Alert(props, ref) {\n        return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n    });\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {return;}\n        setAlert({\n            'open': false,\n        })\n    }\n    return (\n        <div>\n             <Snackbar open={open} autoHideDuration={1000} onClose={handleClose} anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\n                <Alert onClose={handleClose} severity={type} sx={{ width: '100%' }}>\n                    {message}\n                </Alert>\n            </Snackbar>  \n        </div>\n    )\n}","import React from \"react\";\nimport { styled } from '@mui/material/styles';\n\nconst SeverityPillRoot = styled('span')(({ theme, ownerState, colorHEX }) => {\n  const backgroundColor = theme.palette[ownerState.color].main;\n  //const backgroundColor = colorHEX;\n  //const color = colorHEX;\n  const color = theme.palette[ownerState.color].contrastText;\n\n\n  return {\n    alignItems: 'center',\n    backgroundColor,\n    borderRadius: 12,\n    color,\n    cursor: 'default',\n    display: 'inline-flex',\n    flexGrow: 0,\n    flexShrink: 0,\n    fontFamily: theme.typography.fontFamily,\n    fontSize: theme.typography.pxToRem(12),\n    lineHeight: 2,\n    fontWeight: 600,\n    justifyContent: 'center',\n    letterSpacing: 0.5,\n    minWidth: 20,\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    textTransform: 'uppercase',\n    whiteSpace: 'nowrap'\n  };\n});\n\nexport const SeverityPill = (props) => {\n  const { color = 'primary', children, ...other } = props;\n\n  const ownerState = { color };\n\n  return (\n    <SeverityPillRoot\n      ownerState={ownerState}\n      {...other}\n    >\n      {children}\n    </SeverityPillRoot>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport {\n  useNavigate\n} from 'react-router-dom'\nimport { Select, MenuItem } from '@mui/material';\nimport {apiWorkShopList} from \"../api.js\";\n\nexport const WorkshopPicker = ({token, workshop, setWorkshop, setAlert}) => {\n  const navigate = useNavigate();\n  const [selectItem, setSelectItem] = useState();\n\n  const handleChange = (event) => {\n    setWorkshop(event.target.value);\n  };\n\n  useEffect(()=> {\n    apiWorkShopList(token).then(res => {\n        setSelectItem(res.data.map(name=>{\n            return(<MenuItem key={name} value={name}>{name}</MenuItem>)\n        }))\n    }).catch(err => {\n     \n    });\n}, [])\n\n  return (\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={workshop}\n          label=\"WorkShop\"\n          onChange={handleChange}\n          sx={{minWidth:\"130px\"}}\n        >\n        {\n          selectItem \n        }\n        </Select>\n  );\n} \n","import React, { useState, useEffect, useReducer } from \"react\";\nimport {useNavigate} from 'react-router-dom';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n    Box,\n    Button,\n    Card,\n    CardHeader,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    createTheme,\n    ThemeProvider,\n    Divider,\n    FormControl,\n    InputLabel\n} from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport { SeverityPill } from '../components/severity-pill';\nimport { WorkshopPicker } from \"../components/workshop-picker.js\";\nimport { apiWorkStatus } from \"../api.js\";\n\nconst darkTheme = createTheme({\n    palette: {\n        mode: 'dark',\n        background: {\n            default: '#1a1e2b',\n            paper: '#1a1e2b',\n        },\n        text: {\n            primary: '#EDF2F7',\n        },\n        secondary: {\n            main: '#10B981',\n            light: '#3FC79A',\n            dark: '#0B815A',\n            contrastText: '#FFFFFF'\n        },\n        success: {\n            main: '#14B8A6',\n            light: '#43C6B7',\n            dark: '#0E8074',\n            contrastText: '#FFFFFF'\n        },\n        info: {\n            main: '#2196F3',\n            light: '#64B6F7',\n            dark: '#0B79D0',\n            contrastText: '#FFFFFF'\n        },\n        warning: {\n            main: '#FFB020',\n            light: '#FFBF4C',\n            dark: '#B27B16',\n            contrastText: '#FFFFFF'\n        },\n        error: {\n            main: '#D14343',\n            light: '#DA6868',\n            dark: '#922E2E',\n            contrastText: '#FFFFFF'\n        },leave: {\n            main:'#292b2c',\n            contrastText: '#fff'\n        },\n        working:{\n            main:'#d9534f',\n            contrastText: '#fff'\n        },\n        notice:{\n            main:'#f0ad4e',\n            contrastText: '#fff'\n        },\n        moving:{\n            main:'#0275d8',\n            contrastText: '#fff'\n        },\n        idle:{\n            main:'#5cb85c',\n            contrastText: '#fff'\n        }\n    }\n});\n\nconst CONTENT = {\n    title: \"员工状态总览\",\n    worker_id: \"员工 ID\",\n    name: \"姓名\",\n    last_event_end_date: \"上次任务结束时间\",\n    at_device_cname: \"员工位置\",\n    worker_status: \"员工状态\",\n    total_dispatches: \"派工总数\",\n    mission_duration: \"任务时长\",\n    repair_duration: \"维修时长\",\n    update: \"更新资料\",\n    Idle:\"閒置中\",\n    Working:\"维修中\",\n    Moving:\"移动中\",\n    Notice:\"指派中\",\n    Leave:\"离线\",\n\n}\nexport default function AllStatus({ token, setAlert, ...rest }) {\n    const [statusData, setStatusData] = useState();\n    const [workshop, setWorkshop] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const [_, forceUpdate] = useReducer(x => x + 1, 0);\n    const navigate = useNavigate();\n\n    const updataData = (sort=false) => {\n        setLoading(true);\n        apiWorkStatus(workshop).then(res => {\n            let rawData = res.data;\n            rawData.map(worker => {\n                worker.finish_event_date = parseTimeZone(worker.finish_event_date);\n                if(worker.mission_duration == null) worker.mission_duration = \"无\";\n                else worker.mission_duration = parseSeconds(worker.mission_duration);\n                if(worker.repair_duration == null) worker.repair_duration = \"无\";\n                else worker.repair_duration = parseSeconds(worker.repair_duration);\n                worker.sort = parseSortIndex(worker.status);\n            });\n            if(sort){\n                rawData.sort(function(a, b){\n                    return b.sort - a.sort;\n                })\n            }\n            setStatusData(rawData);\n            setAlert({\n                'open':true,\n                'msg': \"更新成功\",\n                'type': 'success'\n              });\n        }).catch(err => {\n            if(err.response){\n                setAlert({\n                    'open':true,\n                    'msg': err.response.statusText,\n                    'type': 'error'\n                })\n            }\n            else{\n                alert('网路异常，请联系相关人员 (断线 或 Timeout)');\n                navigate('/login');\n            }\n        }).finally(()=>{\n            setLoading(false);\n        });\n    }\n\n    /*\n    const handleSort = () => {\n        \n        let sortedData = statusData;\n        sortedData.sort(function(a, b){\n            return b.sort - a.sort;\n        })\n        setStatusData(sortedData);\n        forceUpdate();\n    }\n    */\n    const parseTimeZone = (time_string) => {\n        let dt = new Date(time_string);\n        dt.setTime(dt.getTime() - dt.getTimezoneOffset() * 60 * 1000);\n        let formated_str = dt.toLocaleDateString() + \"  \" + dt.toLocaleTimeString('zh-CN', { hour12: false });\n        return formated_str;\n    }\n    const parseSeconds = (sencond_str) => {\n        let sec_num = parseInt(sencond_str);\n        let hours = Math.floor(sec_num / 3600);\n        let minutes = Math.floor((sec_num - (hours * 3600)) / 60);\n        let seconds = sec_num - (hours * 3600) - (minutes * 60);\n\n        if (hours < 10) { hours = \"0\" + hours; }\n        if (minutes < 10) { minutes = \"0\" + minutes; }\n        if (seconds < 10) { seconds = \"0\" + seconds; }\n\n        return hours + ':' + minutes + ':' + seconds;\n    }\n    const parseSortIndex = (status_str) => {\n        if(status_str === \"Working\"){return 5;}\n        else if(status_str === \"Notice\"){return 4;}\n        else if(status_str === \"Moving\"){return 3;}\n        else if(status_str === \"Idle\"){return 2;}\n        else{return 1;}\n    }\n    return (\n        <ThemeProvider theme={darkTheme}>\n            <Card >\n                <CardHeader title={CONTENT.title}\n                    action={(\n                    <FormControl >\n                        <InputLabel id=\"demo-simple-select-label\">WorkShop</InputLabel>\n                        <WorkshopPicker token={token} workshop={workshop} setWorkshop={setWorkshop} />\n                        <LoadingButton\n                        variant=\"contained\"\n                        size=\"large\"\n                        component=\"span\"\n                        sx={{\n                            borderRadius: 4,\n                            minWidth: 200,\n                            justifyContent: 'center',\n                            letterSpacing: 3,\n                            mt:1\n                        }}\n                        loading={loading}\n                        onClick={() => updataData(false)}\n                        >\n                            {CONTENT.update}\n                        </LoadingButton>\n                    </FormControl>)} \n                />\n                <Divider sx={{ borderBottomWidth: 3 }} />\n                <PerfectScrollbar>\n                    {\n                        statusData && \n                        <Box sx={{ minWidth: 800 }}>\n                        <Table>\n                            <TableHead sx={{ background: \"#272d3a\" }}>\n                                <TableRow>\n                                    <TableCell>\n                                        {CONTENT.worker_id}\n                                    </TableCell>\n                                    <TableCell>\n                                        {CONTENT.name}\n                                    </TableCell>\n                                    <TableCell >\n                                        {CONTENT.last_event_end_date}\n                                    </TableCell>\n                                    <TableCell >\n                                        {CONTENT.at_device_cname}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Button id=\"status\" onClick={() => updataData(true)}>{CONTENT.worker_status}</Button>\n                                    </TableCell>\n                                    <TableCell>\n                                        {CONTENT.total_dispatches}\n                                    </TableCell>\n                                    <TableCell>\n                                        {CONTENT.mission_duration}\n                                    </TableCell>\n                                    <TableCell>\n                                        {CONTENT.repair_duration}\n                                    </TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {statusData.map(worker => (\n                                    <TableRow\n                                        hover\n                                        key={worker.worker_id}\n                                    >\n                                        <TableCell>\n                                            {worker.worker_id}\n                                        </TableCell>\n                                        <TableCell>\n                                            {worker.worker_name}\n                                        </TableCell>\n                                        <TableCell>\n                                            {worker.finish_event_date}\n                                        </TableCell>\n                                        <TableCell>\n                                            {\n                                              worker.at_device_cname == null ? worker.at_device : worker.at_device_cname\n                                            }\n                                        </TableCell>\n                                        <TableCell>\n                                            <SeverityPill\n                                                color={(worker.status === 'Working' && 'working')\n                                                    || (worker.status === 'Leave' && 'leave')\n                                                    || (worker.status === 'Notice' && 'notice')\n                                                    || (worker.status === 'Moving' && 'moving')\n                                                    || (worker.status === 'Idle' && 'idle')\n                                                    || 'warning'}\n                                            >\n                                                {CONTENT[worker.status]}\n                                            </SeverityPill>\n                                        </TableCell>\n                                        <TableCell>\n                                            {worker.total_dispatches}\n                                        </TableCell>\n                                        <TableCell>\n                                            {worker.mission_duration}\n                                        </TableCell>\n                                        <TableCell>\n                                            {worker.repair_duration}\n                                        </TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </Box>\n                    }\n                </PerfectScrollbar>\n            </Card>\n        </ThemeProvider>\n    );\n}","import React, { useState } from \"react\";\n\nimport { Avatar, Box, Card, CardContent, Grid, LinearProgress, Typography, TextField, Stack, Switch, SwitchProps } from '@mui/material';\n// import { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\n// import { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker';\nimport { FormControl, Select, MenuItem, InputLabel } from '@mui/material';\n\nexport const DateRange = ({ sDate, eDate, setSDate, setEDate, setShift }) => {\n\n  const [shift_, setShift_] = useState(\"\");\n\n  const handleChange = (event) => {\n    setShift(event.target.value);\n    setShift_(event.target.value);\n  };\n\n  return (\n    <Card\n      sx={{ height: '100%' }}\n    >\n      <CardContent>\n        <Grid\n          container\n          spacing={3}\n          sx={{ justifyContent: 'space-between' }}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"overline\"\n              fontSize=\"large\"\n              sx={{ pt: 4, pr: 1 }}\n            >\n              日期\n            </Typography>\n          </Grid>\n          <Box sx={{ pr: 1, pt: 4 }}>\n            <LocalizationProvider dateAdapter={AdapterDayjs}>\n              <DatePicker\n                label=\"开始日期\"\n                value={sDate}\n                onChange={(newValue) => {\n                  setSDate(newValue);\n                  //console.log(newValue);\n                }}\n                renderInput={(params) => <TextField {...params} />}\n              />\n              {/* <DateTimePicker\n                label=\"开始日期\"\n                value={sDate}\n                onChange={(newValue) => {\n                  setSDate(newValue);\n                }}\n                renderInput={(params) => <TextField {...params} />}\n              /> */}\n            </LocalizationProvider>\n          </Box>\n          <Box sx={{ pt: 4 }}>\n            <LocalizationProvider dateAdapter={AdapterDayjs}>\n              <DatePicker\n                label=\"结束日期\"\n                value={eDate}\n                onChange={(newValue) => {\n                  setEDate(newValue);\n                  //console.log(newValue);\n                }}\n                renderInput={(params) => <TextField {...params} />}\n              />\n            </LocalizationProvider>\n            {/* <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DateTimePicker\n                label=\"结束日期\"\n                value={eDate}\n                onChange={(newValue) => {\n                  setEDate(newValue);\n                  //console.log(newValue);\n                }}\n                renderInput={(params) => <TextField {...params} />}\n              /> */}\n          </Box>\n          <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n            {/* <Typography>夜</Typography>\n              <Switch checked={shift} onChange={handleChange} inputProps={{ 'aria-label': 'controlled' }} />\n              <Typography>日</Typography> */}\n            <FormControl sx={{ mt: 4, mb: 0, mr: 3, ml: 3 }}>\n              <InputLabel id=\"demo-simple-select-label\" >班別</InputLabel>\n              <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={shift_}\n                label=\"WorkShop\"\n                onChange={handleChange}\n                sx={{ minWidth: \"130px\" }}\n              >\n                <MenuItem key=\"no-shift\" value=\"無\">不分班別</MenuItem>\n                <MenuItem key=\"shift-true\" value=\"夜\">夜</MenuItem>\n                <MenuItem key=\"shift-false\" value=\"日\">日</MenuItem>\n              </Select>\n            </FormControl>\n          </Stack>\n        </Grid>\n      </CardContent>\n    </Card >\n  );\n} \n","import React, { useState, useEffect } from \"react\";\n\nimport {\n  Avatar, Box, Card, CardContent, Grid, LinearProgress,\n  Typography, Dialog, DialogTitle, DialogContent, Button, DialogActions\n} from '@mui/material';\nimport InsertChartIcon from '@mui/icons-material/InsertChartOutlined';\n\nconst CONTENT = {\n  title: \"出勤人员\",\n}\n\n\nexport function Rate({ list_data, ...rest }) {\n  useEffect(() => {\n    if (list_data.length > 0) {\n      const display = list_data[0].login_users.map(\n        employees => {\n          return (\n            <Card sx={{\n              m: 1, minWidth: \"500px\"\n            }}\n              key={employees.username}>\n              <CardContent>\n                <Typography\n                  color=\"textSecondary\"\n                  gutterBottom\n                  variant=\"overline\"\n                  fontSize=\"large\"\n                >\n                  员工编号 : {employees.badge}\n                </Typography>\n                <Typography>\n                  员工姓名 : {employees.username}\n                </Typography>\n              </CardContent>\n            </Card>\n          )\n        }\n      )\n      setData(display);\n    }\n  }, [])\n  const [data, setData] = useState();\n  const [open, setOpen] = useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  return (\n\n    <Card\n      sx={{ height: '100%' }}\n    >\n      <CardContent>\n        <Grid\n          container\n          spacing={3}\n          sx={{ justifyContent: 'space-between' }}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"overline\"\n              fontSize=\"large\"\n            >\n              出勤比例\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h4\"\n            >\n              {((list_data[0].percentage) * 100).toFixed(2)}%\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar\n              sx={{\n                backgroundColor: 'secondary.main',\n                height: 56,\n                width: 56\n              }}\n            >\n              <InsertChartIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n        <Box sx={{ pt: 3 }}>\n          <LinearProgress\n            value={list_data}\n            variant=\"determinate\"\n          />\n        </Box>\n        <Box sx={{ pt: 3 }}>\n          <Button variant=\"contained\" onClick={handleClickOpen}>\n            查看\n          </Button>\n          <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            sx={{ width: '100%' }}\n          >\n            <DialogTitle id=\"alert-dialog-title\">\n              {CONTENT.title}\n            </DialogTitle>\n            <DialogContent>\n              {\n                data\n              }\n            </DialogContent>\n            <DialogActions >\n              <Button onClick={handleClose} autoFocus variant=\"contained\">\n                关闭\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n}\n\n\n// export const Rate = ({ rate, ...rest }) => (\n//   <Card\n//     sx={{ height: '100%' }}\n//   >\n//     <CardContent>\n//       <Grid\n//         container\n//         spacing={3}\n//         sx={{ justifyContent: 'space-between' }}\n//       >\n//         <Grid item>\n//           <Typography\n//             color=\"textSecondary\"\n//             gutterBottom\n//             variant=\"overline\"\n//             fontSize=\"large\"\n//           >\n//             出勤比例\n//           </Typography>\n//           <Typography\n//             color=\"textPrimary\"\n//             variant=\"h4\"\n//           >\n//             {(rate).toFixed(2)}%\n//           </Typography>\n//         </Grid>\n//         <Grid item>\n//           <Avatar\n//             sx={{\n//               backgroundColor: 'secondary.main',\n//               height: 56,\n//               width: 56\n//             }}\n//           >\n//             <InsertChartIcon />\n//           </Avatar>\n//         </Grid>\n//       </Grid>\n//       <Box sx={{ pt: 3 }}>\n//         <LinearProgress\n//           value={rate}\n//           variant=\"determinate\"\n//         />\n//       </Box>\n//     </CardContent>\n//   </Card>\n// );\n","import React, { useState, useEffect } from \"react\";\n\nimport {\n  Avatar, Box, Card, CardContent, Grid,\n  Typography, Dialog, DialogTitle, DialogContent, Button, DialogActions\n} from '@mui/material';\nimport BrokenImageSharpIcon from '@mui/icons-material/BrokenImageSharp';\n\nconst CONTENT = {\n  title: \"经常异常装置\",\n\n}\n\nexport function CrashedDevices({ list_data, ...rest }) {\n  useEffect(() => {\n    if (list_data.length > 0) {\n      const display = list_data.map(\n        device => {\n          return (\n            <Card sx={{\n              m: 1, minWidth: \"500px\"\n            }}\n              key={device.device}>\n              <CardContent>\n                <Typography\n                  color=\"textSecondary\"\n                  gutterBottom\n                  variant=\"overline\"\n                  fontSize=\"large\"\n                >\n                  {device.device_id}\n                </Typography>\n                <Typography>\n                  装置名称 : {device.device_cname}\n                </Typography>\n                <Typography>\n                  異常次數 : {device.count}\n                </Typography>\n              </CardContent>\n            </Card>\n          )\n        }\n      )\n      setData(display);\n    }\n  }, [])\n  const [data, setData] = useState();\n  const [open, setOpen] = useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  return (\n    <Card\n      sx={{ height: '100%' }}\n\n    >\n      <CardContent>\n        <Grid\n          container\n          spacing={3}\n          sx={{ justifyContent: 'space-between' }}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"overline\"\n              fontSize=\"large\"\n            >\n              经常异常装置\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h4\"\n            >\n              {list_data.length}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar\n              sx={{\n                backgroundColor: 'info.main',\n                height: 56,\n                width: 56\n              }}\n            >\n              <BrokenImageSharpIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n        <Box sx={{ pt: 3 }}>\n          <Button variant=\"contained\" onClick={handleClickOpen}>\n            查看\n          </Button>\n          <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">\n              {CONTENT.title}\n            </DialogTitle>\n            <DialogContent>\n              {\n                data\n              }\n            </DialogContent>\n            <DialogActions >\n              <Button onClick={handleClose} autoFocus variant=\"contained\">\n                关闭\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n} \n","import React, { useState, useEffect } from \"react\";\n\nimport {\n  Avatar, Box, Card, CardContent, Grid,\n  Typography, Dialog, DialogTitle, DialogContent, Button, DialogActions\n} from '@mui/material';\n\nimport LibraryAddCheckIcon from '@mui/icons-material/LibraryAddCheck';\n\nconst CONTENT = {\n  title: \"接受任务总数的员工排名\",\n\n}\n\nexport function AcceptMissionEmployees({ list_data, ...rest }) {\n  useEffect(() => {\n    if (list_data.length > 0) {\n      const display = list_data.map(\n        employee => {\n          return (\n            <Card sx={{\n              m: 1, minWidth: \"500px\"\n            }}\n              key={employee.username}>\n              <CardContent>\n                <Typography\n                  color=\"textSecondary\"\n                  gutterBottom\n                  variant=\"overline\"\n                  fontSize=\"large\"\n                >\n                  员工 ID : {employee.badge}\n                </Typography>\n                <Typography>\n                  姓名 : {employee.username}\n                </Typography>\n                <Typography>\n                  接受总数 : {employee.count}\n                </Typography>\n              </CardContent>\n            </Card>\n          )\n        }\n      )\n      setData(display);\n    }\n  }, [])\n  const [data, setData] = useState();\n  const [open, setOpen] = useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Card\n      sx={{ height: '100%' }}\n    >\n      <CardContent>\n        <Grid\n          container\n          spacing={3}\n          sx={{ justifyContent: 'space-between' }}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"overline\"\n              fontSize=\"large\"\n            >\n              接受任务总数的员工排名\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h4\"\n            >\n              {list_data.length}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar\n              sx={{\n                backgroundColor: 'success.main',\n                height: 56,\n                width: 56\n              }}\n            >\n              <LibraryAddCheckIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n        <Box sx={{ pt: 3 }}>\n          <Button variant=\"contained\" onClick={handleClickOpen}>\n            查看\n          </Button>\n          <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            sx={{ width: '100%' }}\n          >\n            <DialogTitle id=\"alert-dialog-title\">\n              {CONTENT.title}\n            </DialogTitle>\n            <DialogContent>\n              {\n                data\n              }\n            </DialogContent>\n            <DialogActions >\n              <Button onClick={handleClose} autoFocus variant=\"contained\">\n                关闭\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n} \n","import React, { useState, useEffect } from \"react\";\n\nimport {\n  Avatar, Box, Card, CardContent, Grid,\n  Typography, Dialog, DialogTitle, DialogContent, Button, DialogActions\n} from '@mui/material';\nimport CancelIcon from '@mui/icons-material/Cancel';\n\nconst CONTENT = {\n  title: \"拒绝任务总数的员工排名\",\n}\n\nexport function RejectMissionEmployees({ list_data, ...rest }) {\n  useEffect(() => {\n    if (list_data.length > 0) {\n      const display = list_data.map(\n        employee => {\n          return (\n            <Card sx={{\n              m: 1, minWidth: \"500px\"\n            }} key={employee.username}>\n              <CardContent>\n                <Typography\n                  color=\"textSecondary\"\n                  gutterBottom\n                  variant=\"overline\"\n                  fontSize=\"large\"\n                >\n                  员工 ID : {employee.username}\n                </Typography>\n                <Typography>\n                  姓名 : {employee.full_name}\n                </Typography>\n                <Typography>\n                  拒绝总数 : {employee.count}\n                </Typography>\n              </CardContent>\n            </Card>\n          )\n        }\n      )\n      setData(display);\n    }\n  }, [])\n  const [data, setData] = useState();\n  const [open, setOpen] = useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Card\n      sx={{ height: '100%' }}\n    >\n      <CardContent>\n        <Grid\n          container\n          spacing={3}\n          sx={{ justifyContent: 'space-between' }}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"overline\"\n              fontSize=\"large\"\n            >\n              拒绝任务总数的员工排名\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h4\"\n            >\n              {list_data.length}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar\n              sx={{\n                backgroundColor: 'warning.main',\n                height: 56,\n                width: 56\n              }}\n            >\n              <CancelIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n        <Box sx={{ pt: 3 }}>\n          <Button variant=\"contained\" onClick={handleClickOpen}>\n            查看\n          </Button>\n          <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">\n              {CONTENT.title}\n            </DialogTitle>\n            <DialogContent>\n              {\n                data\n              }\n            </DialogContent>\n            <DialogActions >\n              <Button onClick={handleClose} autoFocus variant=\"contained\">\n                关闭\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n} \n","import React, { useState, useEffect } from \"react\";\n\nimport {\n  Avatar, Box, Card, CardContent, Grid,\n  Typography, Dialog, DialogTitle, DialogContent, Button, DialogActions\n} from '@mui/material';\nimport AssignmentLateIcon from '@mui/icons-material/AssignmentLate';\n\nconst CONTENT = {\n  title: \"前十大历史机台异常任务\",\n}\n\nexport function AbnormalMissions({ list_data, ...rest }) {\n  useEffect(() => {\n    if (list_data.length > 0) {\n      const display = list_data.map(\n        mission => {\n          return (\n            <Card sx={{\n              m: 1, minWidth: \"500px\"\n            }}\n              key={mission.mission_id}>\n              <CardContent>\n                <Typography\n                  color=\"textSecondary\"\n                  gutterBottom\n                  variant=\"overline\"\n                  fontSize=\"large\"\n                >\n                  任务 ID : {mission.mission_id}\n                </Typography>\n                <Typography>\n                  装置 ID : {mission.device_id}\n                </Typography>\n                <Typography>\n                  装置名称 : {mission.device_cname}\n                </Typography>\n                <Typography>\n                  类别 : {mission.categories}\n                </Typography>\n                <Typography>\n                  信息 : {mission.messages}\n                </Typography>\n              </CardContent>\n            </Card>\n          )\n        }\n      )\n      setData(display);\n    }\n  }, [])\n  const [data, setData] = useState();\n  const [open, setOpen] = useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Card\n      sx={{ height: '100%' }}\n    >\n      <CardContent>\n        <Grid\n          container\n          spacing={3}\n          sx={{ justifyContent: 'space-between' }}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"overline\"\n              fontSize=\"large\"\n            >\n              前十大历史机台异常任务\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h4\"\n            >\n              {list_data.length}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar\n              sx={{\n                backgroundColor: 'info.main',\n                height: 56,\n                width: 56\n              }}\n            >\n              <AssignmentLateIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n        <Box sx={{ pt: 3 }}>\n          <Button variant=\"contained\" onClick={handleClickOpen}>\n            查看\n          </Button>\n          <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">\n              {CONTENT.title}\n            </DialogTitle>\n            <DialogContent>\n              {\n                data\n              }\n            </DialogContent>\n            <DialogActions >\n              <Button onClick={handleClose} autoFocus variant=\"contained\">\n                关闭\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n} \n","import React, { useState, useEffect } from \"react\";\n\nimport {\n  Avatar, Box, Card, CardContent, Grid,\n  Typography, Dialog, DialogTitle, DialogContent, Button, DialogActions\n} from '@mui/material';\nimport InsertChartIcon from '@mui/icons-material/InsertChartOutlined';\n\nconst CONTENT = {\n  title: \"机台异常处理时间/次数\",\n}\n\nexport function AbnormalDevices({ list_data, ...rest }) {\n  useEffect(() => {\n    if (list_data.length > 0) {\n      const display = list_data.map(\n        device => {\n          return (\n            <Card sx={{\n              m: 1, minWidth: \"500px\"\n            }}\n              key={device.device_id}>\n              <CardContent>\n                <Typography\n                  color=\"textSecondary\"\n                  gutterBottom\n                  variant=\"overline\"\n                  fontSize=\"large\"\n                >\n                  装置 ID : {device.device_id}\n                </Typography>\n                <Typography>\n                  装置名称 : {device.device_cname}\n                </Typography>\n                <Typography>\n                  类别 : {device.category}\n                </Typography>\n                <Typography>\n                  信息 : {device.messages}\n                </Typography>\n                <Typography>\n                  历史最佳指派员工 : {\n                    device.top_great_assignees &&\n                    device.top_great_assignees.map(user => {\n                      return (\n                        <Card key={user.badge}>\n                          <CardContent>\n                            <Typography\n                              color=\"textSecondary\"\n                              gutterBottom\n                              variant=\"overline\"\n                              fontSize=\"small\"\n                            >\n                              员工 ID : {user.badge}\n                            </Typography>\n                            <Typography fontSize=\"small\">\n                              姓名 : {user.username}\n                            </Typography>\n                            {/* <Typography fontSize=\"small\">\n                              Time(s) : {user.duration}\n                            </Typography> */}\n                          </CardContent>\n                        </Card>\n                      )\n                    })\n                  }\n                </Typography>\n              </CardContent>\n            </Card>\n          )\n        }\n      )\n      setData(display);\n    }\n  }, [])\n  const [data, setData] = useState();\n  const [open, setOpen] = useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Card\n      sx={{ height: '100%' }}\n    >\n      <CardContent>\n        <Grid\n          container\n          spacing={3}\n          sx={{ justifyContent: 'space-between' }}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"overline\"\n              fontSize=\"large\"\n            >\n              机台异常处理时间/次数\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h4\"\n            >\n              {list_data.length}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar\n              sx={{\n                backgroundColor: 'info.main',\n                height: 56,\n                width: 56\n              }}\n            >\n              <InsertChartIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n        <Box sx={{ pt: 3 }}>\n          <Button variant=\"contained\" onClick={handleClickOpen}>\n            查看\n          </Button>\n          <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">\n              {CONTENT.title}\n            </DialogTitle>\n            <DialogContent>\n              {\n                data\n              }\n            </DialogContent>\n            <DialogActions >\n              <Button onClick={handleClose} autoFocus variant=\"contained\">\n                关闭\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n} \n","import React, { useState, useRef } from \"react\";\n\nimport {\n  Box,\n  Card,\n  Grid,\n  FormControl,\n  InputLabel\n} from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { DateRange } from \"../components/date-range.js\";\nimport { Rate } from \"../components/rate.js\";\nimport { CrashedDevices } from \"../components/crashed-devices.js\";\nimport { AcceptMissionEmployees } from \"../components/accept-mission-employees.js\";\nimport { RejectMissionEmployees } from \"../components/reject-mission-employees.js\";\nimport { AbnormalMissions } from \"../components/abnormal-missions.js\";\nimport { AbnormalDevices } from \"../components/abnormal-devices.js\";\nimport { WorkshopPicker } from \"../components/workshop-picker.js\";\nimport { apiStatisticsWithDate, apiStatisticsWithShift } from \"../api.js\";\n\nconst darkTheme = createTheme({\n  palette: {\n    mode: 'dark',\n    background: {\n      default: '#1a1e2b',\n      paper: '#1a1e2b',\n    },\n    text: {\n      primary: '#EDF2F7',\n    },\n    primary: {\n      // Purple and green play nicely together.\n      main: '#5048E5',\n    },\n  },\n});\n\nexport default function Statistics({ token, setAlert, ...rest }) {\n  const _isMounted = useRef(true);\n  const [statusData, setData] = useState();\n  const [workshop, setWorkshop] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const [sDate, setSDate] = useState(new Date());\n  const [eDate, setEDate] = useState(new Date());\n  const [shift, setShift] = useState();\n\n  const updatedata = (data) => {\n    setData(null);\n    console.log(data);\n    setLoading(true);\n    if (data.shift !== null) {\n      // 更改時間，讓時間只剩下日期(正崴需求! (2023/01/10 17:46))\n      // data['start'] = data['start'].substring(0, 10)\n      // data['end'] = data['end'].substring(0, 10)\n\n      apiStatisticsWithShift(data).then(res => {\n        setData(res.data);\n        setAlert({\n          'open': true,\n          'msg': \"更新成功\",\n          'type': 'success'\n        });\n      }).catch(err => {\n        setAlert({\n          'open': true,\n          'msg': \"错误代码：\" + err.response.status,\n          'type': 'error'\n        });\n        console.log(err);\n      }).finally(() => {\n        setLoading(false);\n      });\n    }\n    else {\n      apiStatisticsWithDate(data).then(res => {\n        console.log('APICALL資料(不分班別)')\n        console.log(res.data)\n        setData(res.data);\n        setAlert({\n          'open': true,\n          'msg': \"更新成功\",\n          'type': 'success'\n        });\n      }).catch(err => {\n        setAlert({\n          'open': true,\n          'msg': \"请选取车间\",\n          'type': 'error'\n        });\n        console.log(err);\n      }).finally(() => {\n        setLoading(false);\n      });\n    }\n  }\n  const handleOnClick = () => {\n    if (workshop === \"\") {\n      setAlert({\n        'open': true,\n        'msg': \"请选取车间\",\n        'type': 'error'\n      });\n      return;\n    }\n    let _shift;\n    if (shift == \"夜\") {\n      _shift = true;\n    } else if (shift == \"日\") {\n      _shift = false;\n    } else {\n      _shift = null;\n    }\n    const data = {\n      token: token,\n      start: new Date(sDate).toISOString(),\n      end: new Date(eDate).toISOString(),\n      workshop: workshop,\n      shift: _shift\n    }\n    updatedata(data);\n  }\n\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <Grid\n        container\n        spacing={3}\n        sx={{ pb: 5 }}\n      >\n        <Grid item xs={8}>\n          <DateRange sDate={sDate} eDate={eDate} setSDate={setSDate} setEDate={setEDate} setShift={setShift} />\n        </Grid>\n        <Grid item xs={4} justifyContent={\"center\"}>\n          <Card >\n            <Box>\n              <FormControl sx={{ mt: 3, mb: 3, mr: 3, ml: 3 }}>\n                <InputLabel id=\"demo-simple-select-label\" >WorkShop</InputLabel>\n                <WorkshopPicker token={token} workshop={workshop} setWorkshop={setWorkshop} />\n              </FormControl>\n              <LoadingButton\n                variant=\"contained\"\n                size=\"large\"\n                component=\"span\"\n                sx={{\n                  borderRadius: 4,\n                  justifyContent: 'center',\n                  letterSpacing: 3,\n                  mt: 4\n                }}\n                loading={loading}\n                onClick={handleOnClick}\n              >\n                更新资料\n              </LoadingButton>\n            </Box>\n          </Card>\n        </Grid>\n      </Grid>\n      {\n        statusData &&\n        <Grid\n          container\n          spacing={3}\n        >\n          <Grid\n            item\n            lg={4}\n          >\n            {\n              statusData\n              && <Rate list_data={statusData.login_users_percentage_this_week} />\n              // statusData\n              // && (statusData['login_users_percentage_this_week'] == 0 ? <Rate rate={0} /> :\n              //   <Rate list_data={statusData['login_users_percentage_this_week'][0] * 100} />\n              // )\n              // && <Rate list_data={statusData.login_users_percentage_this_week[1].login_users} />\n            }\n          </Grid>\n          <Grid\n            item\n            lg={4}\n          >\n            {\n              statusData.devices_stats &&\n              <CrashedDevices list_data={statusData.devices_stats.most_frequent_crashed_devices} />\n            }\n          </Grid>\n          <Grid\n            item\n            lg={4}\n          >\n            {\n              statusData.top_most_accept_mission_employees &&\n              <AcceptMissionEmployees list_data={statusData.top_most_accept_mission_employees} />\n            }\n\n          </Grid>\n          <Grid\n            item\n            lg={4}\n          >\n            {\n              statusData.top_most_reject_mission_employees &&\n              <RejectMissionEmployees list_data={statusData.top_most_reject_mission_employees} />\n            }\n\n          </Grid>\n          <Grid\n            item\n            lg={4}\n          >\n            {\n              statusData.devices_stats &&\n              <AbnormalMissions list_data={statusData.devices_stats.top_abnormal_missions_this_month} />\n            }\n\n          </Grid>\n          <Grid\n            item\n            lg={4}\n          >\n            {\n              statusData.devices_stats &&\n              <AbnormalDevices list_data={statusData.devices_stats.top_abnormal_devices} />\n            }\n          </Grid>\n        </Grid>\n      }\n    </ThemeProvider>\n  );\n}","import React, { useState } from \"react\";\n\nimport { saveAs } from 'file-saver';\n\nimport { Box, Card, CardContent, CardHeader, Divider, Typography, createTheme, ThemeProvider,InputLabel, MenuItem, Select,FormControl } from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport { QRCode as QRCodeIcon } from '../icons/qrcode';\nimport { WorkshopPicker } from \"../components/workshop-picker.js\";\n\nimport ArrowCircleDownIcon from '@mui/icons-material/ArrowCircleDown';\n\nimport { apiQRCode } from \"../api.js\";\n\nconst darkTheme = createTheme({\n    palette: {\n        mode:'dark',\n        primary: {\n            main: '#5048E5',\n            light: '#828DF8',\n            dark: '#7582EB',\n            contrastText: '#FFFFFF'\n          },\n        background: {\n            default: '#1a1e2b',\n            paper: '#1a1e2b',\n          },\n          text: {\n            primary: '#fff',\n          }\n    },\n  });\n\n\n\nexport default function QrcodeDownload({token, ...rest}) {\n    const [downloading, setDownload] = useState(false);\n    const [workshop, setWorkshop] = useState(\"\");\n\n    const qrCodeHandler = () => {\n        //let data = `grant_type=&username=${account}&password=${password}&scope=&client_id=&client_secret=`\n        if(workshop != \"\"){\n            setDownload(true);\n            const data = {\n                \"name\" : workshop,\n                \"token\" : token\n            }\n            apiQRCode(data)\n            .then(res => {\n                    saveAs(res.data, `${workshop}.zip`);\n                    setDownload(false);\n                }\n            ).catch(\n                err => {\n                    alert(\"workshop is not found!\");\n                }\n            )\n        }\n    }\n\n    return (\n        <ThemeProvider theme={darkTheme}>\n            <Card >\n                <CardHeader title=\"QR Code 下载\" />\n                <Divider sx={{ borderBottomWidth: 3 }}/>\n                <CardContent>\n                    <Box\n                    sx={{\n                        display: 'flex',\n                        justifyContent: 'center',\n                        pt: 2\n                    }}\n                    >\n                    <QRCodeIcon fontSize=\"large\" />\n                    </Box>\n                    <Box\n                    sx={{\n                        display: 'flex',\n                        justifyContent: 'center',\n                        pt: 2\n                    }}\n                    >   \n                        <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                            请选取要下载的车间\n                        </Typography>\n                    </Box>  \n                    <Box\n                    sx={{\n                        display: 'flex',\n                        justifyContent: 'center',\n                        pt: 2\n                    }}\n                    >\n                        <FormControl >\n                                <InputLabel id=\"demo-simple-select-label\">WorkShop</InputLabel>\n                                <WorkshopPicker token={token} workshop={workshop} setWorkshop={setWorkshop} />\n                                <LoadingButton\n                                    onClick={qrCodeHandler}\n                                    endIcon={<ArrowCircleDownIcon color=\"white\"/>}\n                                    loading={downloading}\n                                    loadingPosition=\"end\"\n                                    variant=\"contained\"\n                                    sx={{m:3}}\n                                    color=\"primary\"\n                                    size=\"large\"\n                                >\n                                    下載\n                                </LoadingButton>\n                        </FormControl>   \n                    </Box>\n                </CardContent>\n            </Card>\n        </ThemeProvider>\n    );\n}\n","import React, { useState } from \"react\";\n\nimport { Box, Card, CardContent, CardHeader, Divider, Typography, createTheme, Container, ThemeProvider,InputLabel, MenuItem, Select,FormControl } from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport MapIcon from '@mui/icons-material/Map';\n\nimport ArrowCircleDownIcon from '@mui/icons-material/ArrowCircleDown';\n\nimport { apiMapGet } from \"../api.js\";\n\nimport { WorkshopPicker } from \"../components/workshop-picker.js\";\n\nconst darkTheme = createTheme({\n    palette: {\n        mode:'dark',\n        primary: {\n            main: '#5048E5',\n            light: '#828DF8',\n            dark: '#7582EB',\n            contrastText: '#FFFFFF'\n          },\n        background: {\n            default: '#1a1e2b',\n            paper: '#1a1e2b',\n          },\n          text: {\n            primary: '#fff',\n          }\n    },\n  });\n\nexport default function Map({token, setAlert, ...rest}) {\n  const [downloading, setDownload] = useState(false);\n    const [workshop, setWorkshop] = useState(\"\");\n    const [img, setImg] = useState();\n\n    const style = {\n        'minWidth': '100%',\n        'maxWidth': '100%'\n    };\n\n    const arrayBufferToBase64 = (buffer) =>  {\n      var binary = '';\n      var bytes = [].slice.call(new Uint8Array(buffer));\n      bytes.forEach((b) => binary += String.fromCharCode(b));\n      const img_component = <img src={`data:image/png;base64,${window.btoa(binary)}`} style={style} />;\n      setImg(img_component);\n  };\n\n    const mapHandler = () => {\n        if(workshop != \"\"){\n            setDownload(true);\n            const data = {\n                \"name\" : workshop,\n                \"token\" : token\n            }\n            apiMapGet(data)\n            .then(res => {\n                    arrayBufferToBase64(res.data);\n                }\n            ).catch(\n                err => {\n                    setAlert({\n                        'open':true,\n                        'msg': \"[404] 無车间地图資料\",\n                        'type': 'error'\n                    })\n                }\n            ).finally(()=>{\n                setDownload(false);\n            })\n        }\n    }\n\n    return (\n        <ThemeProvider theme={darkTheme}>\n            <Card >\n                <CardHeader title=\"车间地图显示\" />\n                <Divider sx={{ borderBottomWidth: 3 }}/>\n                <CardContent>\n                    <Box\n                    sx={{\n                        display: 'flex',\n                        justifyContent: 'center',\n                        pt: 2\n                    }}\n                    >\n                    <MapIcon fontSize=\"large\" />\n                    </Box>\n                    <Box\n                    sx={{\n                        display: 'flex',\n                        justifyContent: 'center',\n                        pt: 2\n                    }}\n                    >   \n                        <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                            请选取要显示的车间\n                        </Typography>\n                    </Box>  \n                    <Box\n                    sx={{\n                        display: 'flex',\n                        justifyContent: 'center',\n                        pt: 2\n                    }}\n                    >\n                        <FormControl >\n                                <InputLabel id=\"demo-simple-select-label\">WorkShop</InputLabel>\n                                <WorkshopPicker token={token} workshop={workshop} setWorkshop={setWorkshop} />\n                                {/* <Select\n                                labelId=\"demo-simple-select-label\"\n                                id=\"demo-simple-select\"\n                                value={workshop}\n                                label=\"WorkShop\"\n                                onChange={handleChange}\n                                >\n                                    {\n                                        selectItem\n                                    }\n                                </Select> */}\n                                <LoadingButton\n                                    onClick={mapHandler}\n                                    endIcon={<ArrowCircleDownIcon color=\"white\"/>}\n                                    loading={downloading}\n                                    loadingPosition=\"end\"\n                                    variant=\"contained\"\n                                    sx={{m:3}}\n                                    color=\"primary\"\n                                    size=\"large\"\n                                >\n                                    显示\n                                </LoadingButton>\n                        </FormControl>   \n                    </Box>\n                    <Box\n                      sx={{\n                        display: 'flex',\n                        justifyContent: 'center',\n                    }}\n                    >\n                    <Container sx={{\n                    width: '-webkit-fill-available',\n                    overflowX:'scroll'}}>\n                        {img}\n                    </Container>\n                    </Box>\n                </CardContent>\n            </Card>\n        </ThemeProvider>\n    );\n}","import React, { useState, useEffect } from \"react\";\n\nimport {\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    Container\n} from '@mui/material';\n\nexport default function ExcelTableView({ keys, datas, id2words, ...rest }) {\n    const [table, setTable] = useState();\n\n    return (\n        <Table sx={{ minWidth: 1000, overflowX: 'scroll' }}>\n            <TableHead sx={{ background: \"#272d3a\" }}>\n                <TableRow >\n                    {\n                        id2words == null ?\n                            keys.map((key, index) => {\n                                return <TableCell sx={{ minWidth: \"100%\" }} key={index}>{key}</TableCell>\n                            }) : id2words.map((key, index) => {\n                                return <TableCell sx={{ minWidth: \"100%\" }} key={index}>{key}</TableCell>\n                            })\n                    }\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {\n                    datas.map((data, i) => {\n                        return (\n                            <TableRow key={i + 1}>\n                                {\n                                    keys.map((key, j) => {\n                                        if(data[key] === true){\n                                            return (\n                                                <TableCell sx={{ minWidth: \"100%\" }} key={key} >\n                                                    {\n                                                        \"是\"\n                                                    }\n                                                </TableCell>\n                                            )\n                                        }else if(data[key] === false){\n                                            return (\n                                                <TableCell sx={{ minWidth: \"100%\" }} key={key} >\n                                                    {\n                                                        \"否\"\n                                                    }\n                                                </TableCell>\n                                            )\n                                        }else{\n                                            return (\n                                                <TableCell sx={{ minWidth: \"100%\" }} key={key} >\n                                                    {\n                                                        data[key]\n                                                    }\n                                                </TableCell>\n                                            )\n                                        }\n                                    })\n                                }\n                            </TableRow>\n                        )\n                    })\n                }\n            </TableBody>\n\n        </Table>\n    );\n}","import React, { useState, useEffect } from \"react\";\n\nimport { Box, Dialog, DialogTitle, DialogContent, Button, DialogActions, TableBody\n} from '@mui/material';\n\nimport ExcelTableView from \"../components/excel-table-view\";\n\nexport function Parameter({csv_data, ...rest}) {\n  useEffect(()=> {\n    setData(csv_data);\n}, [])\n  const [data, setData] = useState();\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  \n  return (\n    <Box sx={{ pt: 3, display: 'flex',\n    justifyContent: 'center' }} >\n      <Button variant=\"contained\" onClick={handleClickOpen}>\n        查看 Parameter\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n        fullScreen\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n        参数\n        </DialogTitle>\n        <DialogContent>\n          {\n            data && \n            <ExcelTableView keys={data['keys']} datas={data['datas']}/>\n          }\n        </DialogContent>\n        <DialogActions sx={{ pt: 3, display: 'flex',\n          justifyContent: 'center' }}>\n            <Button onClick={handleClose} autoFocus variant=\"contained\" size=\"large\">\n            关闭\n            </Button>\n        </DialogActions>\n      </Dialog>\n      </Box>\n  );\n} \n","import React, { useState } from \"react\";\nimport { Container, Snackbar, Box, Typography } from \"@mui/material\";\nimport MuiAlert from '@mui/material/Alert';\n\nexport const AlertComponent = ({ open, setOpen, message, severity, duration }) => {\n  const [state, setState] = useState({\n    vertical: 'top',\n    horizontal: 'center',\n  });\n  const { vertical, horizontal } = state;\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') { return; }\n    setOpen(false);\n  }\n\n  const Alert = React.forwardRef(function Alert(props, ref) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n  });\n\n  return (\n    <Snackbar open={open} autoHideDuration={duration} onClose={handleClose} anchorOrigin={{ vertical, horizontal }} >\n      <Alert onClose={handleClose} severity={severity} sx={{ width: '100%' }}>\n        <Typography variant=\"h6\">\n          {String(message)}\n        </Typography>\n      </Alert>\n    </Snackbar>\n  );\n};\n\n\n","import { createSvgIcon } from '@mui/material/utils';\nimport React from \"react\";\nexport const Upload = createSvgIcon(\n  <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" >\n  <g>\n    <g>\n      <path d=\"m153.7,171.5l81.9-88.1v265.3c0,11.3 9.1,20.4 20.4,20.4 11.3,0 20.4-9.1 20.4-20.4v-265.3l81.9,88.1c7.7,8.3 20.6,8.7 28.9,1.1 8.3-7.7 8.7-20.6 1.1-28.9l-117.3-126.2c-11.5-11.6-25.6-5.2-29.9,0l-117.3,126.2c-7.7,8.3-7.2,21.2 1.1,28.9 8.2,7.6 21.1,7.2 28.8-1.1z\"/>\n      <path d=\"M480.6,341.2c-11.3,0-20.4,9.1-20.4,20.4V460H51.8v-98.4c0-11.3-9.1-20.4-20.4-20.4S11,350.4,11,361.6v118.8    c0,11.3,9.1,20.4,20.4,20.4h449.2c11.3,0,20.4-9.1,20.4-20.4V361.6C501,350.4,491.9,341.2,480.6,341.2z\"/>\n    </g>\n  </g>\n</svg>,\n  'Upload'\n);\n","import React, { useState, useEffect } from \"react\";\n\nimport { styled } from '@mui/material/styles';\nimport {\n    Alert,\n    Box,\n    Card,\n    CardContent,\n    CardHeader,\n    Divider,\n    TextField,\n    Typography,\n    createTheme,\n    ThemeProvider,\n    FormControl,\n    InputLabel,\n    Select,\n    MenuItem,\n} from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport CloudUploadOutlinedIcon from '@mui/icons-material/CloudUploadOutlined';\n\nimport ExcelTableView from \"../components/excel-table-view\";\nimport { Parameter } from \"../components/parameter\";\nimport { AlertComponent } from \"../components/alert-component\";\n\nimport { Upload } from '../icons/upload';\nimport { apiGetFileName } from \"../api.js\";\nimport { apiDevices, apiWorkShopList, apiDevicesData, apiGetSystemEnvSetting, apiPostSystemEnvSetting, apiGetSystemEnvSettingCount, apiPostSystemEnvSettingCount } from \"../api.js\";\n\nconst CONTENT = {\n    id: \"装置 ID\",\n    project: \"专案\",\n    process: \"制程段\",\n    line: \"产线\",\n    device_name: \"装置代号\",\n    device_cname: \"装置名称\",\n    workshop: \"车间\",\n    x_axis: \"X 轴座标\",\n    y_axis: \"Y 轴座标\",\n    is_rescue: \"是否为救援站\",\n    sop_link: \"SOP 链接\"\n}\n\nconst darkTheme = createTheme({\n    palette: {\n        mode: 'dark',\n        primary: {\n            main: '#5048E5',\n            light: '#828DF8',\n            dark: '#7582EB',\n            contrastText: '#FFFFFF'\n        },\n        background: {\n            default: '#1a1e2b',\n            paper: '#1a1e2b',\n        },\n        text: {\n            primary: '#fff',\n        }\n    },\n});\n\nconst Input = styled('input')({\n    display: 'none',\n});\n\nexport default function DevicesUpload({ token, ...rest }) {\n    const [dataStatus, setDataStatus] = useState(\"No File Chosen\");\n    const [uploading, setUpload] = useState(false);\n    const [loading, setLoading] = useState(false);\n    // init workshop\n    const [selectItem, setSelectItem] = useState(\"\");\n    const [workshop, setWorkshop] = useState(\"\");\n    const [keys, setKeys] = useState();\n    const [id2words, setId2Word] = useState();\n    const [datas, setDatas] = useState();\n\n    const [parameter, setParameter] = useState();\n\n    const [alert, setAlert] = useState(false);\n    const [errmsg, setErrMsg] = useState();\n\n    const [rescueStatus, setRescueStatus] = useState(\"\");\n    const [rescueCount, setRescueCount] = useState(\"\");\n    const [rescueTime, setRescueTime] = useState(\"\");\n\n    const [open, setOpen] = useState(false);\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    useEffect(() => {\n        updateData();\n    }, [])\n\n    useEffect(() => {\n        if (errmsg) {\n            setAlert(true);\n        }\n    }, [errmsg])\n\n    const updateData = () => {\n        setUpload(false);\n        setWorkshop(null);\n        setKeys(null);\n        setDatas(null);\n        // 先抓當前救援站數量\n        apiGetSystemEnvSettingCount({ \"key\": \"rescue_count\", token: token }).then(res => {\n            setRescueCount(() => {\n                return (res.data.value)\n            })\n        });\n        // 抓救援站設定\n        apiGetSystemEnvSetting({ \"key\": \"auto_rescue\", token: token }).then(res => {\n            if (res.data.value == \"1\") {\n                setRescueStatus(() => {\n                    return ('自动')\n                })\n            } else {\n                setRescueStatus(() => {\n                    return ('手动')\n                })\n            }\n        });\n        apiWorkShopList(token).then(res => {\n            setSelectItem(res.data.map(name => {\n                return (<MenuItem key={name} value={name}>{name}</MenuItem>)\n            }))\n        }).catch(err => {\n        });\n    }\n\n    // useEffect(() => {\n    //     handleOnClickGetEnv();\n    //     handleOnClickGetCount();\n    // }, [])\n\n    // const handleOnClickGetEnv= () => {\n    //     const data = {\n    //         \"key\": \"auto_rescue\",\n    //         \"token\": token\n    //     }\n    //     apiGetSystemEnvSetting(data).then(res => {\n    //         if (res.data.value == \"1\") {\n    //             setRescueStatus(() => {\n    //                 return ('自动')\n    //             })\n    //         } else {\n    //             setRescueStatus(() => {\n    //                 return ('手动')\n    //             })\n    //         }\n    //     });\n    // }\n    // const handleOnClickGetCount = () => {\n    //     const data = {\n    //         \"key\": \"rescue_count\",\n    //         \"token\": token\n    //     }\n    //     apiGetSystemEnvSettingCount(data).then(res => {\n    //         setRescueCount(() => {\n    //             return (res.data.value)\n    //         })\n    //     });\n    // }\n\n    const fetchData = (name) => {\n        let data = {\n            name: name,\n            token: token\n        }\n        apiDevicesData(data).then(res => {\n\n            let keys = Object.keys(res.data[0]);\n            let newKeys = []\n            keys.map(key => {\n                newKeys.push(CONTENT[key]);\n            })\n            setKeys(keys);\n            setId2Word(newKeys);\n            setDatas(res.data);\n        }).catch(err => {\n            setErrMsg(err.response.statusText);\n        }).finally(() => {\n            setUpload(false);\n        })\n    }\n    const handleWorkshopChange = (event) => {\n        setWorkshop(event.target.value);\n        fetchData(event.target.value);\n    }\n\n    const handleFileChange = (e) => {\n        if (e.target.files.length > 0) {\n\n            setDataStatus(e.target.files[0].name);\n\n            setUpload(true);\n\n            const file = e.target.files[0];\n            let formData = new FormData();\n            formData.append(\"file\", file);\n            formData.append(\"clear_all\", true);\n\n            let data = {};\n            data['token'] = token;\n            data['file'] = formData;\n\n            apiDevices(data).then(res => {\n                if (res.status === 201) {\n                    setUpload(false);\n                    updateData();\n                    let rawdata = res.data['parameter'].split(/\\n/);\n                    let processed_data = [];\n                    let keys = []\n                    rawdata.map((line, i) => {\n                        if (i == 0) {\n                            keys = line.split(',');\n                            keys[0] = 'idx';\n                        } else {\n                            let temp = line.split(',');\n                            let obj = {};\n                            temp.map((item, j) => {\n                                obj[keys[j]] = temp[j];\n                            })\n                            processed_data.push(obj);\n                        }\n                    });\n                    let csv_data = {\n                        'keys': keys,\n                        'datas': processed_data\n                    }\n\n                    setParameter(csv_data);\n                }\n                handleOpen()\n            }).catch(err => {\n                console.log(err);\n                setErrMsg(\"档案格式有误, 请重新上传！\");\n                updateData();\n            })\n        } else {\n            setDataStatus(\"No File Chosen\");\n        }\n    }\n\n    const [deviceName, setDeviceName] = useState();\n\n    useEffect(() => {\n        handleOnClick();\n    })\n\n    const updateFileName = (data) => {\n        apiGetFileName(data).then(res => {\n            // console.log(res.data)\n            setDeviceName(res.data.devices);\n            // setAlert({\n            //     'open': true,\n            //     'msg': \"更新成功\",\n            //     'type': 'success'\n            // });\n        })\n        // .catch(err => {\n        //     console.log(err)\n        //     setAlert({\n        //         'open': true,\n        //         'msg': \"错误代码：\" + err.response,\n        //         'type': 'error'\n        //     });\n        //     console.log(err);\n        // }).finally(() => {\n        //     setLoading(false);\n        // });\n    }\n    const handleOnClick = () => {\n        const data = {\n            \"token\": token,\n        }\n        updateFileName(data);\n    }\n\n    // useEffect(() => {\n    //     valueChange();\n    // })\n\n    // const valueChange = () => {\n    //     const data = {\n    //         token: token,\n    //         key: \"auto_rescue\",\n    //     }\n    //     apiGetSystemEnvSetting(data).then(res => {\n    //         setRescueValue(res.data.value)\n    //         console.log('接到的Settings value')\n    //         console.log(rescueValue)\n    //         if (res.data.value == \"0\") {\n    //             setRescueStatus(\"手動\")\n    //         }\n    //         else if (res.data.value == \"1\") {\n    //             setRescueStatus(\"自動\")\n    //         }\n    //     })\n    // }\n\n    // useEffect(() => {\n    //     // Just run the first time\n    //     const data = {\n    //         \"token\": token,\n    //         \"key\": \"auto_rescue\"\n    //     }\n    //     apiGetSystemEnvSetting(data, res => {\n    //         console.log(res.data)\n    //         if (res.data.value == \"1\") {\n    //             setRescueStatus('自动')\n    //         } else {\n    //             setRescueStatus('手动')\n    //         }\n    //     })\n    // })\n\n    // 設定救援站設定\n    const handleOnClickSetting = () => {\n        let temp = \"\"\n        if (rescueStatus == \"自动\") {\n            temp = \"0\"\n        } else {\n            temp = \"1\"\n        }\n        const data = {\n            \"token\": token,\n            \"key\": 'auto_rescue',\n            \"value\": temp\n        }\n        apiPostSystemEnvSetting(data).then(res => {\n            if (res.data.value == \"1\") {\n                setRescueStatus(() => {\n                    return ('自动')\n                })\n                handleOpen()\n            } else {\n                setRescueStatus(() => {\n                    return ('手动')\n                })\n                handleOpen()\n            }\n        }).catch(err => {\n            console.log(err);\n            setErrMsg(\"更新失败！\");\n        })\n        // apiGetSystemEnvSetting(data).then(res => {\n        //     if (res.data.value == '0') {\n        //         data.value = '1'\n        //         apiPostSystemEnvSetting(data)\n        //         console.log('我要 Post 內容')\n        //         console.log(data.value)\n        //         console.log(data.token)\n        //         setRescueStatus('自动')\n        //     }\n        //     else if (res.data.value == '1') {\n        //         data.value = '0'\n        //         apiPostSystemEnvSetting(data)\n        //         console.log('我要 Post 內容')\n        //         console.log(data.value)\n        //         setRescueStatus('手动')\n        //     }\n        // })\n    }\n\n    // 設定救援站數量\n    const handleOnClickSettingQuantity = () => {\n        const data = {\n            \"token\": token,\n            \"key\": 'rescue_count',\n            \"value\": rescueCount\n        }\n        data.value = document.getElementById('quantity').value;\n        apiPostSystemEnvSettingCount(data).catch(err => {\n            console.log(err);\n            setErrMsg(\"更新失败！\");\n        })\n        handleOpen()\n        setRescueCount(document.getElementById('quantity').value)\n    }\n\n    // 設定救援站區間\n    // const handleOnClickSettingTime = () => {\n    //     const data = {\n    //         \"token\": token,\n    //         \"key\": 'rescue_count',\n    //         \"value\": rescueCount,\n    //         \"start\": 0,\n    //         \"end\": 0\n    //     }\n    //     data.start = document.getElementById('start').value;\n    //     data.end = document.getElementById('end').value;\n    //     apiPostSystemEnvSettingCount(data).catch(err => {\n    //         console.log(err);\n    //         setErrMsg(\"更新失败！\");\n    //     })\n    //     handleOpen()\n    //     setRescueTime(document.getElementById('start').value + document.getElementById('end').value)\n    // }\n\n    return (\n        <ThemeProvider theme={darkTheme}>\n            <AlertComponent open={alert} setOpen={setAlert} message={errmsg} severity={\"error\"} />\n            <AlertComponent open={open} setOpen={setOpen} message=\"更新成功\" severity={\"success\"} />\n            <Card >\n                <CardHeader title=\"车间 Layout 座标表上传\" />\n                <Divider sx={{ borderBottomWidth: 3 }} />\n                <CardContent>\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n\n                        }}\n                    >\n                        <Upload fontSize=\"large\" />\n                    </Box>\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <label htmlFor=\"contained-button-file\">\n                            <Input type=\"file\" accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\" id=\"contained-button-file\" onChange={handleFileChange} />\n                            <LoadingButton\n                                color=\"success\"\n                                variant=\"contained\"\n                                size=\"large\"\n                                component=\"span\"\n                                startIcon={<CloudUploadOutlinedIcon sx={{ mr: 1 }} />}\n                                sx={{\n                                    borderRadius: 4,\n                                    minWidth: 200,\n                                    justifyContent: 'center',\n                                    letterSpacing: 3,\n                                }}\n                                type=\"input\"\n                                loading={uploading}\n                            >\n                                {\n                                    uploading ? \"上传中...\" : \"选择档案\"\n                                }\n                            </LoadingButton>\n                        </label>\n                    </Box>\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                            {dataStatus}\n                        </Typography>\n                    </Box>\n                    {\n                        parameter && (\n                            <Box\n                                sx={{\n                                    display: 'flex',\n                                    justifyContent: 'center',\n                                    pt: 2\n                                }}\n                            >\n                                <Divider sx={{ borderBottomWidth: 3 }} />\n                                <Parameter csv_data={parameter} />\n                            </Box>\n                        )\n                    }\n                    <Divider sx={{ borderBottomWidth: 3, m: 3 }} />\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <Typography\n                            color=\"textSecondary\"\n                            gutterBottom\n                            variant=\"overline\"\n                            fontSize=\"large\"\n                        >\n                            目前救援站狀態:{rescueStatus}\n                        </Typography>\n                    </Box>\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <LoadingButton\n                            variant=\"contained\"\n                            size=\"large\"\n                            component=\"span\"\n                            sx={{\n                                borderRadius: 4,\n                                justifyContent: 'center',\n                                letterSpacing: 3,\n                                mt: 2\n                            }}\n                            loading={loading}\n                            onClick={handleOnClickSetting}\n                        >\n                            救援站开关\n                        </LoadingButton>\n                    </Box>\n                    <Divider sx={{ borderBottomWidth: 3, m: 3 }} />\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <Typography\n                            color=\"textSecondary\"\n                            gutterBottom\n                            variant=\"overline\"\n                            fontSize=\"large\"\n                        >\n                            目前救援站数量:{rescueCount}\n                        </Typography>\n                    </Box>\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <TextField\n                            label=\"请输入救援站数量\"\n                            margin=\"normal\"\n                            name=\"quantity\"\n                            id=\"quantity\"\n                            variant=\"outlined\"\n                        />\n                        <LoadingButton\n                            variant=\"contained\"\n                            size=\"medium\"\n                            component=\"span\"\n                            sx={{\n                                borderRadius: 4,\n                                justifyContent: 'center',\n                                letterSpacing: 3,\n                                mt: 2,\n                                ml: 2\n                            }}\n                            loading={loading}\n                            onClick={handleOnClickSettingQuantity}\n                        >\n                            更新数量\n                        </LoadingButton>\n                    </Box>\n                    {/* <Divider sx={{ borderBottomWidth: 3, m: 3 }} />\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <Typography\n                            color=\"textSecondary\"\n                            gutterBottom\n                            variant=\"overline\"\n                            fontSize=\"large\"\n                        >\n                            目前救援站區間:{rescueTime}\n                        </Typography>\n                    </Box>\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <TextField\n                            label=\"请输入救援站區間\"\n                            margin=\"normal\"\n                            name=\"start\"\n                            id=\"start\"\n                            variant=\"outlined\"\n                        />\n                        <TextField\n                            label=\"请输入救援站區間\"\n                            margin=\"normal\"\n                            name=\"end\"\n                            id=\"end\"\n                            variant=\"outlined\"\n                        />\n                        <LoadingButton\n                            variant=\"contained\"\n                            size=\"medium\"\n                            component=\"span\"\n                            sx={{\n                                borderRadius: 4,\n                                justifyContent: 'center',\n                                letterSpacing: 3,\n                                mt: 2,\n                                ml: 2\n                            }}\n                            loading={loading}\n                            onClick={handleOnClickSettingTime}\n                        >\n                            更新區間\n                        </LoadingButton>\n                    </Box> */}\n                    <Divider sx={{ borderBottomWidth: 3, m: 3 }} />\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <LoadingButton\n                            variant=\"contained\"\n                            size=\"large\"\n                            component=\"span\"\n                            sx={{\n                                borderRadius: 4,\n                                justifyContent: 'center',\n                                letterSpacing: 3,\n                                mt: 2\n                            }}\n                            loading={loading}\n                            onClick={handleOnClick}\n                        >\n                            更新资料\n                        </LoadingButton>\n                    </Box>\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <Typography\n                            color=\"textSecondary\"\n                            gutterBottom\n                            variant=\"overline\"\n                            fontSize=\"large\"\n                        >\n                            档案名称:{deviceName}\n                        </Typography>\n                    </Box>\n                    {\n                        selectItem &&\n                        <Box\n                            sx={{\n                                display: 'flex',\n                                justifyContent: 'center',\n                                m: 2\n                            }}\n                        >\n                            <Typography sx={{ m: 1 }}>\n                                现有资料 :\n                            </Typography>\n                            <FormControl sx={{ width: 300 }}>\n                                <InputLabel id=\"workshop-label\">Workshop</InputLabel>\n                                <Select\n                                    labelId=\"workshop-label\"\n                                    id=\"workshop-select\"\n                                    value={workshop == null ? '' : workshop}\n                                    onChange={handleWorkshopChange}\n                                >\n                                    {\n                                        selectItem\n                                    }\n                                </Select>\n                            </FormControl>\n                        </Box>\n                    }\n                    <Box>\n                        {\n                            keys && datas && id2words &&\n                            <ExcelTableView keys={keys} datas={datas} id2words={id2words} />\n                        }\n                    </Box>\n                </CardContent>\n            </Card>\n        </ThemeProvider>\n    );\n}","import React, { useState, useEffect } from \"react\";\n\nimport {\n  Table, TableRow, TableHead, TableCell, Box, Card, CardContent, Dialog, DialogTitle, DialogContent, Button, DialogActions, TableBody\n} from '@mui/material';\n\nconst CONTENT = {\n  project: \"专案\",\n  process: \"制程段\",\n  device_name: \"装置代号\",\n  line: \"产线\",\n  exp: \"经验值\"\n}\n\nexport function WorkExperiences({ list_data, ...rest }) {\n  useEffect(() => {\n    let keys = [\"project\", \"process\", \"device_name\", \"line\", \"exp\"]\n    const display = (\n      <Card sx={{\n        m: 1,\n      }}\n        key=\"ex-card\">\n        <CardContent >\n          <Table>\n            <TableHead sx={{ background: \"#272d3a\" }}>\n              <TableRow>\n                {\n                  keys.map((key, index) => {\n                    return <TableCell key={index}>{CONTENT[key]}</TableCell>\n                  })\n                }\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {\n                list_data.map(\n                  exp => {\n                    return (\n                      <TableRow>\n                        {\n                          keys.map((key, index) => {\n                            return <TableCell key={exp[key]}>{exp[key]}</TableCell>\n                          })\n                        }\n                      </TableRow>\n                    )\n                  })\n              }\n            </TableBody>\n          </Table>\n        </CardContent>\n      </Card>\n    )\n    setData(display);\n  }, [])\n  const [data, setData] = useState();\n  const [open, setOpen] = useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Box sx={{ pt: 3, minWidth: '100%' }}>\n      <Button variant=\"contained\" onClick={handleClickOpen}>\n        查看\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n        sx={{ minWidth: '900px' }}\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          经验\n        </DialogTitle>\n        <DialogContent>\n          {\n            data\n          }\n        </DialogContent>\n        <DialogActions >\n          <Button onClick={handleClose} autoFocus variant=\"contained\">\n            关闭\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n} \n","import React, { useState, useEffect } from \"react\";\n\nimport { styled } from '@mui/material/styles';\nimport {\n    Box,\n    Card,\n    CardContent,\n    CardHeader,\n    Divider,\n    Typography,\n    createTheme,\n    ThemeProvider,\n    Table,\n    TableHead,\n    TableBody,\n    TableRow,\n    TableCell,\n    FormControl,\n    InputLabel,\n    Button\n} from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport CloudUploadOutlinedIcon from '@mui/icons-material/CloudUploadOutlined';\n\nimport { WorkExperiences } from \"../components/worker-experiences\";\nimport { Parameter } from \"../components/parameter\";\nimport { AlertComponent } from \"../components/alert-component\";\nimport { WorkshopPicker } from \"../components/workshop-picker.js\";\n\nimport { Upload } from '../icons/upload';\n\nimport { apiGetFileName } from \"../api.js\";\nimport { apiWorkerinfos, apiWorkerAll } from \"../api.js\";\n\nconst CONTENT = {\n    badge: \"员工 ID\",\n    username: \"姓名\",\n    workshop: \"车间\",\n    level: \"层级\",\n    shift: \"班别\",\n    superior: \"领导\",\n    experiences: \"经验\",\n}\n\nconst darkTheme = createTheme({\n    palette: {\n        mode: 'dark',\n        primary: {\n            main: '#5048E5',\n            light: '#828DF8',\n            dark: '#7582EB',\n            contrastText: '#FFFFFF'\n        },\n        background: {\n            default: '#1a1e2b',\n            paper: '#1a1e2b',\n        },\n        text: {\n            primary: '#fff',\n        }\n    },\n});\n\nconst infotable = (datas) => {\n    console.log(datas)\n    let keys = [\"badge\", \"username\", \"workshop\", \"level\", \"shift\", \"superior\", \"experiences\"]\n    return (\n        <div>\n            <Table >\n                <TableHead>\n                    <TableRow>\n                        <TableCell>\n                            日班\n                        </TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableHead sx={{ background: \"#272d3a\" }}>\n                    <TableRow>\n                        {\n                            keys.map((key, index) => {\n                                return <TableCell key={index}>{CONTENT[key]}</TableCell>\n                            })\n                        }\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {\n                        datas['day_shift'].map((data, i) => {\n                            return (\n                                <TableRow key={i + 1}>\n                                    {\n                                        keys.map((key, j) => {\n                                            if (key == \"shift\") {\n                                                return (\n                                                    <TableCell key={key}>\n                                                        {\n                                                            \"日\"\n                                                        }\n                                                    </TableCell>\n                                                )\n                                            }\n                                            else if (key == \"experiences\") {\n                                                return (\n                                                    <TableCell key={`${key}_btn`}>\n                                                        {\n                                                            <WorkExperiences list_data={data[\"experiences\"]}>Experiences</WorkExperiences>\n                                                        }\n                                                    </TableCell>\n                                                )\n                                            }\n                                            else {\n                                                return (\n                                                    <TableCell key={key}>\n                                                        {\n                                                            data[key]\n                                                        }\n                                                    </TableCell>\n                                                )\n                                            }\n\n                                        })\n                                    }\n                                </TableRow>\n                            )\n                        })\n                    }\n                </TableBody>\n            </Table>\n            <Divider sx={{ borderBottomWidth: 3, m: 3 }} />\n            <Table >\n                <TableHead>\n                    <TableRow>\n                        <TableCell>\n                            夜班\n                        </TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableHead sx={{ background: \"#272d3a\" }}>\n                    <TableRow >\n                        {\n                            keys.map((key, index) => {\n                                return <TableCell key={index}>{CONTENT[key]}</TableCell>\n                            })\n                        }\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {\n                        datas['night_shift'].map((data, i) => {\n                            return (\n                                <TableRow key={i + 1}>\n                                    {\n                                        keys.map((key, j) => {\n                                            if (key == \"shift\") {\n                                                return (\n                                                    <TableCell key={key}>\n                                                        {\n                                                            \"夜\"\n                                                        }\n                                                    </TableCell>\n                                                )\n                                            }\n                                            else if (key == \"experiences\") {\n                                                return (\n                                                    <TableCell key={`${key}_btn`}>\n                                                        {\n                                                            <WorkExperiences list_data={data[\"experiences\"]}>Experiences</WorkExperiences>\n                                                        }\n                                                    </TableCell>\n                                                )\n                                            }\n                                            else {\n                                                return (\n                                                    <TableCell key={key}>\n                                                        {\n                                                            data[key]\n                                                        }\n                                                    </TableCell>\n                                                )\n                                            }\n\n                                        })\n                                    }\n                                </TableRow>\n                            )\n                        })\n                    }\n                </TableBody>\n            </Table>\n        </div>\n    )\n}\n// Style component\nconst Input = styled('input')({\n    display: 'none',\n});\n\nexport default function WorkerinfoUpload({ token, setAlert, ...rest }) {\n    const [workerFile, setWorkFile] = useState();\n    const [deviceFile, setDeviceFile] = useState();\n\n\n    const [dataStatus, setDataStatus] = useState(\"\");\n    const [uploading, setUpload] = useState(false);\n    const [loading, setLoading] = useState(false);\n\n    const [data, setData] = useState();\n\n    const [parameter, setParameter] = useState();\n\n    const [workshop, setWorkshop] = useState(\"\");\n\n    useEffect(() => {\n        //UpdateData();\n        if (workshop != \"\") {\n            UpdateData();\n        }\n    }, [workshop])\n    String.prototype.replaceAt = function (index, char) {\n        var a = this.split(\"\");\n        a[index] = char;\n        return a.join(\"\");\n    }\n\n    const UpdateData = () => {\n        setDataStatus(\"Loading Data ...\");\n        let data = {\n            'token': token,\n            'workshop': workshop\n        };\n\n        apiWorkerAll(data).then(res => {\n            setData(res.data);\n            console.log(res.data);\n        }).catch(err => {\n            console.log(err);\n            setAlert({\n                'open': true,\n                'msg': \"資料载入異常\",\n                'type': 'error'\n            });\n        }).finally(() => {\n            setDataStatus(\"\");\n        })\n    }\n\n    const parseParm = (str) => {\n        let rawdata = str.split(/\\n/);\n        let processed_data = [];\n        let keys = []\n        // Data processing\n        rawdata.map((line, i) => {\n            if (i == 0) {\n                keys = line.split(',');\n                keys[0] = 'idx';\n            } else {\n                let flag = false;\n                for (let i = 0; i < line.length; i++) {\n                    if (line[i] == '(') {\n                        flag = true;\n                    }\n                    if (flag == true) {\n                        if (line[i] == ',') continue;\n                        if (line[i] == ')') flag = false;\n                    } else {\n                        if (line[i] == ',') line = line.replaceAt(i, '@');\n                    }\n                }\n                let temp = line.split('@');\n                let obj = {}\n                temp.map((item, j) => {\n                    obj[keys[j]] = temp[j];\n                })\n                processed_data.push(obj);\n            }\n\n        })\n        let csv_data = {\n            'keys': keys,\n            'datas': processed_data\n        }\n        setParameter(csv_data);\n    }\n\n    const workerFileChangeHandler = (event) => {\n        if (event.target.files.length > 0) {\n            setWorkFile(event.target.files[0]);\n        }\n    };\n    const deviceFileChangeHandler = (event) => {\n        if (event.target.files.length > 0) {\n            setDeviceFile(event.target.files[0]);\n        }\n    };\n    const postData = (data) => {\n        apiWorkerinfos(data).then(res => {\n            parseParm(res.data);\n            setAlert({\n                'open': true,\n                'msg': \"上传成功\",\n                'type': 'success'\n            });\n        }).catch(err => {\n            console.log(err);\n            setAlert({\n                'open': true,\n                'msg': \"上传錯誤\",\n                'type': 'error'\n            });\n        }).finally(() => {\n            setUpload(false);\n            setWorkFile(null);\n            setDeviceFile(null);\n        });\n    }\n    const handleUpload = () => {\n        if (workerFile == null) {\n            setAlert({\n                'open': true,\n                'msg': \"请完整选取档案\",\n                'type': 'error'\n            });\n        }\n        else {\n            setUpload(true);\n            let fd = new FormData();\n            fd.append(\"worker_file\", workerFile);\n            //fd.append(\"device_file\", deviceFile)\n            let data = {\n                'token': token,\n                'file': fd\n            };\n            postData(data);\n        }\n    }\n\n    const [workerinfoName, setWorkerinfoName] = useState();\n\n    useEffect(() => {\n        handleOnClick();\n    })\n\n    const updateFileName = (data) => {\n        apiGetFileName(data).then(res => {\n            console.log(res.data)\n            setWorkerinfoName(res.data.worker);\n            // setAlert({\n            //     'open': true,\n            //     'msg': \"更新成功\",\n            //     'type': 'success'\n            // });\n        })\n        // .catch(err => {\n        //     console.log(err)\n        //     setAlert({\n        //         'open': true,\n        //         'msg': \"错误代码：\" + err.response,\n        //         'type': 'error'\n        //     });\n        //     console.log(err);\n        // }).finally(() => {\n        //     setLoading(false);\n        // });\n    }\n    const handleOnClick = () => {\n        const data = {\n            token: token,\n        }\n        updateFileName(data);\n    }\n\n    return (\n        <ThemeProvider theme={darkTheme}>\n            <Card >\n                <CardHeader title=\"员工专职表上传\" />\n                <Divider sx={{ borderBottomWidth: 3 }} />\n                <CardContent>\n                    {/* icon */}\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n\n                        }}\n                    >\n                        <Upload fontSize=\"large\" />\n                    </Box>\n                    {/* 員工專職 */}\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <label htmlFor=\"contained-button-work-file\">\n                            <Input type=\"file\" accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\" id=\"contained-button-work-file\" onChange={workerFileChangeHandler} />\n                            <LoadingButton\n                                color=\"success\"\n                                variant=\"contained\"\n                                size=\"large\"\n                                component=\"span\"\n                                startIcon={<CloudUploadOutlinedIcon sx={{ mr: 1 }} />}\n                                sx={{\n                                    borderRadius: 4,\n                                    minWidth: 200,\n                                    justifyContent: 'center',\n                                    letterSpacing: 3,\n                                }}\n                                type=\"input\"\n                                loading={uploading}\n                            >\n                                {\n                                    workerFile ? \"已载入\" : \"选择员工专职表\"\n                                }\n                            </LoadingButton>\n                        </label>\n                    </Box>\n                    {/* 座標表 */}\n                    {/* <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <label htmlFor=\"contained-button-device-file\">\n                            <Input type=\"file\" accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\" id=\"contained-button-device-file\" onChange={deviceFileChangeHandler} />\n                            <LoadingButton\n                                color=\"success\"\n                                variant=\"contained\"\n                                size=\"large\"\n                                component=\"span\"\n                                startIcon={<CloudUploadOutlinedIcon sx={{ mr: 1 }} />}\n                                sx={{\n                                    borderRadius: 4,\n                                    minWidth: 200,\n                                    justifyContent: 'center',\n                                    letterSpacing: 3,\n                                }}\n                                type=\"input\"\n                                loading={uploading}\n                            >\n                                {\n                                    deviceFile ? \"已载入\" : \"选择座标表档案\"\n                                }\n                            </LoadingButton>\n                        </label>\n                    </Box> */}\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <LoadingButton\n                            variant=\"contained\"\n                            size=\"large\"\n                            component=\"span\"\n                            sx={{\n                                borderRadius: 4,\n                                justifyContent: 'center',\n                                letterSpacing: 3,\n                                mt: 4\n                            }}\n                            loading={uploading}\n                            onClick={handleUpload}\n                        >\n                            上传资料\n                        </LoadingButton>\n                    </Box>\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                            {dataStatus}\n                        </Typography>\n                    </Box>\n                    <Divider sx={{ borderBottomWidth: 3, m: 3 }} />\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <LoadingButton\n                            variant=\"contained\"\n                            size=\"large\"\n                            component=\"span\"\n                            sx={{\n                                borderRadius: 4,\n                                justifyContent: 'center',\n                                letterSpacing: 3,\n                                mt: 2\n                            }}\n                            loading={loading}\n                            onClick={handleOnClick}\n                        >\n                            更新资料\n                        </LoadingButton>\n                    </Box>\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <Typography\n                            color=\"textSecondary\"\n                            gutterBottom\n                            variant=\"overline\"\n                            fontSize=\"large\"\n                        >\n                            档案名称:{workerinfoName}\n                        </Typography>\n                    </Box>\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            m: 2\n                        }}\n                    >\n                        <Typography sx={{ m: 1 }}>\n                            现有资料 :\n                        </Typography>\n                        <FormControl >\n                            <InputLabel id=\"demo-simple-select-label\">WorkShop</InputLabel>\n                            <WorkshopPicker token={token} workshop={workshop} setWorkshop={setWorkshop} />\n                        </FormControl>\n                    </Box>\n                    {\n                        parameter && (\n                            <Box\n                                sx={{\n                                    display: 'flex',\n                                    justifyContent: 'center',\n                                    pt: 2\n                                }}\n                            >\n                                <Parameter csv_data={parameter} />\n                            </Box>\n                        )\n                    }\n                    <Box>\n                        {\n                            data && infotable(data)\n                        }\n                    </Box>\n                </CardContent>\n            </Card>\n        </ThemeProvider>\n    )\n}","import React, { useState, useEffect, useReducer } from \"react\";\nimport { styled } from '@mui/material/styles';\nimport {\n    Box,\n    Card,\n    CardContent,\n    CardHeader,\n    Divider,\n    Typography,\n    createTheme,\n    ThemeProvider,\n} from '@mui/material';\n\nimport LoadingButton from '@mui/lab/LoadingButton';\n\nimport CloudUploadOutlinedIcon from '@mui/icons-material/CloudUploadOutlined';\nimport { Upload } from '../icons/upload';\n\nimport { apiMapPost } from \"../api.js\";\nimport { apiGetFileName } from \"../api.js\";\n\nimport { AlertComponent } from \"../components/alert-component\";\n\n\nconst darkTheme = createTheme({\n    palette: {\n        mode: 'dark',\n        primary: {\n            main: '#5048E5',\n            light: '#828DF8',\n            dark: '#7582EB',\n            contrastText: '#FFFFFF'\n        },\n        background: {\n            default: '#1a1e2b',\n            paper: '#1a1e2b',\n        },\n        text: {\n            primary: '#fff',\n        }\n    },\n});\n\nconst Input = styled('input')({\n    display: 'none',\n});\n\nexport default function MapUpload({ token, ...rest }) {\n    const [dataStatus, setDataStatus] = useState(\" No File Chosen\");\n    const [uploading, setUpload] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [errmsg, setErrMsg] = useState();\n    const [alert, setAlert] = useState(false);\n\n    useEffect(() => {\n        if (errmsg) {\n            setAlert(true);\n        }\n    }, [errmsg])\n\n    const handleFileChange = (e) => {\n        if (e.target.files.length > 0) {\n            let filename = e.target.files[0].name;\n            let regex = filename.match(/Layout_(.+)_([0-9]+)/);\n\n            if (regex && regex.length == 3) {\n                let filename = regex[1];\n                setDataStatus(filename);\n\n                setUpload(true);\n\n                const file = e.target.files[0];\n                let formData = new FormData();\n                formData.append(\"image\", file);\n\n                let data = {};\n                data['token'] = token;\n                data['file'] = formData;\n                data['name'] = filename;\n\n                apiMapPost(data).then(res => {\n                    setDataStatus(\"上传完毕\");\n                }).catch(err => {\n                    // 後端沒有擋擋名錯誤\n                    setErrMsg(err.response.statusText);\n                }).finally(() => {\n                    setUpload(false);\n                })\n\n            } else {\n                setErrMsg(\"档名有误, 请重新上传！\");\n                document.getElementById('contained-button-file').value = null;\n                console.log(document.getElementById('contained-button-file').value);\n            }\n        } else {\n            setDataStatus(\"No File Chosen\");\n        }\n    }\n\n    const [mapName, setMapName] = useState();\n\n    useEffect(() => {\n        handleOnClick();\n    })\n\n    const updateFileName = (data) => {\n        apiGetFileName(data).then(res => {\n            console.log(res.data)\n            setMapName(res.data.images);\n            // setAlert({\n            //     'open': true,\n            //     'msg': \"更新成功\",\n            //     'type': 'success'\n            // });\n        })\n        // .catch(err => {\n        //     console.log(err)\n        //     setAlert({\n        //         'open': true,\n        //         'msg': \"错误代码：\" + err.response,\n        //         'type': 'error'\n        //     });\n        //     console.log(err);\n        // }).finally(() => {\n        //     setLoading(false);\n        // });\n    }\n    const handleOnClick = () => {\n        const data = {\n            token: token,\n        }\n        updateFileName(data);\n    }\n\n    return (\n        <ThemeProvider theme={darkTheme}>\n            <AlertComponent open={alert} setOpen={setAlert} message={errmsg} severity={\"error\"} />\n            <Card >\n                <CardHeader title=\"车间 Layout 图上传\" />\n                <Divider sx={{ borderBottomWidth: 3 }} />\n                <CardContent>\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n\n                        }}\n                    >\n                        <Upload fontSize=\"large\" />\n                    </Box>\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <label htmlFor=\"contained-button-file\">\n                            <Input type=\"file\" accept=\"image/png\" id=\"contained-button-file\" onChange={handleFileChange} value='' />\n                            <LoadingButton\n                                color=\"success\"\n                                variant=\"contained\"\n                                size=\"large\"\n                                component=\"span\"\n                                startIcon={<CloudUploadOutlinedIcon sx={{ mr: 1 }} />}\n                                sx={{\n                                    borderRadius: 4,\n                                    minWidth: 200,\n                                    justifyContent: 'center',\n                                    letterSpacing: 3,\n                                }}\n                                type=\"input\"\n                                loading={uploading}\n                            >\n                                {\n                                    uploading ? \"上传中...\" : \"选择档案\"\n                                }\n                            </LoadingButton>\n                        </label>\n                    </Box>\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                            {dataStatus}\n                        </Typography>\n                    </Box>\n                    <Divider sx={{ borderBottomWidth: 3, m: 3 }} />\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <LoadingButton\n                            variant=\"contained\"\n                            size=\"large\"\n                            component=\"span\"\n                            sx={{\n                                borderRadius: 4,\n                                justifyContent: 'center',\n                                letterSpacing: 3,\n                                mt: 2\n                            }}\n                            loading={loading}\n                            onClick={handleOnClick}\n                        >\n                            更新资料\n                        </LoadingButton>\n                    </Box>\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <Typography\n                            color=\"textSecondary\"\n                            gutterBottom\n                            variant=\"overline\"\n                            fontSize=\"large\"\n                        >\n                            档案名称:{mapName}\n                        </Typography>\n                    </Box>\n                </CardContent>\n            </Card>\n        </ThemeProvider>\n    )\n}","import React, { useState, useEffect } from \"react\";\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n    Box,\n    Button,\n    Card,\n    CardHeader,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    createTheme,\n    ThemeProvider,\n    Divider,\n} from '@mui/material';\nimport { Typography, Container, InputLabel, MenuItem, Select, FormControl } from '@mui/material';\n\nimport { apiGetWhiteList, apiGetDeviceNameById, apiWorkShopList, apiGetDeviceRecommend, apiGetWorkersByDevice, apiPostAddWorkersWhitelist, apiDeleteWorkersWhitelist } from \"../api.js\";\n\nconst darkTheme = createTheme({\n    palette: {\n        mode: 'dark',\n        background: {\n            default: '#1a1e2b',\n            paper: '#1a1e2b',\n        },\n        text: {\n            primary: '#EDF2F7',\n        },\n        secondary: {\n            main: '#10B981',\n            light: '#3FC79A',\n            dark: '#0B815A',\n            contrastText: '#FFFFFF'\n        },\n        success: {\n            main: '#14B8A6',\n            light: '#43C6B7',\n            dark: '#0E8074',\n            contrastText: '#FFFFFF'\n        },\n        info: {\n            main: '#2196F3',\n            light: '#64B6F7',\n            dark: '#0B79D0',\n            contrastText: '#FFFFFF'\n        },\n        warning: {\n            main: '#FFB020',\n            light: '#FFBF4C',\n            dark: '#B27B16',\n            contrastText: '#FFFFFF'\n        },\n        error: {\n            main: '#D14343',\n            light: '#DA6868',\n            dark: '#922E2E',\n            contrastText: '#FFFFFF'\n        },\n    },\n});\n\nconst CONTENT = {\n    title: \"白名單\",\n    editTitle: \"编辑白名單\",\n    device_cname: \"装置名称\",\n    device_id: \"装置 ID\",\n    name: \"員工姓名\",\n    id: \"員工 ID\",\n    project: \"专案\",\n    update: \"更新资料\",\n    shift: \"班別\",\n    recommand: \"推荐员工\",\n    action: \"新增\",\n    remove: \"移除\"\n}\n\nexport default function WhiteList({ token, ...rest }) {\n    const [deviceMap, setDeviceMap] = useState();\n    const [deviceRecommend, setDeviceRecommend] = useState();\n\n    const [workshop, setWorkshop] = useState();\n\n    const [selectItem, setSelectItem] = useState();\n    const [deviceSelect, setDeviceSelect] = useState();\n    const [workSelect, setWorkSelect] = useState();\n\n    const [shift, setShift] = useState();\n    const [device, setDevice] = useState();\n    const [worker, setWorker] = useState();\n\n    useEffect(() => {\n        handleUpdate();\n        return () => {\n        }\n    }, [])\n\n    const handleChange = (event) => {\n        setWorkshop(event.target.value);\n        apiGetWhiteList(event.target.value).then(res => {\n            let promises = []\n            let ids = Object.keys(res.data);\n\n            ids.map(id => {\n                promises.push(GetDeviceName(id, res.data[String(id)]));\n            })\n            Promise.all(promises).then(response => {\n                setDeviceMap(response);\n            })\n        }).catch(err => {\n            console.log(err);\n        })\n\n        apiGetDeviceRecommend(event.target.value).then(res => {\n            setDeviceRecommend(res.data);\n            // 看 apiGetDeviceRecommend 的資料型態\n            // console.log('apiGetDeviceRecommend : ')\n            // console.log(res.data)\n        }).catch(err => {\n            console.log(err);\n        })\n    }\n\n    const GetDeviceName = (id, employee) => {\n        return new Promise((resolve, reject) => {\n            let data = {\n                \"token\": token,\n                \"device_id\": id\n            }\n            apiGetDeviceNameById(data).then(res => {\n                // 看 apiGetDeviceNameById 的資料型態\n                // console.log('apiGetDeviceNameById : ')\n                // console.log(res.data)\n                resolve({ 'id': id, 'project': res.data['project'], 'name': res.data['device_cname'], 'employee': employee });\n            }).catch(err => {\n                reject();\n            })\n        })\n    }\n\n    const handleUpdate = () => {\n        setShift(null);\n\n        setWorkshop(null);\n        setSelectItem(null);\n        setDeviceSelect(null);\n        setDeviceRecommend(null);\n        setWorker(null);\n        setWorkSelect(null);\n        setDeviceMap(null);\n        apiWorkShopList(token).then(res => {\n            setSelectItem(res.data.map(name => {\n                return (<MenuItem key={name} value={name}>{name}</MenuItem>)\n            }))\n        }).catch(err => {\n\n        });\n\n\n    }\n\n    const handDelete = (device_id, user_id) => {\n        let data = {\n            device_id: device_id,\n            username: user_id\n        }\n        apiDeleteWorkersWhitelist(data).then(res => {\n            if (res.status == 200) {\n                alert('移除成功');\n                handleUpdate();\n            }\n        }).catch(err => {\n            console.log(err);\n        })\n    }\n\n    // select change handler\n    const shiftChange = (event) => {\n        setWorker(null);\n        setDevice(null);\n        setDeviceSelect(null);\n        setWorkSelect(null);\n        let shift = event.target.value;\n        setShift(shift);\n\n        if (deviceRecommend != null) {\n            let promises = [];\n            let allDevice = Object.keys(deviceRecommend[shift.toString()]);\n            allDevice.map(id => {\n                promises.push(GetDeviceName(id, \"\"));\n            })\n            Promise.all(promises).then(response => {\n                setDeviceSelect(response.map(item => {\n                    return (<MenuItem key={item['id']} value={item['id']}>{`(${item[\"id\"]}) ${item[\"name\"]} 异常次数：${deviceRecommend[shift.toString()][item['id'].toString()]} `}</MenuItem>)\n                }))\n                console.log()\n            })\n\n\n        }\n    }\n    const deviceChange = (event) => {\n        setWorker(null);\n        setWorkSelect(null);\n        setDevice(event.target.value);\n        let data = {\n            device_id: event.target.value.toString(),\n            shift: shift === \"day\" ? false : true\n        }\n\n        console.log('apiGetWorkersByDevice : ')\n        console.log(apiGetWorkersByDevice(data))\n\n\n        apiGetWorkersByDevice(data).then(res => {\n            // 看 apiGetWorkersByDevice 的資料型態\n            setWorkSelect(res.data.map(worker => {\n                return (<MenuItem key={worker['username']} value={worker['username']}>{worker['username']}</MenuItem>)\n            }))\n            console.log('apiGetWorkersByDevice : ')\n            console.log(res.data)\n\n\n        }).catch(err => {\n            console.log(err);\n        })\n    }\n    const workChange = (event) => {\n        setWorker(event.target.value);\n    }\n    const addWhiteList = (event) => {\n\n        let data = {\n            device_id: device,\n            username: worker\n        }\n        apiPostAddWorkersWhitelist(data).then(res => {\n            if (res.status == 200) {\n                alert(`新增 ${device}, ${worker}`);\n            }\n        }).catch(err => {\n            alert('重复建立，请重新操作');\n            console.log(err);\n        })\n\n    }\n\n\n    return (\n        <ThemeProvider theme={darkTheme}>\n            <Card >\n                <CardHeader title={CONTENT.title}\n                    action={(<Button\n                        color=\"primary\"\n                        size=\"large\"\n                        variant=\"text\"\n                        onClick={handleUpdate}\n                        sx={{ mr: 3 }}\n                    >\n                        {CONTENT.update}\n                    </Button>)} />\n\n                <Divider sx={{ borderBottomWidth: 3 }} />\n                <Box\n                    sx={{\n                        display: 'flex',\n                        justifyContent: 'center',\n                        pt: 2\n                    }}\n                >\n                    <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                        请选取要显示的车间\n                    </Typography>\n                </Box>\n                <Box\n                    sx={{\n                        display: 'flex',\n                        justifyContent: 'center',\n                        pt: 2\n                    }}\n                >\n                    {\n                        selectItem &&\n                        <FormControl >\n                            <InputLabel id=\"demo-simple-select-label\">WorkShop</InputLabel>\n                            <Select\n                                labelId=\"demo-simple-select-label\"\n                                id=\"workshop-select\"\n                                value={workshop}\n                                label=\"WorkShop\"\n                                onChange={handleChange}\n                                sx={{ minWidth: \"200px\" }}\n                            >\n                                {\n                                    selectItem\n                                }\n                            </Select>\n                        </FormControl>\n                    }\n                </Box>\n                <PerfectScrollbar>\n                    <Box sx={{ minWidth: 800 }}>\n                        <Table>\n                            <TableHead sx={{ background: \"#272d3a\" }}>\n                                <TableRow>\n                                    <TableCell>\n                                        {CONTENT.device_id}\n                                    </TableCell>\n                                    <TableCell>\n                                        {CONTENT.device_cname}\n                                    </TableCell>\n                                    <TableCell >\n                                        {CONTENT.id}\n                                    </TableCell>\n                                    <TableCell >\n                                        {CONTENT.name}\n                                    </TableCell>\n                                    <TableCell >\n                                        {CONTENT.remove}\n                                    </TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {\n                                    deviceMap &&\n                                    deviceMap.map(device => {\n                                        return device.employee.map(worker => (\n                                            (\n                                                <TableRow\n                                                    hover\n                                                    key={device.id}\n                                                >\n                                                    <TableCell>\n                                                        {device.id}\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        {device.name}\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        {worker.username}\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        {worker.full_name}\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        {\n                                                            <Button key={device.id} color=\"error\" onClick={() => handDelete(device.id, worker.username)}>移除白名單</Button>\n                                                        }\n                                                    </TableCell>\n                                                </TableRow>\n                                            )\n                                        ))\n                                    })\n                                }\n                            </TableBody>\n                        </Table>\n                    </Box>\n                </PerfectScrollbar>\n\n            </Card>\n            {\n                deviceRecommend &&\n                <Card sx={{ mt: 5 }}>\n                    <CardHeader title={CONTENT.editTitle} />\n                    <PerfectScrollbar>\n                        <Box sx={{ minWidth: 800 }}>\n                            <Table>\n                                <TableHead sx={{ background: \"#272d3a\" }}>\n                                    <TableRow>\n                                        <TableCell>\n                                            {CONTENT.shift}\n                                        </TableCell>\n                                        <TableCell>\n                                            {CONTENT.device_cname}\n                                        </TableCell>\n                                        <TableCell >\n                                            {CONTENT.recommand}\n                                        </TableCell>\n                                        <TableCell >\n                                            {CONTENT.action}\n                                        </TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    <TableRow>\n                                        <TableCell>\n                                            {\n                                                workshop &&\n                                                <FormControl >\n                                                    <InputLabel id=\"shift-select\">{CONTENT.shift}</InputLabel>\n                                                    <Select\n                                                        labelId=\"shift-select\"\n                                                        id=\"shift-select-id\"\n                                                        value={shift}\n                                                        label=\"WorkShop\"\n                                                        onChange={shiftChange}\n                                                        sx={{ minWidth: \"100px\" }}\n                                                    >\n                                                        <MenuItem key={0} value={\"day\"}>日</MenuItem>\n                                                        <MenuItem key={1} value={\"night\"}>夜</MenuItem>\n                                                    </Select>\n                                                </FormControl>\n                                            }\n                                        </TableCell>\n                                        <TableCell>\n                                            {\n                                                deviceSelect &&\n                                                <FormControl >\n                                                    <InputLabel id=\"device-select\">{CONTENT.device_cname}</InputLabel>\n                                                    <Select\n                                                        labelId=\"device-select\"\n                                                        id=\"device-select-id\"\n                                                        value={device}\n                                                        label=\"device\"\n                                                        onChange={deviceChange}\n                                                        sx={{ minWidth: \"200px\" }}\n                                                    >\n                                                        {\n                                                            deviceSelect\n                                                        }\n                                                    </Select>\n                                                </FormControl>\n                                            }\n                                        </TableCell>\n                                        <TableCell >\n                                            {\n                                                workSelect &&\n                                                <FormControl >\n                                                    <InputLabel id=\"work-select\">{CONTENT.name}</InputLabel>\n                                                    <Select\n                                                        labelId=\"work-select\"\n                                                        id=\"work-select-id\"\n                                                        value={worker}\n                                                        label=\"worker\"\n                                                        onChange={workChange}\n                                                        sx={{ minWidth: \"100px\" }}\n                                                    >\n                                                        {\n                                                            workSelect\n                                                        }\n                                                    </Select>\n                                                </FormControl>\n                                            }\n                                        </TableCell>\n                                        <TableCell >\n                                            <Button onClick={addWhiteList} color=\"success\">加入白名單</Button>\n                                        </TableCell>\n                                    </TableRow>\n                                </TableBody>\n                            </Table>\n                        </Box>\n                    </PerfectScrollbar>\n\n                </Card>\n            }\n\n        </ThemeProvider>\n    );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Avatar, Box, Card, CardContent, Grid, \n  Typography, Dialog, DialogTitle, DialogContent, Button, DialogActions\n} from '@mui/material';\nimport ReportGmailerrorredSharpIcon from '@mui/icons-material/ReportGmailerrorredSharp';\n\nconst CONTENT = {\n  title : \"紧急通报\",\n}\n\nexport function Emergency({list_data, ...rest}) {\n  useEffect(()=> {\n    if(list_data.length > 0){\n      const display = list_data.map(\n        mission => {\n          return (\n            <Card sx={{m:1, minWidth: \"500px\"\n          }} key={mission.mission_id}>\n              <CardContent>\n                  <Typography\n                      color=\"textSecondary\"\n                      gutterBottom\n                      variant=\"overline\"\n                      fontSize=\"large\"\n                  >\n                    任务 ID : {mission.mission_id}\n                  </Typography>\n                  <Typography>\n                  装置 ID : {mission.device.device_id}\n                  </Typography>\n                  <Typography>\n                  装置名称 : {mission.device.device_id}\n                  </Typography>\n                  {/* <Typography>\n                  类别 : {mission.category}\n                  </Typography>\n                  <Typography>\n                  说明 : {mission.description}\n                  </Typography>\n                  <Typography>\n                  assignees : {\n                    mission.assignees && \n                    mission.assignees.map(user=>{\n                      return (\n                        <Card key={user.username}>\n                          <CardContent>\n                          <Typography\n                              color=\"textSecondary\"\n                              gutterBottom\n                              variant=\"overline\"\n                              fontSize=\"small\"\n                          >\n                            ID : {user.username}\n                          </Typography>\n                          <Typography fontSize=\"small\">\n                            full_name : {user.full_name}\n                          </Typography>\n                          </CardContent>\n                        </Card>\n                      )\n                    })\n                  }\n                  </Typography> */}\n              </CardContent>\n            </Card>\n          )\n        }\n      )\n      setData(display);\n    }\n    else{\n      const display = <Card sx={{m:1}} key=\"no-data\"><CardContent>\n        暂时无紧急通报任务\n        </CardContent></Card>;\n        setData(display);\n    }\n}, [])\n  const [data, setData] = useState();\n  const [open, setOpen] = useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  \n  return (\n    <Card\n    sx={{ height: '100%' }}\n  >\n    <CardContent>\n      <Grid\n        container\n        spacing={3}\n        sx={{ justifyContent: 'space-between' }}\n      >\n        <Grid item>\n          <Typography\n            color=\"textSecondary\"\n            gutterBottom\n            variant=\"overline\"\n            fontSize=\"large\"\n          >\n            紧急通报\n          </Typography>\n          <Typography\n            color=\"textPrimary\"\n            variant=\"h4\"\n          >\n            {list_data.length}\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Avatar\n            sx={{\n              backgroundColor: 'error.main',\n              height: 56,\n              width: 56\n            }}\n          >\n            <ReportGmailerrorredSharpIcon />\n          </Avatar>\n        </Grid>\n      </Grid>\n      <Box sx={{ pt: 3 }}>\n      <Button variant=\"contained\" onClick={handleClickOpen}>\n        查看\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {CONTENT.title}\n        </DialogTitle>\n        <DialogContent>\n          {\n            data\n          }\n        </DialogContent>\n        <DialogActions >\n          <Button onClick={handleClose} autoFocus variant=\"contained\">\n          关闭\n          </Button>\n        </DialogActions>\n      </Dialog>\n      </Box>\n    </CardContent>\n  </Card>\n  );\n} \n","import React, { useState, useEffect } from \"react\";\n\nimport { Avatar, Box, Card, CardContent, Grid, \n  Typography, Dialog, DialogTitle, DialogContent, Button, DialogActions\n} from '@mui/material';\nimport BrokenImageSharpIcon from '@mui/icons-material/BrokenImageSharp';\n\nconst CONTENT = {\n  title:\"无人维修之任务\",\n\n}\n\nexport function MissionNeedRepair({list_data, ...rest}) {\n  useEffect(()=> {\n    if(list_data.length > 0){\n      const display = list_data.map(\n        mission => {\n          return (\n            <Card sx={{m:1, minWidth: \"500px\"\n          }}\n            key={mission.mission_id}>\n              <CardContent>\n                    <Typography\n                      color=\"textSecondary\"\n                      gutterBottom\n                      variant=\"overline\"\n                      fontSize=\"large\"\n                    >\n                      任务 ID : {mission.mission_id}\n                    </Typography>\n                    <Typography>\n                      任务名称 : {mission.name}\n                    </Typography>\n                    <Typography>\n                      任务信息 : {mission.description}\n                    </Typography>\n              </CardContent>\n            </Card>\n          )\n        }\n      )\n        setData(display);\n    }\n}, [])\n  const [data, setData] = useState();\n  const [open, setOpen] = useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  \n  return (\n    <Card\n    sx={{ height: '100%' }}\n    \n  >\n    <CardContent>\n      <Grid\n        container\n        spacing={3}\n        sx={{ justifyContent: 'space-between' }}\n      >\n        <Grid item>\n          <Typography\n            color=\"textSecondary\"\n            gutterBottom\n            variant=\"overline\"\n            fontSize=\"large\"\n          >\n            无人维修之任务\n          </Typography>\n          <Typography\n            color=\"textPrimary\"\n            variant=\"h4\"\n          >\n            {list_data.length}\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Avatar\n            sx={{\n              backgroundColor: 'info.main',\n              height: 56,\n              width: 56\n            }}\n          >\n            <BrokenImageSharpIcon />\n          </Avatar>\n        </Grid>\n      </Grid>\n      <Box sx={{ pt: 3 }}>\n      <Button variant=\"contained\" onClick={handleClickOpen}>\n        查看\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {CONTENT.title}\n        </DialogTitle>\n        <DialogContent>\n          {\n            data\n          }\n        </DialogContent>\n        <DialogActions >\n          <Button onClick={handleClose} autoFocus variant=\"contained\">\n          关闭\n          </Button>\n        </DialogActions>\n      </Dialog>\n      </Box>\n    </CardContent>\n  </Card>\n  );\n} \n","import React, { useState, useEffect, useRef } from \"react\";\n\nimport {\n  Box,\n  Card,\n  Skeleton,\n  Grid,\n  Button,\n  Typography,\n  FormControl,\n  InputLabel\n} from '@mui/material';\n\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { Emergency } from \"../components/emergency.js\";\nimport { MissionNeedRepair } from \"../components/mission-need-repair.js\";\nimport { WorkshopPicker } from \"../components/workshop-picker.js\";\n\nimport { apiMissionEmergency, apiMissionNeedRepair } from \"../api.js\";\n\n\nconst darkTheme = createTheme({\n  palette: {\n    mode: 'dark',\n    background: {\n      default: '#1a1e2b',\n      paper: '#1a1e2b',\n    },\n    text: {\n      primary: '#EDF2F7',\n    },\n    primary: {\n      // Purple and green play nicely together.\n      main: '#5048E5',\n    },\n  },\n});\n\nexport default function ENRMission({ token, ...rest }) {\n  const _isMounted = useRef(true);\n  const [emergencyMission, setEmergencyMission] = useState();\n  const [needRepairMissions, setNeedRepairMissions] = useState();\n  const [workshop, setWorkshop] = useState(\"\");\n  \n  useEffect(() => {\n    //updatedata();\n  }, [])\n\n  const updatedata = (data) => {\n    setEmergencyMission(null);\n    setNeedRepairMissions(null);\n    apiMissionNeedRepair(data).then(res => {\n      setNeedRepairMissions(res.data);\n    }).catch(err => {\n      console.log(err);\n    })\n    apiMissionEmergency(data).then(res => {\n      setEmergencyMission(res.data);\n    }).catch(err => {\n      if(workshop === \"\"){\n        alert(\"请选取车间\");\n      }\n      console.log(err);\n    })\n  }\n  const handleOnClick = () => {\n    let now = new Date(Date.now());\n    const data = {\n      token: token,\n      workshop: workshop,\n      start: now.toISOString(),\n      end: now.toISOString(),\n    }\n    updatedata(data);\n  }\n\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <Grid\n        container\n        spacing={3}\n        sx={{pb:5}}\n        >\n        <Grid item xs={4} justifyContent={\"center\"}>\n          <Card >\n            <Box>\n              <FormControl sx={{mt:3, mb:3, mr:3, ml: 3}}>\n                  <InputLabel id=\"demo-simple-select-label\" >WorkShop</InputLabel>\n                  <WorkshopPicker token={token} workshop={workshop} setWorkshop={setWorkshop} />\n              </FormControl>\n              <Button sx={{mt:3, mb:3}} size=\"large\"  variant=\"contained\" onClick={handleOnClick}>更新资料</Button>\n            </Box>\n          </Card>\n        </Grid>\n      </Grid>\n      {\n        emergencyMission && \n        <Grid\n        container\n        spacing={3}\n        >\n        <Grid\n          item\n          lg={4}\n        >\n          <Emergency list_data={emergencyMission} />\n        </Grid>\n        <Grid\n        item\n        lg={4}\n        >\n          {\n            needRepairMissions ?  \n            (\n              <MissionNeedRepair list_data={needRepairMissions} />\n            ) : \n            (\n              <Box\n                sx={{\n                  width: '100%',\n                  display: 'flex',\n                  justifyContent: 'center',\n                  p: 8,\n                }}\n              >\n                <Skeleton\n                  sx={{ bgcolor: 'grey.900' }}\n                  variant=\"rectangular\"\n                  width={1000}\n                  height={80}\n                >\n                  <Typography>.</Typography>\n                </Skeleton>\n              </Box>\n            )\n          }\n        </Grid>\n        </Grid>\n      }\n    </ThemeProvider>\n\n  );\n}","import React, { useState } from 'react';\nimport {\n    BrowserRouter as Router,\n    Routes,\n    Route,\n    Navigate\n} from 'react-router-dom'\n\nimport Login from './LoginPage';\nimport FoxlinkPages from './homepage';\nimport SnackbarAlert from \"./Snackbar\";\nimport Status from \"./AllStatus\";\nimport Statistics from \"./Statistics\";\nimport QrcodeDownload from \"./Qrcode\";\nimport Map from \"./Map\";\nimport DevicesUpload from \"./DevicesUpload\";\nimport WorkerinfoUpload from \"./WorkinfoUpload\";\nimport MapUpload from \"./MapUpload\";\nimport WhiteList from \"./WhiteList\";\nimport ENRMission from \"./OtherMission\";\nimport { NotFound } from \"./404\";\n\nconst Index = () => <h2>Home</h2>;\nconst About = () => <h2>About</h2>;\nconst Users = () => <h2>Users</h2>;\n\nexport default function App() {\n\n    const [alert, setAlert] = useState({\n        'open': false,\n        'type': '',\n        'msg': '',\n        'duration': 3000\n    })\n    // user auth\n    const [authUser, setAuthUser] = useState({\n        'token': null,\n        'token_type': null,\n        'username': null,\n        'level': null,\n    })\n\n    return (\n        <>\n            <SnackbarAlert open={alert.open} message={alert.msg} type={alert.type} setAlert={setAlert} duration={alert.duration} />\n            <Router>\n                <Routes>\n                    {/* <Route element={<Login setAlert={setAlert} setUser={setAuthUser} />} path={'/login'}></Route>\n                    <Route element={<FoxlinkPages authUser={authUser} />} path={'/'}>\n                        <Route element={<Status token={authUser.token} setAlert={setAlert} />} path={'/all-status'}></Route>\n                        <Route element={<WorkerinfoUpload setAlert={setAlert} token={authUser.token} />} path={'/worker-info-upload'}></Route>\n                        <Route element={<DevicesUpload token={authUser.token} />} path={'/devices-upload'}></Route>\n                        <Route element={<Statistics token={authUser.token} setAlert={setAlert} />} path={'/statistics'}></Route>\n                        <Route element={<QrcodeDownload token={authUser.token} />} path={'/qrcode-download'}></Route>\n                        <Route element={<Map setAlert={setAlert} token={authUser.token} />} path={'/map'}></Route>\n                        <Route element={<MapUpload token={authUser.token} />} path={'/map-upload'}></Route>\n                        <Route element={<WhiteList token={authUser.token} />} path={'/white-list'}></Route>\n                        <Route element={<ENRMission token={authUser.token} />} path={'/ENRMission'}></Route>\n                    </Route> */}\n                    <Route element={<FoxlinkPages />} path={'/'}>\n                        <Route element={<WorkerinfoUpload setAlert={setAlert} />} path={'/worker-info-upload'}></Route>\n                        <Route element={<DevicesUpload />} path={'/devices-upload'}></Route>\n                        <Route element={<Statistics setAlert={setAlert} />} path={'/statistics'}></Route>\n                        <Route element={<QrcodeDownload />} path={'/qrcode-download'}></Route>\n                        <Route element={<Map setAlert={setAlert} />} path={'/map'}></Route>\n                        <Route element={<MapUpload />} path={'/map-upload'}></Route>\n                        <Route element={<WhiteList />} path={'/white-list'}></Route>\n                        <Route element={<ENRMission />} path={'/ENRMission'}></Route>\n                    </Route>\n\n                    {/* <Route\n                        path='*'\n                        element={\n                            <Navigate to=\"/login\" replace />\n                        }\n                    /> */}\n                </Routes>\n            </Router>\n        </>\n\n    )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './pages/app';\n\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  // <BrowserRouter>\n  //   <Homepage />\n  // </BrowserRouter>\n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}