{"version":3,"sources":["assets/foxlink_logo.png","tools/crypt.js","components/logo.js","api.js","pages/LoginPage.js","icons/user-circle.js","components/dashboard-navbar.js","icons/chart-bar.js","icons/layout.js","icons/qrcode.js","icons/info.js","components/nav-item.js","components/dashboard-sidebar.js","components/dashboard-layout.js","pages/homepage.js","pages/Snackbar.js","components/severity-pill.js","components/workshop-picker.js","pages/AllStatus.js","components/date-range.js","components/rate.js","components/crashed-devices.js","components/accept-mission-employees.js","components/reject-mission-employees.js","components/abnormal-missions.js","components/abnormal-devices.js","pages/Statistics.js","pages/Qrcode.js","pages/Map.js","components/excel-table-view.js","components/parameter.js","components/alert-component.js","icons/upload.js","pages/DevicesUpload.js","components/worker-experiences.js","pages/WorkinfoUpload.js","pages/MapUpload.js","pages/WhiteList.js","components/emergency.js","components/mission-need-repair.js","pages/OtherMission.js","pages/app.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Object","defineProperty","value","verify","encrypt","HashType","crypto_1","require","buffer_1","dictionary","shuffleMap","sha256","sha512","roundsDefault","getRandomString","length","min","max","result","i","Math","ceil","floor","random","generateHash","plaintext","conf","digestSize","id","hashType","digestA","hashA","createHash","update","saltString","hashB","digestB","digest","plaintextByteLength","Buffer","byteLength","offset","remainder","slice","toString","split","reverse","forEach","num","generateDigestA","hashDP","digestDP","alloc","set","hashDS","step18","digestDS","s","saltByteLength","saltRemainder","hash","idx","buf","bufferToBase64","base64Encode","Array","rounds","fill","reduce","acc","curr","hashC","first","parseInt","second","third","fourth","charAt","salt","specifyRounds","parts","Number","Error","match","substr","parseSalt","push","concat","join","normalizeSalt","computedHash","lastIndexOf","timingSafeEqual","from","Logo","_ref","handler","React","createElement","Button","src","foxlinkLogo","width","height","baseRequest","axios","create","baseURL","process","headers","Access-Control-Allow-Origin","timeout","auth_except","x","catch","e","response","status","alert","statusText","apiSystemSpace","token","get","accept","Authorization","apiUserLogin","data","post","Content-Type","apiStatisticsWithDate","apiStatisticsWithShift","apiWorkStatus","workshop","apiMissionNeedRepair","apiMissionEmergency","apiWorkShopList","apiQRCode","responseType","apiMapGet","apiMapPost","apiGetFileName","apiDevices","_headers2","_defineProperty","apiDevicesData","apiWorkerinfos","_headers3","apiWorkerAll","apiGetWhiteList","workshop_name","apiGetDeviceRecommend","apiGetDeviceNameById","apiGetWorkersByDevice","apiPostAddWorkersWhitelist","apiDeleteWorkersWhitelist","delete","apiGetSystemEnvSetting","apiPostSystemEnvSetting","apiGetSystemEnvSettingCount","apiPostSystemEnvSettingCount","darkTheme","createTheme","palette","mode","background","default","paper","text","primary","main","Login","setUser","setAlert","navigate","useNavigate","_isMounted","useRef","useEffect","current","ThemeProvider","theme","Grid","container","spacing","direction","alignItems","justifyContent","sx","minHeight","item","xs","Box","component","display","flexGrow","maxWidth","borderRadius","border","borderColor","Container","pt","my","Typography","color","variant","gutterBottom","pb","TextField","fullWidth","label","margin","name","type","py","size","onClick","account","document","getElementById","password","hashPassWord","then","res","token_type","username","level","open","msg","toFixed","duration","err","errMsg","console","log","UserCircle","createSvgIcon","viewBox","xmlns","fillRule","clipRule","d","DashboardNavbarRoot","styled","AppBar","backgroundColor","boxShadow","DashboardNavbar","_ref2","user","Fragment","left","lg","Toolbar","disableGutters","px","Tooltip","title","IconButton","ml","Avatar","UserCircleIcon","fontSize","ChartBar","Layout","version","y","QRCode","data-name","Info","NavItem","props","icon","url","globalIdx","setIdx","active","_objectWithoutProperties","location","href","at","Link","to","style","textDecoration","ListItem","mb","startIcon","disableRipple","fontWeight","textAlign","& .MuiButton-startIcon","&:hover","DashboardSidebar","items","StatusIcon","QRCodeIcon","MapIcon","SummarizeIcon","upload_items","LayoutIcon","InfoIcon","content","flexDirection","Divider","map","key","Drawer","anchor","PaperProps","DashboardLayoutRoot","flex","paddingTop","breakpoints","up","paddingLeft","DashboardLayout","_ref3","children","FoxlinkPages","authUser","Outlet","SnackbarAlert","message","Alert","forwardRef","ref","MuiAlert","assign","elevation","handleClose","event","reason","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","severity","SeverityPillRoot","ownerState","colorHEX","contrastText","cursor","flexShrink","fontFamily","typography","pxToRem","lineHeight","letterSpacing","minWidth","paddingRight","textTransform","whiteSpace","SeverityPill","_props$color","other","WorkshopPicker","setWorkshop","_useState","useState","_useState2","_slicedToArray","selectItem","setSelectItem","MenuItem","Select","labelId","onChange","target","secondary","light","dark","success","info","warning","error","leave","working","notice","moving","idle","CONTENT","worker_id","last_event_end_date","at_device_cname","worker_status","total_dispatches","mission_duration","repair_duration","Idle","Working","Moving","Notice","Leave","AllStatus","statusData","setStatusData","_useState3","_useState4","_useState5","_useState6","loading","setLoading","_useReducer","useReducer","_useReducer2","updataData","sort","arguments","undefined","rawData","worker","finish_event_date","parseTimeZone","parseSeconds","parseSortIndex","a","b","finally","time_string","dt","Date","setTime","getTime","getTimezoneOffset","toLocaleDateString","toLocaleTimeString","hour12","sencond_str","sec_num","hours","minutes","seconds","status_str","Card","CardHeader","action","FormControl","InputLabel","LoadingButton","mt","borderBottomWidth","PerfectScrollbar","Table","TableHead","TableRow","TableCell","TableBody","hover","worker_name","at_device","DateRange","sDate","eDate","setSDate","setEDate","setShift","shift_","setShift_","CardContent","pr","LocalizationProvider","dateAdapter","AdapterDayjs","DatePicker","newValue","renderInput","params","Stack","mr","Rate","list_data","login_users","employees","m","badge","setData","setOpen","percentage","InsertChartIcon","LinearProgress","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogActions","autoFocus","CrashedDevices","device","device_id","device_cname","count","BrokenImageSharpIcon","AcceptMissionEmployees","employee","LibraryAddCheckIcon","RejectMissionEmployees","full_name","CancelIcon","AbnormalMissions","mission","mission_id","categories","messages","AssignmentLateIcon","AbnormalDevices","category","top_great_assignees","Statistics","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","shift","_shift","updatedata","start","toISOString","end","login_users_percentage_this_week","devices_stats","most_frequent_crashed_devices","top_most_accept_mission_employees","top_most_reject_mission_employees","top_abnormal_missions_this_month","top_abnormal_devices","QrcodeDownload","downloading","setDownload","saveAs","endIcon","ArrowCircleDownIcon","loadingPosition","Map","img","setImg","buffer","binary","call","Uint8Array","String","fromCharCode","img_component","window","btoa","arrayBufferToBase64","overflowX","ExcelTableView","keys","datas","id2words","index","j","Parameter","csv_data","fullScreen","AlertComponent","state","Upload","project","line","device_name","x_axis","y_axis","is_rescue","sop_link","Input","DevicesUpload","dataStatus","setDataStatus","uploading","setUpload","setKeys","_useState13","_useState14","setId2Word","_useState15","_useState16","setDatas","_useState17","_useState18","parameter","setParameter","_useState19","_useState20","_useState21","_useState22","errmsg","setErrMsg","_useState23","_useState24","rescueStatus","setRescueStatus","_useState25","_useState26","rescueCount","setRescueCount","_useState27","_useState28","_useState29","_useState30","handleOpen","updateData","_useState31","_useState32","deviceName","setDeviceName","handleOnClick","devices","updateFileName","htmlFor","files","file","formData","FormData","append","rawdata","processed_data","temp","obj","CloudUploadOutlinedIcon","newKeys","exp","WorkExperiences","superior","experiences","infotable","WorkerinfoUpload","workerFile","setWorkFile","setDeviceFile","UpdateData","prototype","replaceAt","char","this","postData","str","flag","parseParm","workerinfoName","setWorkerinfoName","fd","MapUpload","mapName","setMapName","images","regex","filename","editTitle","recommand","remove","WhiteList","deviceMap","setDeviceMap","deviceRecommend","setDeviceRecommend","deviceSelect","setDeviceSelect","workSelect","setWorkSelect","setDevice","setWorker","handleUpdate","GetDeviceName","Promise","resolve","reject","promises","all","user_id","Emergency","ReportGmailerrorredSharpIcon","MissionNeedRepair","description","ENRMission","emergencyMission","setEmergencyMission","needRepairMissions","setNeedRepairMissions","now","Skeleton","bgcolor","App","setAuthUser","Router","Routes","Route","element","path","Status","Navigate","replace","reportWebVitals","onPerfEntry","Function","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.805816e8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/foxlink_logo.7d1cd178.png\";","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.verify = exports.encrypt = void 0;\nvar crypto_1 = require(\"crypto\");\nvar buffer_1 = require(\"buffer\");\nvar HashType;\n(function (HashType) {\n    HashType[HashType[\"sha256\"] = 5] = \"sha256\";\n    HashType[HashType[\"sha512\"] = 6] = \"sha512\";\n})(HashType || (HashType = {}));\nvar dictionary = \"./0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n// prettier-ignore\nvar shuffleMap = {\n    sha256: [\n        20, 10, 0,\n        11, 1, 21,\n        2, 22, 12,\n        23, 13, 3,\n        14, 4, 24,\n        5, 25, 15,\n        26, 16, 6,\n        17, 7, 27,\n        8, 28, 18,\n        29, 19, 9,\n        30, 31\n    ],\n    sha512: [\n        42, 21, 0,\n        1, 43, 22,\n        23, 2, 44,\n        45, 24, 3,\n        4, 46, 25,\n        26, 5, 47,\n        48, 27, 6,\n        7, 49, 28,\n        29, 8, 50,\n        51, 30, 9,\n        10, 52, 31,\n        32, 11, 53,\n        54, 33, 12,\n        13, 55, 34,\n        35, 14, 56,\n        57, 36, 15,\n        16, 58, 37,\n        38, 17, 59,\n        60, 39, 18,\n        19, 61, 40,\n        41, 20, 62,\n        63,\n    ]\n};\nvar roundsDefault = 5000;\nfunction getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n/**\n * Generate a random string\n * @param length Length of salt\n */\nfunction getRandomString(length) {\n    var result = \"\";\n    for (var i = 0; i < length; i++) {\n        result += dictionary[getRandomInt(0, dictionary.length - 1)];\n    }\n    return result;\n}\n/**\n * Normalize salt for use with hash, for example: \"$6$rounds=1234&saltsalt\" or \"$6$saltsalt\"\n * @param conf The separate parts of id, rounds, specifyRounds, and saltString\n */\nfunction normalizeSalt(conf) {\n    var parts = [\"\", conf.id];\n    if (conf.specifyRounds || conf.rounds !== roundsDefault) {\n        parts.push(\"rounds=\".concat(conf.rounds));\n    }\n    parts.push(conf.saltString);\n    return parts.join(\"$\");\n}\n/**\n * Parse salt into pieces, performs sanity checks, and returns proper defaults for missing values\n * @param salt Standard salt, \"$6$rounds=1234$saltsalt\", \"$6$saltsalt\", \"$6\", \"$6$rounds=1234\"\n */\nfunction parseSalt(salt) {\n    var roundsMin = 1000;\n    var roundsMax = 999999999;\n    var conf = {\n        id: HashType.sha512,\n        saltString: getRandomString(16),\n        rounds: roundsDefault,\n        specifyRounds: false,\n    };\n    if (salt) {\n        var parts = salt.split(\"$\");\n        conf.id = Number(parts[1]);\n        if (conf.id !== HashType.sha256 && conf.id !== HashType.sha512) {\n            throw new Error(\"Only sha256 and sha512 is supported by this library\");\n        }\n        if (parts.length < 2 || parts.length > 4) {\n            throw new Error(\"Invalid salt string\");\n        }\n        else if (parts.length > 2) {\n            var rounds = parts[2].match(/^rounds=(\\d*)$/);\n            if (rounds) {\n                // number of rounds has been specified\n                conf.rounds = Number(rounds[1]);\n                conf.specifyRounds = true;\n                if (parts[3]) {\n                    conf.saltString = parts[3];\n                }\n            }\n            else {\n                // default number of rounds has already been set\n                conf.saltString = parts[2];\n            }\n        }\n    }\n    // sanity-check rounds\n    conf.rounds =\n        conf.rounds < roundsMin\n            ? roundsMin\n            : conf.rounds > roundsMax\n                ? /* istanbul ignore next */\n                    (conf.rounds = roundsMax)\n                : conf.rounds;\n    // sanity-check saltString\n    conf.saltString = conf.saltString.substr(0, 16);\n    if (conf.saltString.match(\"[^./0-9A-Za-z]\")) {\n        throw new Error(\"Invalid salt string\");\n    }\n    return conf;\n}\n/**\n * Steps 1-12 in the spec\n * @param plaintext\n * @param conf\n */\nfunction generateDigestA(plaintext, conf) {\n    var digestSize = conf.id === HashType.sha256 ? 32 : 64;\n    // steps 1-8\n    var hashA = (0, crypto_1.createHash)(HashType[conf.id]);\n    hashA.update(plaintext);\n    hashA.update(conf.saltString);\n    var hashB = (0, crypto_1.createHash)(HashType[conf.id]);\n    hashB.update(plaintext);\n    hashB.update(conf.saltString);\n    hashB.update(plaintext);\n    var digestB = hashB.digest();\n    // step 9\n    var plaintextByteLength = buffer_1.Buffer.byteLength(plaintext);\n    for (var offset = 0; offset + digestSize < plaintextByteLength; offset += digestSize) {\n        hashA.update(digestB);\n    }\n    // step 10\n    var remainder = plaintextByteLength % digestSize;\n    hashA.update(digestB.slice(0, remainder));\n    // step 11\n    plaintextByteLength\n        .toString(2)\n        .split(\"\")\n        .reverse()\n        .forEach(function (num) {\n        hashA.update(num === \"0\" ? plaintext : digestB);\n    });\n    // step 12\n    return hashA.digest();\n}\nfunction generateHash(plaintext, conf) {\n    var digestSize = conf.id === HashType.sha256 ? 32 : 64;\n    var hashType = HashType[conf.id];\n    // steps 1-12\n    var digestA = generateDigestA(plaintext, conf);\n    // steps 13-15\n    var plaintextByteLength = buffer_1.Buffer.byteLength(plaintext);\n    var hashDP = (0, crypto_1.createHash)(hashType);\n    for (var i = 0; i < plaintextByteLength; i++) {\n        hashDP.update(plaintext);\n    }\n    var digestDP = hashDP.digest();\n    // step 16a\n    var p = buffer_1.Buffer.alloc(plaintextByteLength);\n    for (var offset = 0; offset + digestSize < plaintextByteLength; offset += digestSize) {\n        p.set(digestDP, offset);\n    }\n    // step 16b\n    var remainder = plaintextByteLength % digestSize;\n    p.set(digestDP.slice(0, remainder), plaintextByteLength - remainder);\n    // step 17-19\n    var hashDS = (0, crypto_1.createHash)(hashType);\n    var step18 = 16 + digestA[0];\n    for (var i = 0; i < step18; i++) {\n        hashDS.update(conf.saltString);\n    }\n    var digestDS = hashDS.digest();\n    // step 20\n    var s = buffer_1.Buffer.alloc(conf.saltString.length);\n    // step 20a\n    // Isn't this step redundant? The salt string doesn't have 32 or 64 bytes. It's truncated to 16 characters\n    var saltByteLength = buffer_1.Buffer.byteLength(conf.saltString);\n    for (var offset = 0; offset + digestSize < saltByteLength; offset += digestSize) {\n        /* istanbul ignore next */\n        s.set(digestDS, offset);\n    }\n    // step 20b\n    var saltRemainder = saltByteLength % digestSize;\n    s.set(digestDS.slice(0, saltRemainder), saltByteLength - saltRemainder);\n    // step 21\n    var rounds = Array(conf.rounds).fill(0);\n    var digestC = rounds.reduce(function (acc, curr, idx) {\n        var hashC = (0, crypto_1.createHash)(hashType);\n        // steps b-c\n        if (idx % 2 === 0) {\n            hashC.update(acc);\n        }\n        else {\n            hashC.update(p);\n        }\n        // step d\n        if (idx % 3 !== 0) {\n            hashC.update(s);\n        }\n        // step e\n        if (idx % 7 !== 0) {\n            hashC.update(p);\n        }\n        // steps f-g\n        if (idx % 2 !== 0) {\n            hashC.update(acc);\n        }\n        else {\n            hashC.update(p);\n        }\n        return hashC.digest();\n    }, digestA);\n    // step 22\n    return base64Encode(digestC, shuffleMap[hashType]);\n}\nfunction base64Encode(digest, shuffleMap) {\n    var hash = \"\";\n    for (var idx = 0; idx < digest.length; idx += 3) {\n        var buf = buffer_1.Buffer.alloc(3);\n        buf[0] = digest[shuffleMap[idx]];\n        buf[1] = digest[shuffleMap[idx + 1]];\n        buf[2] = digest[shuffleMap[idx + 2]];\n        hash += bufferToBase64(buf);\n    }\n    // adjust hash length by stripping trailing zeroes induced by base64-encoding\n    return hash.slice(0, digest.length === 32 ? -1 : -2);\n}\n/**\n * Encode buffer to base64 using our dictionary\n * @param buf Buffer of bytes to be encoded\n */\nfunction bufferToBase64(buf) {\n    var first = buf[0] & parseInt(\"00111111\", 2);\n    var second = ((buf[0] & parseInt(\"11000000\", 2)) >>> 6) |\n        ((buf[1] & parseInt(\"00001111\", 2)) << 2);\n    var third = ((buf[1] & parseInt(\"11110000\", 2)) >>> 4) |\n        ((buf[2] & parseInt(\"00000011\", 2)) << 4);\n    var fourth = (buf[2] & parseInt(\"11111100\", 2)) >>> 2;\n    return (dictionary.charAt(first) +\n        dictionary.charAt(second) +\n        dictionary.charAt(third) +\n        dictionary.charAt(fourth));\n}\n/**\n * Create sha256 or sha512 crypt of plaintext password\n * @param plaintext The plaintext password\n * @param salt optional salt, for example \"$6$salt\" or \"$6$rounds=10000$salt\"\n */\nfunction encrypt(plaintext, salt) {\n    var conf = parseSalt(salt);\n    var hash = generateHash(plaintext, conf);\n    return normalizeSalt(conf) + \"$\" + hash;\n}\nexports.encrypt = encrypt;\n/**\n * Verify plaintext password against expected hash\n * @param plaintext The plaintext password\n * @param hash The expected hash\n */\nfunction verify(plaintext, hash) {\n    var salt = hash.slice(0, hash.lastIndexOf(\"$\"));\n    var computedHash = encrypt(plaintext, salt);\n    return (0, crypto_1.timingSafeEqual)(buffer_1.Buffer.from(computedHash, \"utf8\"), buffer_1.Buffer.from(hash, \"utf8\"));\n}\nexports.verify = verify;\n","import { Button } from '@mui/material';\nimport React from \"react\";\nimport foxlinkLogo from '../assets/foxlink_logo.png';\n\nexport const Logo = ({handler}) => {\n  return (\n    <Button>\n      <img src={foxlinkLogo}width=\"178\" height=\"46\"/>\n    </Button>\n  );\n};\n\n\n","import axios from 'axios';\nimport { useNavigate } from \"react-router-dom\";\n\n\nconst baseRequest = axios.create({\n  baseURL: process.env.REACT_APP_BASEURL,\n  headers: { \"Access-Control-Allow-Origin\": \"*\" },\n  timeout: 300000,\n});\n\nconst auth_except = (x) => x.catch((e) => {\n  if (e.response.status == 403) {\n    //alert('无法验证身份');\n    alert(e.response.statusText);\n  }\n  throw e;\n})\n\nexport const apiSystemSpace = (token) => auth_except(baseRequest.get('/system/space', {\n  headers: {\n    'accept': 'application/json',\n    'Authorization': `Bearer ${token}`\n  }\n}));\n\nexport const apiUserLogin = (data) => auth_except(baseRequest.post('/auth/token', data, {\n  headers:\n  {\n    'accept': 'application/json',\n    'Content-Type': 'application/x-www-form-urlencoded'\n  },\n  timeout: 30000,\n}));\nexport const apiUserLevel = (token) => auth_except(baseRequest.get('/users/info', {\n  headers: {\n    'accept': 'application/json',\n    'Authorization': `Bearer ${token}`\n  }\n}));\n\nexport const apiStatisticsWithDate = (data) => auth_except(baseRequest.get(`/stats/?workshop_name=${data['workshop']}&start_date=${data['start']}&end_date=${data['end']}`, {\n  headers:\n  {\n    'accept': 'application/json',\n    'Content-Type': 'application/x-www-form-urlencoded'\n  }\n}));\n\n// export const apiStatisticsWithDate = (data) => auth_except(baseRequest.get(`/stats/?workshop_name=${data['workshop']}&start_date=${data['start']}&end_date=${data['end']}`, {\n//   headers:\n//   {\n//     'accept': 'application/json',\n//     'Content-Type': 'application/x-www-form-urlencoded'\n//   }\n\nexport const apiStatisticsWithShift = (data) => auth_except(baseRequest.get(`/stats/?workshop_name=${data['workshop']}&start_date=${data['start']}&end_date=${data['end']}&is_night_shift=${data['shift']}`, {\n  headers:\n  {\n    'accept': 'application/json',\n    'Content-Type': 'application/x-www-form-urlencoded'\n  }\n\n}));\n/*\n*\n* FQ-9%E8%BB%8A%E9%96%93 新改 ＡＰＩ\n*\n*/\nexport const apiWorkStatus = (workshop) => auth_except(baseRequest.get(`/stats/${workshop}/worker-status`, {\n  headers: {\n    'accept': 'application/json',\n    'Content-Type': 'application/x-www-form-urlencoded'\n  },\n  timeout: 60000,\n}));\n\nexport const apiMissionNeedRepair = (data) => auth_except(baseRequest.get(`missions/?workshop_name=${data['workshop']}&is_worker_null=true&is_done=false`, {\n  headers: {\n    'accept': 'application/json',\n    'Authorization': `Bearer ${data['token']}`\n  }\n}));\nexport const apiMissionEmergency = (data) => auth_except(baseRequest.get(`missions/?workshop_name=${data['workshop']}&is_started=false&is_done=false&is_emergency=true`, {\n  headers: {\n    'accept': 'application/json',\n    'Authorization': `Bearer ${data['token']}`\n  }\n}));\n\n// List\nexport const apiWorkShopList = (token) => auth_except(baseRequest.get('/workshop/list', {\n  headers: {\n    'accept': 'application/json',\n    'Authorization': `Bearer ${token}`\n  }\n}));\nexport const apiProjectList = (data) => auth_except(baseRequest.get(`workshop/${data['workshopname']}/projects`, {\n  headers: {\n    'accept': 'application/json',\n    'Authorization': `Bearer ${data['token']}`\n  }\n}));\n\nexport const apiQRCode = (data) => auth_except(baseRequest.get(`/workshop/qrcode?workshop_name=${data['name']}`, {\n  headers:\n  {\n    'accept': 'application/x-zip-compressed',\n    'Authorization': `Bearer ${data['token']}`\n  },\n  responseType: 'blob'\n}));\n\nexport const apiMapGet = (data) => auth_except(baseRequest.get(`/workshop/${data['name']}/image`, {\n  headers:\n  {\n    'accept': 'application/json',\n    'Authorization': `Bearer ${data['token']}`\n  },\n  responseType: 'arraybuffer'\n}));\nexport const apiMapPost = (data) => auth_except(baseRequest.post(`/workshop/${data['name']}/image`, data['file'], {\n  headers:\n  {\n    'accept': 'application/json',\n    'Content-Type': 'multipart/form-data',\n    'Authorization': `Bearer ${data['token']}`\n  }\n}));\n\nexport const apiGetFileName = (data) => auth_except(baseRequest.get(`/workshop/filename`, {\n  headers:\n  {\n    'accept': 'application/json',\n    'Authorization': `Bearer ${data['token']}`\n  },\n}));\n\nexport const apiEventbook = (data) => auth_except(baseRequest.post('/migration/workshop-eventbook', data['file'], {\n  headers:\n  {\n    'accept': 'application/json',\n    'Content-Type': 'multipart/form-data',\n    'accept': 'application/json',\n    'Authorization': `Bearer ${data['token']}`\n  }\n}));\nexport const apiEventbookGet = (data) => auth_except(baseRequest.get(`/device/category-priority?workshop_name=${data['workshop']}&project=${data['project']}`, {\n  headers:\n  {\n    'accept': 'application/json',\n    'Authorization': `Bearer ${data['token']}`\n  },\n}));\n\nexport const apiDevices = (data) => auth_except(baseRequest.post('/migration/devices', data['file'], {\n  headers:\n  {\n    'accept': 'application/json',\n    'Content-Type': 'multipart/form-data',\n    'accept': 'application/json',\n    'Authorization': `Bearer ${data['token']}`\n  }\n}));\nexport const apiDevicesData = (data) => auth_except(baseRequest.get(`/device/?workshop_name=${data['name']}`, {\n  headers:\n  {\n    'accept': 'application/json',\n    'Authorization': `Bearer ${data['token']}`\n  }\n}));\n\nexport const apiWorkerinfos = (data) => auth_except(baseRequest.post('/migration/factory-worker-infos', data['file'], {\n  headers:\n  {\n    'accept': 'application/json',\n    'Content-Type': 'multipart/form-data',\n    'accept': 'application/json',\n    'Authorization': `Bearer ${data['token']}`\n  }\n}));\nexport const apiWorkerAll = (data) => auth_except(baseRequest.get(`/users/overview?workshop_name=${data['workshop']}`,\n  {\n    headers:\n    {\n      'accept': 'application/json',\n      'Authorization': `Bearer ${data['token']}`\n    }\n  }));\n\n// white list\nexport const apiGetWhiteList = (workshop_name) => auth_except(baseRequest.get(`/device/whitelist?workshop_name=${workshop_name}`, {\n  headers: {\n    'accept': 'application/json',\n  }\n}));\nexport const apiGetDeviceRecommend = (workshop_name) => auth_except(baseRequest.get(`/device/whitelist/recommend?workshop_name=${workshop_name}`, {\n  headers: {\n    'accept': 'application/json',\n  }\n}));\nexport const apiGetDeviceNameById = (data) => auth_except(baseRequest.get(`/device/${data['device_id']}`, {\n  headers:\n  {\n    'accept': 'application/json',\n    'Authorization': `Bearer ${data['token']}`\n  }\n}));\nexport const apiGetWorkersByDevice = (data) => auth_except(baseRequest.get(`/device/${data['device_id']}/workers?shift_type=${data['shift']}`, {\n  headers: {\n    'accept': 'application/json',\n  }\n}));\nexport const apiPostAddWorkersWhitelist = (data) => auth_except(baseRequest.post(`/device/${data['device_id']}/whitelist?username=${data['username']}`, {\n  headers: {\n    'accept': 'application/json',\n  }\n}));\nexport const apiDeleteWorkersWhitelist = (data) => auth_except(baseRequest.delete(`/device/${data['device_id']}/whitelist?username=${data['username']}`, {\n  headers: {\n    'accept': 'application/json',\n  }\n}));\n\nexport const apiGetSystemEnvSetting = (data) => auth_except(baseRequest.get(`/system/env-get-settings/${data['key']}`, {\n  headers:\n  {\n    'accept': 'application/json',\n    'Authorization': `Bearer ${data['token']}`\n  }\n}));\n\nexport const apiPostSystemEnvSetting = (data) => auth_except(baseRequest.post(`/system/env-update-settings/${data['key']}?value=${data['value']}`, data, {\n  headers:\n  {\n    'accept': 'application/json',\n    'Authorization': `Bearer ${data['token']}`\n  }\n}));\n\nexport const apiGetSystemEnvSettingCount = (data) => auth_except(baseRequest.get(`/system/env-get-settings/${data['key']}`, {\n  headers:\n  {\n    'accept': 'application/json',\n    'Authorization': `Bearer ${data['token']}`\n  }\n}));\n\nexport const apiPostSystemEnvSettingCount = (data) => auth_except(baseRequest.post(`/system/env-update-settings/${data['key']}?value=${data['value']}`, data, {\n  headers:\n  {\n    'accept': 'application/json',\n    'Authorization': `Bearer ${data['token']}`\n  }\n}));\n\n// $5$rounds=10000$F0XL1NKPWDHaSH$x7OJPMIuQs3XFigY6rsIzhYVDezZa0i3O1qZrDemcm5\n","import React, { useRef, useEffect } from \"react\";\n\nimport { Box, Button, Container, TextField, Typography, Grid } from '@mui/material';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { Logo } from \"../components/logo.js\";\n\nimport { apiUserLogin, apiSystemSpace } from \"../api.js\";\n\nimport { useNavigate } from 'react-router-dom';\n\nimport { encrypt, verify } from \"../tools/crypt\";\n\nconst darkTheme = createTheme({\n    palette: {\n        mode: 'dark',\n        background: {\n            default: '#1a1e2b',\n            paper: '#1a1e2b',\n        },\n        text: {\n            primary: '#EDF2F7',\n        },\n        primary: {\n            // Purple and green play nicely together.\n            main: '#5048E5',\n        },\n\n    },\n});\n\nexport default function Login({ setUser, setAlert }) {\n    const navigate = useNavigate();\n    const _isMounted = useRef(true);\n    useEffect(() => {\n        return () => {\n            _isMounted.current = false;\n        }\n    }, []);\n    function handleOnClick() {\n        try {\n            let account = document.getElementById('account').value;\n            let password = document.getElementById('password').value;\n            const hashPassWord = encrypt(\"foxlink\", \"$5$rounds=10000$F0XL1NKPWDHaSH\");\n\n            if (account == '' || password == '') throw \"帐密不可為空\";\n            apiUserLogin(`grant_type=&username=${account}&password=${hashPassWord}&scope=&client_id=123&client_secret=`)\n                .then(res => {\n                    if (_isMounted.current) {\n                        setUser({\n                            'token': res.data['access_token'],\n                            'token_type': res.data['token_type'],\n                            'username': '',\n                            'level': '',\n                        })\n                        apiSystemSpace(res.data['access_token'])\n                            .then(res => {\n                                setAlert({\n                                    'open': true,\n                                    'msg': `硬盘使用率 : ${(100 * Number(res.data)).toFixed(2)}%`,\n                                    'type': 'warning',\n                                    'duration': 10000\n                                })\n                                navigate('/all-status');\n                            })\n                    }\n                })\n                .catch(err => {\n                    let errMsg = '';\n                    if (err.response && err.response.status == 401) errMsg = '帐密错误';\n                    else if (err.response && err.response.status == 422) errMsg = '验证错误，请重试';\n                    else errMsg = '服务器拒绝连线，请联络相关人员';\n                    setAlert({\n                        'open': true,\n                        'msg': errMsg,\n                        'type': 'error'\n                    })\n                })\n\n        } catch (e) {\n            console.log(e);\n            setAlert({\n                'open': true,\n                'msg': e,\n                'type': 'error'\n            })\n        }\n        document.getElementById('account').value = \"\";\n        document.getElementById('password').value = \"\";\n    }\n    return (\n        <ThemeProvider theme={darkTheme}>\n            <Grid\n                container\n                spacing={0}\n                direction=\"column\"\n                alignItems=\"center\"\n                justifyContent=\"center\"\n                sx={{ minHeight: '100vh', background: '#121212' }}\n            >\n                <Grid item xs={3}>\n                    <Box\n                        component=\"main\"\n                        sx={{\n                            alignItems: 'center',\n                            display: 'flex',\n                            flexGrow: 1,\n                            minHeight: '100%',\n                            maxWidth: 'sm',\n                            background: '#1a1e2b',\n                            borderRadius: 4,\n                            border: 'solid',\n                            borderColor: '#2D3748'\n                        }}\n                    >\n                        <Container maxWidth=\"sm\">\n                            <Grid\n                                container\n                                spacing={0}\n                                direction=\"column\"\n                                alignItems=\"center\"\n                                justifyContent=\"center\"\n                                sx={{ pt: 5 }}\n                            >\n                                <Grid item xs={3}>\n                                    <Logo />\n                                </Grid>\n                            </Grid>\n                            <Box sx={{\n                                pt: 5,\n                                my: 3\n                            }}>\n                                <Typography\n                                    color=\"textPrimary\"\n                                    variant=\"h4\"\n                                >\n                                    系统登入\n                                </Typography>\n                                <Typography\n                                    color=\"textSecondary\"\n                                    gutterBottom\n                                    variant=\"body2\"\n                                >\n                                    使用主管级帐户进入\n                                </Typography>\n                            </Box>\n                            <Box\n                                sx={{\n                                    pb: 1,\n                                    pt: 3\n                                }}\n                            >\n                            </Box>\n                            <TextField\n                                fullWidth\n                                label=\"帐户\"\n                                margin=\"normal\"\n                                name=\"account\"\n                                id=\"account\"\n                                variant=\"outlined\"\n                            />\n                            <TextField\n                                fullWidth\n                                label=\"密码\"\n                                margin=\"normal\"\n                                name=\"password\"\n                                id=\"password\"\n                                type=\"password\"\n                                variant=\"outlined\"\n                            />\n                            <Box sx={{ py: 2 }}>\n                                <Button\n                                    color=\"primary\"\n                                    fullWidth\n                                    size=\"large\"\n                                    type=\"submit\"\n                                    variant=\"contained\"\n                                    onClick={handleOnClick}\n                                >\n                                    登入\n                                </Button>\n                            </Box>\n                        </Container>\n                    </Box>\n                </Grid>\n            </Grid>\n        </ThemeProvider>\n    );\n}","import { createSvgIcon } from '@mui/material/utils';\nimport React from \"react\";\nexport const UserCircle = createSvgIcon(\n  <svg\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M19.5999 9.99999C19.5999 12.5461 18.5885 14.9879 16.7881 16.7882C14.9878 18.5886 12.546 19.6 9.9999 19.6C7.45382 19.6 5.01203 18.5886 3.21168 16.7882C1.41133 14.9879 0.399902 12.5461 0.399902 9.99999C0.399902 7.45392 1.41133 5.01212 3.21168 3.21177C5.01203 1.41142 7.45382 0.399994 9.9999 0.399994C12.546 0.399994 14.9878 1.41142 16.7881 3.21177C18.5885 5.01212 19.5999 7.45392 19.5999 9.99999ZM12.3999 6.39999C12.3999 7.03651 12.147 7.64696 11.697 8.09705C11.2469 8.54714 10.6364 8.79999 9.9999 8.79999C9.36338 8.79999 8.75293 8.54714 8.30285 8.09705C7.85276 7.64696 7.5999 7.03651 7.5999 6.39999C7.5999 5.76347 7.85276 5.15302 8.30285 4.70294C8.75293 4.25285 9.36338 3.99999 9.9999 3.99999C10.6364 3.99999 11.2469 4.25285 11.697 4.70294C12.147 5.15302 12.3999 5.76347 12.3999 6.39999ZM9.9999 11.2C8.85102 11.1998 7.72623 11.5294 6.7592 12.1497C5.79217 12.77 5.02355 13.6549 4.5447 14.6992C5.21991 15.4847 6.05703 16.1149 6.99864 16.5466C7.94024 16.9782 8.96407 17.2011 9.9999 17.2C11.0357 17.2011 12.0596 16.9782 13.0012 16.5466C13.9428 16.1149 14.7799 15.4847 15.4551 14.6992C14.9762 13.6549 14.2076 12.77 13.2406 12.1497C12.2736 11.5294 11.1488 11.1998 9.9999 11.2Z\"\n    />\n  </svg>,\n  'UserCircle'\n);\n","import React from \"react\";\n\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport { AppBar, Avatar, Box, IconButton, Toolbar, Tooltip, Typography } from '@mui/material';\n\nimport { UserCircle as UserCircleIcon } from '../icons/user-circle';\n\n\nconst DashboardNavbarRoot = styled(AppBar)(({ theme }) => ({\n // backgroundColor: \"#0c0d13\",\n  backgroundColor: \"#FFFFFF\",\n  boxShadow: '0px 1px 4px rgba(100, 116, 139, 0.12)'\n}));\n\nexport function DashboardNavbar({user}){\n  return (\n    <>\n    {\n      user && \n      <DashboardNavbarRoot\n        sx={{\n          left: {\n            lg: 280\n          },\n          width: {\n            lg: 'calc(100% - 280px)'\n          }\n        }}\n      >\n      <Toolbar\n        disableGutters\n        sx={{\n          minHeight: 64,\n          left: 0,\n          px: 2\n        }}\n      >\n        <Box sx={{ flexGrow: 1 }} />\n        <Tooltip title={`You are ${user.username} !`}>\n          <IconButton sx={{ ml: 1 }}>\n            <Typography>\n                {user.username}\n            </Typography>\n          </IconButton>\n        </Tooltip>\n        <Tooltip title={`Level ${user.level}`}>\n          <Avatar\n            sx={{\n              height: 40,\n              width: 40,\n              ml: 1\n            }}\n          >\n            <UserCircleIcon fontSize=\"small\" />\n          </Avatar>\n        </Tooltip>\n      </Toolbar>\n    </DashboardNavbarRoot>\n    }\n    </>\n  );\n};\n\n","import { createSvgIcon } from '@mui/material/utils';\nimport React from \"react\";\nexport const ChartBar = createSvgIcon(\n  <svg\n    viewBox=\"0 0 20 18\"\n    fill=\"currentColor\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M0.399902 10.2C0.399902 9.88175 0.52633 9.57652 0.751374 9.35148C0.976418 9.12644 1.28164 9.00001 1.5999 9.00001H3.9999C4.31816 9.00001 4.62339 9.12644 4.84843 9.35148C5.07347 9.57652 5.1999 9.88175 5.1999 10.2V16.2C5.1999 16.5183 5.07347 16.8235 4.84843 17.0485C4.62339 17.2736 4.31816 17.4 3.9999 17.4H1.5999C1.28164 17.4 0.976418 17.2736 0.751374 17.0485C0.52633 16.8235 0.399902 16.5183 0.399902 16.2V10.2ZM7.5999 5.40001C7.5999 5.08175 7.72633 4.77652 7.95137 4.55148C8.17642 4.32643 8.48164 4.20001 8.7999 4.20001H11.1999C11.5182 4.20001 11.8234 4.32643 12.0484 4.55148C12.2735 4.77652 12.3999 5.08175 12.3999 5.40001V16.2C12.3999 16.5183 12.2735 16.8235 12.0484 17.0485C11.8234 17.2736 11.5182 17.4 11.1999 17.4H8.7999C8.48164 17.4 8.17642 17.2736 7.95137 17.0485C7.72633 16.8235 7.5999 16.5183 7.5999 16.2V5.40001ZM14.7999 1.80001C14.7999 1.48175 14.9263 1.17652 15.1514 0.951478C15.3764 0.726434 15.6816 0.600006 15.9999 0.600006H18.3999C18.7182 0.600006 19.0234 0.726434 19.2484 0.951478C19.4735 1.17652 19.5999 1.48175 19.5999 1.80001V16.2C19.5999 16.5183 19.4735 16.8235 19.2484 17.0485C19.0234 17.2736 18.7182 17.4 18.3999 17.4H15.9999C15.6816 17.4 15.3764 17.2736 15.1514 17.0485C14.9263 16.8235 14.7999 16.5183 14.7999 16.2V1.80001Z\"\n    />\n  </svg>,\n  'ChartBar'\n);\n","import { createSvgIcon } from '@mui/material/utils';\nimport React from \"react\";\nexport const Layout = createSvgIcon(\n  <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\"  x=\"0px\" y=\"0px\"\n\t viewBox=\"0 0 456.578 456.578\" >\n<g>\n\t<g>\n\t\t<g>\n\t\t\t<path d=\"M435.539,0h-184c-8.284,0-15,6.716-15,15v426.578c0,8.284,6.716,15,15,15h184c8.284,0,15-6.716,15-15V15\n\t\t\t\tC450.539,6.716,443.823,0,435.539,0z\"/>\n\t\t\t<path d=\"M191.291,0H21.039c-8.284,0-15,6.716-15,15v102.249c0,8.284,6.716,15,15,15h170.252c8.284,0,15-6.716,15-15V15\n\t\t\t\tC206.291,6.716,199.575,0,191.291,0z\"/>\n\t\t\t<path d=\"M191.291,324.329H21.039c-8.284,0-15,6.716-15,15v102.249c0,8.284,6.716,15,15,15h170.252c8.284,0,15-6.716,15-15\n\t\t\t\tV339.329C206.291,331.045,199.575,324.329,191.291,324.329z\"/>\n\t\t\t<path d=\"M191.291,162.165H21.039c-8.284,0-15,6.716-15,15v102.248c0,8.284,6.716,15,15,15h170.252c8.284,0,15-6.716,15-15\n\t\t\t\tV177.165C206.291,168.881,199.575,162.165,191.291,162.165z\"/>\n\t\t</g>\n\t</g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n</svg>,\n  'Layout'\n);\n","import { createSvgIcon } from '@mui/material/utils';\nimport React from \"react\";\nexport const QRCode = createSvgIcon(\n  <svg width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" data-name=\"Layer 1\">\n    <path d=\"M8,21H4a1,1,0,0,1-1-1V16a1,1,0,0,0-2,0v4a3,3,0,0,0,3,3H8a1,1,0,0,0,0-2Zm14-6a1,1,0,0,0-1,1v4a1,1,0,0,1-1,1H16a1,1,0,0,0,0,2h4a3,3,0,0,0,3-3V16A1,1,0,0,0,22,15ZM20,1H16a1,1,0,0,0,0,2h4a1,1,0,0,1,1,1V8a1,1,0,0,0,2,0V4A3,3,0,0,0,20,1ZM2,9A1,1,0,0,0,3,8V4A1,1,0,0,1,4,3H8A1,1,0,0,0,8,1H4A3,3,0,0,0,1,4V8A1,1,0,0,0,2,9Zm8-4H6A1,1,0,0,0,5,6v4a1,1,0,0,0,1,1h4a1,1,0,0,0,1-1V6A1,1,0,0,0,10,5ZM9,9H7V7H9Zm5,2h4a1,1,0,0,0,1-1V6a1,1,0,0,0-1-1H14a1,1,0,0,0-1,1v4A1,1,0,0,0,14,11Zm1-4h2V9H15Zm-5,6H6a1,1,0,0,0-1,1v4a1,1,0,0,0,1,1h4a1,1,0,0,0,1-1V14A1,1,0,0,0,10,13ZM9,17H7V15H9Zm5-1a1,1,0,0,0,1-1,1,1,0,0,0,0-2H14a1,1,0,0,0-1,1v1A1,1,0,0,0,14,16Zm4-3a1,1,0,0,0-1,1v3a1,1,0,0,0,0,2h1a1,1,0,0,0,1-1V14A1,1,0,0,0,18,13Zm-4,4a1,1,0,1,0,1,1A1,1,0,0,0,14,17Z\"/>\n  </svg>,\n  'QRCode'\n);\n","import { createSvgIcon } from '@mui/material/utils';\nimport React from \"react\";\nexport const Info = createSvgIcon(\n  <svg version=\"1.1\"  xmlns=\"http://www.w3.org/2000/svg\" \n\t viewBox=\"0 0 460 460\" >\n<g id=\"XMLID_1055_\">\n\t<g>\n\t\t<path d=\"M230,0C102.975,0,0,102.975,0,230s102.975,230,230,230s230-102.974,230-230S357.025,0,230,0z M268.333,377.36\n\t\t\tc0,8.676-7.034,15.71-15.71,15.71h-43.101c-8.676,0-15.71-7.034-15.71-15.71V202.477c0-8.676,7.033-15.71,15.71-15.71h43.101\n\t\t\tc8.676,0,15.71,7.033,15.71,15.71V377.36z M230,157c-21.539,0-39-17.461-39-39s17.461-39,39-39s39,17.461,39,39\n\t\t\tS251.539,157,230,157z\"/>\n\t</g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n</svg>\n,\n  'Info'\n);\n","import { Box, Button, ListItem } from '@mui/material';\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport const NavItem = (props) => {\n  const { icon, title, globalIdx, setIdx, url,  ...others } = props;\n  const active = ('/' + document.location.href.split('/').at(-1)) === url;\n  return (\n    <Link to={url} style={{ textDecoration: 'none' }}>\n      <ListItem\n      disableGutters\n      sx={{\n        display: 'flex',\n        mb: 0.5,\n        py: 0,\n        px: 2,\n        textDecoration:'none'\n      }}\n    >\n      <Button\n          component=\"a\"\n          startIcon={icon}\n          disableRipple\n          sx={{\n            backgroundColor: active && 'rgba(255,255,255, 0.08)',\n            color: active ? '#10B981' : '#D1D5DB',\n            fontWeight: active && 'fontWeightBold',\n            justifyContent: 'flex-start',\n            px: 3,\n            textAlign: 'left',\n            width: '100%',\n            '& .MuiButton-startIcon': {\n              color: active ? '#10B981' : '#9CA3AF'\n            },\n            '&:hover': {\n              backgroundColor: 'rgba(255,255,255, 0.08)'\n            }\n          }}\n        >\n          <Box sx={{ flexGrow: 1}}>\n            {title}\n          </Box>\n      </Button>\n    </ListItem>\n    </Link>\n  );\n};\n\n","import React from \"react\";\n\nimport { Box, Divider, Drawer } from '@mui/material';\nimport { ChartBar as StatusIcon } from '../icons/chart-bar';\nimport { Layout as LayoutIcon } from '../icons/layout';\nimport { QRCode as QRCodeIcon } from '../icons/qrcode';\nimport { Info as InfoIcon } from '../icons/info';\n\nimport SummarizeIcon from '@mui/icons-material/Summarize';\nimport MapIcon from '@mui/icons-material/Map';\nimport { Logo } from './logo';\nimport { DashboardNavbar } from './dashboard-navbar';\nimport { NavItem } from './nav-item';\nimport { Link } from \"react-router-dom\";\n\nexport const DashboardSidebar = ({idx, setIdx}) => {\n  const items = [\n      {\n        url: '/statistics',\n        icon: (<StatusIcon fontSize=\"small\" />),\n        title: '统计资料',\n        active: false\n      },\n      {\n        url : '/ENRMission',\n        icon: (<StatusIcon fontSize=\"small\"/>),\n        title: '紧急和需维修任务',\n        active: false\n      },\n      {\n        url: '/qrcode-download',\n        icon: (<QRCodeIcon fontSize=\"small\" />),\n        title: 'QR Code 下载',\n        active: false\n      },\n      {\n        url: '/map',\n        icon: (<MapIcon fontSize=\"small\" />),\n        title: '车间地图',\n        active: false\n      },\n      {\n        url : '/white-list',\n        icon: (<SummarizeIcon fontSize=\"small\"/>),\n        title: '白名單',\n        active: false\n      }\n  ];\n\n  const upload_items = [\n    {\n      url: '/devices-upload',\n      icon: (<LayoutIcon fontSize=\"small\" />),\n      title: 'Layout 座标表 上传',\n      active: false\n    },\n    {\n      url: '/worker-info-upload',\n      icon: (<InfoIcon fontSize=\"small\" />),\n      title: '员工专职表 上传',\n      active: false\n    },\n    {\n      url : '/map-upload',\n      icon: (<MapIcon fontSize=\"small\"/>),\n      title: '车间地图 上传',\n      active: false\n    }\n  ];\n  const content = (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%'\n      }}\n    >\n      <Box sx={{ p: 3 }}>\n        <Link to={'/all-status'}>\n          <Logo sx={{height: 42, width: 42 }} />\n        </Link>\n      </Box>\n      <Divider\n        sx={{\n          borderColor: '#2D3748',\n          my: 3,\n          height:1.5\n        }}\n      />\n      <Box sx={{ flexGrow: 1 }}>\n        \n        {items.map((item) => (\n          <NavItem\n            key={item.title}\n            icon={item.icon}\n            url={item.url}\n            title={item.title}\n            globalIdx={idx}\n            setIdx={setIdx}\n          />\n        ))}\n      </Box>\n      <Divider\n        sx={{\n          borderColor: '#2D3748',\n          my: 3,\n          height:1.5\n        }}\n      />\n        <Box sx={{ flexGrow: 1 }}>\n          {upload_items.map((item) => (\n            <NavItem\n              key={item.title}\n              icon={item.icon}\n              url={item.url}\n              title={item.title}\n              globalIdx={idx}\n              setIdx={setIdx}\n            />\n          ))}\n      </Box>\n    </Box>\n  );\n\n  return (\n    <>\n    <Drawer\n        anchor=\"left\"\n        PaperProps={{\n          sx: {\n            backgroundColor: '#111827',\n            color: '#FFFFFF',\n            width: 280\n          }\n        }}\n        variant=\"permanent\"\n      >\n        {content}\n      </Drawer>\n      <DashboardNavbar  />\n    </>\n  );\n};","import React from \"react\";\n\nimport { Box, Container } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { DashboardNavbar } from './dashboard-navbar';\nimport { DashboardSidebar } from './dashboard-sidebar';\n\nconst DashboardLayoutRoot = styled('div')(({ theme }) => ({\n  display: 'flex',\n  flex: '1 1 auto',\n  maxWidth: '100%',\n  paddingTop: 64,\n  [theme.breakpoints.up('lg')]: {\n    paddingLeft: 280\n  }\n}));\n\nexport const DashboardLayout = ({children, user}) => {\n  return (\n    <Box\n      component=\"main\"\n      sx={{\n      flexGrow: 1,\n      py: 6\n      }}\n    >\n      <Container maxWidth={false}>\n      <DashboardLayoutRoot>\n        <Box\n          sx={{\n            display: 'flex',\n            flex: '1 1 auto',\n            flexDirection: 'column',\n            width: '100%',\n          }}\n        >\n          {children}\n        </Box>\n      </DashboardLayoutRoot>\n      <DashboardSidebar />\n      <DashboardNavbar user={user} />\n      </Container>\n    </Box>\n      \n  );\n};\n","import React, { useEffect } from \"react\";\nimport {DashboardLayout} from \"../components/dashboard-layout\";\nimport {\n    useNavigate,\n    Outlet,\n  } from 'react-router-dom'\n\nexport default function FoxlinkPages({authUser}) {\n    const navigate = useNavigate();\n    useEffect(() => {\n        if(authUser.token){\n            // pass\n        } else{\n            navigate('404-not-found');\n        }\n    }, []);\n    return (\n        <DashboardLayout>\n            <Outlet />\n        </DashboardLayout>\n    );\n}","import React from \"react\";\nimport {Snackbar} from \"@mui/material\";\nimport MuiAlert from '@mui/material/Alert';\n\nexport default function SnackbarAlert({open, type, message, setAlert}) {\n    const Alert = React.forwardRef(function Alert(props, ref) {\n        return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n    });\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {return;}\n        setAlert({\n            'open': false,\n        })\n    }\n    return (\n        <div>\n             <Snackbar open={open} autoHideDuration={1000} onClose={handleClose} anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\n                <Alert onClose={handleClose} severity={type} sx={{ width: '100%' }}>\n                    {message}\n                </Alert>\n            </Snackbar>  \n        </div>\n    )\n}","import React from \"react\";\nimport { styled } from '@mui/material/styles';\n\nconst SeverityPillRoot = styled('span')(({ theme, ownerState, colorHEX }) => {\n  const backgroundColor = theme.palette[ownerState.color].main;\n  //const backgroundColor = colorHEX;\n  //const color = colorHEX;\n  const color = theme.palette[ownerState.color].contrastText;\n\n\n  return {\n    alignItems: 'center',\n    backgroundColor,\n    borderRadius: 12,\n    color,\n    cursor: 'default',\n    display: 'inline-flex',\n    flexGrow: 0,\n    flexShrink: 0,\n    fontFamily: theme.typography.fontFamily,\n    fontSize: theme.typography.pxToRem(12),\n    lineHeight: 2,\n    fontWeight: 600,\n    justifyContent: 'center',\n    letterSpacing: 0.5,\n    minWidth: 20,\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    textTransform: 'uppercase',\n    whiteSpace: 'nowrap'\n  };\n});\n\nexport const SeverityPill = (props) => {\n  const { color = 'primary', children, ...other } = props;\n\n  const ownerState = { color };\n\n  return (\n    <SeverityPillRoot\n      ownerState={ownerState}\n      {...other}\n    >\n      {children}\n    </SeverityPillRoot>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport {\n  useNavigate\n} from 'react-router-dom'\nimport { Select, MenuItem } from '@mui/material';\nimport {apiWorkShopList} from \"../api.js\";\n\nexport const WorkshopPicker = ({token, workshop, setWorkshop, setAlert}) => {\n  const navigate = useNavigate();\n  const [selectItem, setSelectItem] = useState();\n\n  const handleChange = (event) => {\n    setWorkshop(event.target.value);\n  };\n\n  useEffect(()=> {\n    apiWorkShopList(token).then(res => {\n        setSelectItem(res.data.map(name=>{\n            return(<MenuItem key={name} value={name}>{name}</MenuItem>)\n        }))\n    }).catch(err => {\n     \n    });\n}, [])\n\n  return (\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={workshop}\n          label=\"WorkShop\"\n          onChange={handleChange}\n          sx={{minWidth:\"130px\"}}\n        >\n        {\n          selectItem \n        }\n        </Select>\n  );\n} \n","import React, { useState, useEffect, useReducer } from \"react\";\nimport {useNavigate} from 'react-router-dom';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n    Box,\n    Button,\n    Card,\n    CardHeader,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    createTheme,\n    ThemeProvider,\n    Divider,\n    FormControl,\n    InputLabel\n} from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport { SeverityPill } from '../components/severity-pill';\nimport { WorkshopPicker } from \"../components/workshop-picker.js\";\nimport { apiWorkStatus } from \"../api.js\";\n\nconst darkTheme = createTheme({\n    palette: {\n        mode: 'dark',\n        background: {\n            default: '#1a1e2b',\n            paper: '#1a1e2b',\n        },\n        text: {\n            primary: '#EDF2F7',\n        },\n        secondary: {\n            main: '#10B981',\n            light: '#3FC79A',\n            dark: '#0B815A',\n            contrastText: '#FFFFFF'\n        },\n        success: {\n            main: '#14B8A6',\n            light: '#43C6B7',\n            dark: '#0E8074',\n            contrastText: '#FFFFFF'\n        },\n        info: {\n            main: '#2196F3',\n            light: '#64B6F7',\n            dark: '#0B79D0',\n            contrastText: '#FFFFFF'\n        },\n        warning: {\n            main: '#FFB020',\n            light: '#FFBF4C',\n            dark: '#B27B16',\n            contrastText: '#FFFFFF'\n        },\n        error: {\n            main: '#D14343',\n            light: '#DA6868',\n            dark: '#922E2E',\n            contrastText: '#FFFFFF'\n        },leave: {\n            main:'#292b2c',\n            contrastText: '#fff'\n        },\n        working:{\n            main:'#d9534f',\n            contrastText: '#fff'\n        },\n        notice:{\n            main:'#f0ad4e',\n            contrastText: '#fff'\n        },\n        moving:{\n            main:'#0275d8',\n            contrastText: '#fff'\n        },\n        idle:{\n            main:'#5cb85c',\n            contrastText: '#fff'\n        }\n    }\n});\n\nconst CONTENT = {\n    title: \"员工状态总览\",\n    worker_id: \"员工 ID\",\n    name: \"姓名\",\n    last_event_end_date: \"上次任务结束时间\",\n    at_device_cname: \"员工位置\",\n    worker_status: \"员工状态\",\n    total_dispatches: \"派工总数\",\n    mission_duration: \"任务时长\",\n    repair_duration: \"维修时长\",\n    update: \"更新资料\",\n    Idle:\"閒置中\",\n    Working:\"维修中\",\n    Moving:\"移动中\",\n    Notice:\"指派中\",\n    Leave:\"离线\",\n\n}\nexport default function AllStatus({ token, setAlert, ...rest }) {\n    const [statusData, setStatusData] = useState();\n    const [workshop, setWorkshop] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const [_, forceUpdate] = useReducer(x => x + 1, 0);\n    const navigate = useNavigate();\n\n    const updataData = (sort=false) => {\n        setLoading(true);\n        apiWorkStatus(workshop).then(res => {\n            let rawData = res.data;\n            rawData.map(worker => {\n                worker.finish_event_date = parseTimeZone(worker.finish_event_date);\n                if(worker.mission_duration == null) worker.mission_duration = \"无\";\n                else worker.mission_duration = parseSeconds(worker.mission_duration);\n                if(worker.repair_duration == null) worker.repair_duration = \"无\";\n                else worker.repair_duration = parseSeconds(worker.repair_duration);\n                worker.sort = parseSortIndex(worker.status);\n            });\n            if(sort){\n                rawData.sort(function(a, b){\n                    return b.sort - a.sort;\n                })\n            }\n            setStatusData(rawData);\n            setAlert({\n                'open':true,\n                'msg': \"更新成功\",\n                'type': 'success'\n              });\n        }).catch(err => {\n            if(err.response){\n                setAlert({\n                    'open':true,\n                    'msg': err.response.statusText,\n                    'type': 'error'\n                })\n            }\n            else{\n                alert('网路异常，请联系相关人员 (断线 或 Timeout)');\n                navigate('/login');\n            }\n        }).finally(()=>{\n            setLoading(false);\n        });\n    }\n\n    /*\n    const handleSort = () => {\n        \n        let sortedData = statusData;\n        sortedData.sort(function(a, b){\n            return b.sort - a.sort;\n        })\n        setStatusData(sortedData);\n        forceUpdate();\n    }\n    */\n    const parseTimeZone = (time_string) => {\n        let dt = new Date(time_string);\n        dt.setTime(dt.getTime() - dt.getTimezoneOffset() * 60 * 1000);\n        let formated_str = dt.toLocaleDateString() + \"  \" + dt.toLocaleTimeString('zh-CN', { hour12: false });\n        return formated_str;\n    }\n    const parseSeconds = (sencond_str) => {\n        let sec_num = parseInt(sencond_str);\n        let hours = Math.floor(sec_num / 3600);\n        let minutes = Math.floor((sec_num - (hours * 3600)) / 60);\n        let seconds = sec_num - (hours * 3600) - (minutes * 60);\n\n        if (hours < 10) { hours = \"0\" + hours; }\n        if (minutes < 10) { minutes = \"0\" + minutes; }\n        if (seconds < 10) { seconds = \"0\" + seconds; }\n\n        return hours + ':' + minutes + ':' + seconds;\n    }\n    const parseSortIndex = (status_str) => {\n        if(status_str === \"Working\"){return 5;}\n        else if(status_str === \"Notice\"){return 4;}\n        else if(status_str === \"Moving\"){return 3;}\n        else if(status_str === \"Idle\"){return 2;}\n        else{return 1;}\n    }\n    return (\n        <ThemeProvider theme={darkTheme}>\n            <Card >\n                <CardHeader title={CONTENT.title}\n                    action={(\n                    <FormControl >\n                        <InputLabel id=\"demo-simple-select-label\">WorkShop</InputLabel>\n                        <WorkshopPicker token={token} workshop={workshop} setWorkshop={setWorkshop} />\n                        <LoadingButton\n                        variant=\"contained\"\n                        size=\"large\"\n                        component=\"span\"\n                        sx={{\n                            borderRadius: 4,\n                            minWidth: 200,\n                            justifyContent: 'center',\n                            letterSpacing: 3,\n                            mt:1\n                        }}\n                        loading={loading}\n                        onClick={() => updataData(false)}\n                        >\n                            {CONTENT.update}\n                        </LoadingButton>\n                    </FormControl>)} \n                />\n                <Divider sx={{ borderBottomWidth: 3 }} />\n                <PerfectScrollbar>\n                    {\n                        statusData && \n                        <Box sx={{ minWidth: 800 }}>\n                        <Table>\n                            <TableHead sx={{ background: \"#272d3a\" }}>\n                                <TableRow>\n                                    <TableCell>\n                                        {CONTENT.worker_id}\n                                    </TableCell>\n                                    <TableCell>\n                                        {CONTENT.name}\n                                    </TableCell>\n                                    <TableCell >\n                                        {CONTENT.last_event_end_date}\n                                    </TableCell>\n                                    <TableCell >\n                                        {CONTENT.at_device_cname}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Button id=\"status\" onClick={() => updataData(true)}>{CONTENT.worker_status}</Button>\n                                    </TableCell>\n                                    <TableCell>\n                                        {CONTENT.total_dispatches}\n                                    </TableCell>\n                                    <TableCell>\n                                        {CONTENT.mission_duration}\n                                    </TableCell>\n                                    <TableCell>\n                                        {CONTENT.repair_duration}\n                                    </TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {statusData.map(worker => (\n                                    <TableRow\n                                        hover\n                                        key={worker.worker_id}\n                                    >\n                                        <TableCell>\n                                            {worker.worker_id}\n                                        </TableCell>\n                                        <TableCell>\n                                            {worker.worker_name}\n                                        </TableCell>\n                                        <TableCell>\n                                            {worker.finish_event_date}\n                                        </TableCell>\n                                        <TableCell>\n                                            {\n                                              worker.at_device_cname == null ? worker.at_device : worker.at_device_cname\n                                            }\n                                        </TableCell>\n                                        <TableCell>\n                                            <SeverityPill\n                                                color={(worker.status === 'Working' && 'working')\n                                                    || (worker.status === 'Leave' && 'leave')\n                                                    || (worker.status === 'Notice' && 'notice')\n                                                    || (worker.status === 'Moving' && 'moving')\n                                                    || (worker.status === 'Idle' && 'idle')\n                                                    || 'warning'}\n                                            >\n                                                {CONTENT[worker.status]}\n                                            </SeverityPill>\n                                        </TableCell>\n                                        <TableCell>\n                                            {worker.total_dispatches}\n                                        </TableCell>\n                                        <TableCell>\n                                            {worker.mission_duration}\n                                        </TableCell>\n                                        <TableCell>\n                                            {worker.repair_duration}\n                                        </TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </Box>\n                    }\n                </PerfectScrollbar>\n            </Card>\n        </ThemeProvider>\n    );\n}","import React, { useState } from \"react\";\n\nimport { Avatar, Box, Card, CardContent, Grid, LinearProgress, Typography, TextField, Stack, Switch, SwitchProps } from '@mui/material';\n// import { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\n// import { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker';\nimport { FormControl, Select, MenuItem, InputLabel } from '@mui/material';\n\nexport const DateRange = ({ sDate, eDate, setSDate, setEDate, setShift }) => {\n\n  const [shift_, setShift_] = useState(\"\");\n\n  const handleChange = (event) => {\n    setShift(event.target.value);\n    setShift_(event.target.value);\n  };\n\n  return (\n    <Card\n      sx={{ height: '100%' }}\n    >\n      <CardContent>\n        <Grid\n          container\n          spacing={3}\n          sx={{ justifyContent: 'space-between' }}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"overline\"\n              fontSize=\"large\"\n              sx={{ pt: 4, pr: 1 }}\n            >\n              日期\n            </Typography>\n          </Grid>\n          <Box sx={{ pr: 1, pt: 4 }}>\n            <LocalizationProvider dateAdapter={AdapterDayjs}>\n              <DatePicker\n                label=\"开始日期\"\n                value={sDate}\n                onChange={(newValue) => {\n                  setSDate(newValue);\n                  //console.log(newValue);\n                }}\n                renderInput={(params) => <TextField {...params} />}\n              />\n              {/* <DateTimePicker\n                label=\"开始日期\"\n                value={sDate}\n                onChange={(newValue) => {\n                  setSDate(newValue);\n                }}\n                renderInput={(params) => <TextField {...params} />}\n              /> */}\n            </LocalizationProvider>\n          </Box>\n          <Box sx={{ pt: 4 }}>\n            <LocalizationProvider dateAdapter={AdapterDayjs}>\n              <DatePicker\n                label=\"结束日期\"\n                value={eDate}\n                onChange={(newValue) => {\n                  setEDate(newValue);\n                  //console.log(newValue);\n                }}\n                renderInput={(params) => <TextField {...params} />}\n              />\n            </LocalizationProvider>\n            {/* <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DateTimePicker\n                label=\"结束日期\"\n                value={eDate}\n                onChange={(newValue) => {\n                  setEDate(newValue);\n                  //console.log(newValue);\n                }}\n                renderInput={(params) => <TextField {...params} />}\n              /> */}\n          </Box>\n          <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n            {/* <Typography>夜</Typography>\n              <Switch checked={shift} onChange={handleChange} inputProps={{ 'aria-label': 'controlled' }} />\n              <Typography>日</Typography> */}\n            <FormControl sx={{ mt: 4, mb: 0, mr: 3, ml: 3 }}>\n              <InputLabel id=\"demo-simple-select-label\" >班別</InputLabel>\n              <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={shift_}\n                label=\"WorkShop\"\n                onChange={handleChange}\n                sx={{ minWidth: \"130px\" }}\n              >\n                <MenuItem key=\"no-shift\" value=\"無\">不分班別</MenuItem>\n                <MenuItem key=\"shift-true\" value=\"夜\">夜</MenuItem>\n                <MenuItem key=\"shift-false\" value=\"日\">日</MenuItem>\n              </Select>\n            </FormControl>\n          </Stack>\n        </Grid>\n      </CardContent>\n    </Card >\n  );\n} \n","import React, { useState, useEffect } from \"react\";\n\nimport {\n  Avatar, Box, Card, CardContent, Grid, LinearProgress,\n  Typography, Dialog, DialogTitle, DialogContent, Button, DialogActions\n} from '@mui/material';\nimport InsertChartIcon from '@mui/icons-material/InsertChartOutlined';\n\nconst CONTENT = {\n  title: \"出勤人员\",\n}\n\n\nexport function Rate({ list_data, ...rest }) {\n  useEffect(() => {\n    if (list_data.length > 0) {\n      const display = list_data[0].login_users.map(\n        employees => {\n          return (\n            <Card sx={{\n              m: 1, minWidth: \"500px\"\n            }}\n              key={employees.username}>\n              <CardContent>\n                <Typography\n                  color=\"textSecondary\"\n                  gutterBottom\n                  variant=\"overline\"\n                  fontSize=\"large\"\n                >\n                  员工编号 : {employees.badge}\n                </Typography>\n                <Typography>\n                  员工姓名 : {employees.username}\n                </Typography>\n              </CardContent>\n            </Card>\n          )\n        }\n      )\n      setData(display);\n    }\n  }, [])\n  const [data, setData] = useState();\n  const [open, setOpen] = useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  return (\n\n    <Card\n      sx={{ height: '100%' }}\n    >\n      <CardContent>\n        <Grid\n          container\n          spacing={3}\n          sx={{ justifyContent: 'space-between' }}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"overline\"\n              fontSize=\"large\"\n            >\n              出勤比例\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h4\"\n            >\n              {((list_data[0].percentage) * 100).toFixed(2)}%\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar\n              sx={{\n                backgroundColor: 'secondary.main',\n                height: 56,\n                width: 56\n              }}\n            >\n              <InsertChartIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n        <Box sx={{ pt: 3 }}>\n          <LinearProgress\n            value={list_data}\n            variant=\"determinate\"\n          />\n        </Box>\n        <Box sx={{ pt: 3 }}>\n          <Button variant=\"contained\" onClick={handleClickOpen}>\n            查看\n          </Button>\n          <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            sx={{ width: '100%' }}\n          >\n            <DialogTitle id=\"alert-dialog-title\">\n              {CONTENT.title}\n            </DialogTitle>\n            <DialogContent>\n              {\n                data\n              }\n            </DialogContent>\n            <DialogActions >\n              <Button onClick={handleClose} autoFocus variant=\"contained\">\n                关闭\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n}\n\n\n// export const Rate = ({ rate, ...rest }) => (\n//   <Card\n//     sx={{ height: '100%' }}\n//   >\n//     <CardContent>\n//       <Grid\n//         container\n//         spacing={3}\n//         sx={{ justifyContent: 'space-between' }}\n//       >\n//         <Grid item>\n//           <Typography\n//             color=\"textSecondary\"\n//             gutterBottom\n//             variant=\"overline\"\n//             fontSize=\"large\"\n//           >\n//             出勤比例\n//           </Typography>\n//           <Typography\n//             color=\"textPrimary\"\n//             variant=\"h4\"\n//           >\n//             {(rate).toFixed(2)}%\n//           </Typography>\n//         </Grid>\n//         <Grid item>\n//           <Avatar\n//             sx={{\n//               backgroundColor: 'secondary.main',\n//               height: 56,\n//               width: 56\n//             }}\n//           >\n//             <InsertChartIcon />\n//           </Avatar>\n//         </Grid>\n//       </Grid>\n//       <Box sx={{ pt: 3 }}>\n//         <LinearProgress\n//           value={rate}\n//           variant=\"determinate\"\n//         />\n//       </Box>\n//     </CardContent>\n//   </Card>\n// );\n","import React, { useState, useEffect } from \"react\";\n\nimport {\n  Avatar, Box, Card, CardContent, Grid,\n  Typography, Dialog, DialogTitle, DialogContent, Button, DialogActions\n} from '@mui/material';\nimport BrokenImageSharpIcon from '@mui/icons-material/BrokenImageSharp';\n\nconst CONTENT = {\n  title: \"经常异常装置\",\n\n}\n\nexport function CrashedDevices({ list_data, ...rest }) {\n  useEffect(() => {\n    if (list_data.length > 0) {\n      const display = list_data.map(\n        device => {\n          return (\n            <Card sx={{\n              m: 1, minWidth: \"500px\"\n            }}\n              key={device.device}>\n              <CardContent>\n                <Typography\n                  color=\"textSecondary\"\n                  gutterBottom\n                  variant=\"overline\"\n                  fontSize=\"large\"\n                >\n                  {device.device_id}\n                </Typography>\n                <Typography>\n                  装置名称 : {device.device_cname}\n                </Typography>\n                <Typography>\n                  異常次數 : {device.count}\n                </Typography>\n              </CardContent>\n            </Card>\n          )\n        }\n      )\n      setData(display);\n    }\n  }, [])\n  const [data, setData] = useState();\n  const [open, setOpen] = useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  return (\n    <Card\n      sx={{ height: '100%' }}\n\n    >\n      <CardContent>\n        <Grid\n          container\n          spacing={3}\n          sx={{ justifyContent: 'space-between' }}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"overline\"\n              fontSize=\"large\"\n            >\n              经常异常装置\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h4\"\n            >\n              {list_data.length}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar\n              sx={{\n                backgroundColor: 'info.main',\n                height: 56,\n                width: 56\n              }}\n            >\n              <BrokenImageSharpIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n        <Box sx={{ pt: 3 }}>\n          <Button variant=\"contained\" onClick={handleClickOpen}>\n            查看\n          </Button>\n          <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">\n              {CONTENT.title}\n            </DialogTitle>\n            <DialogContent>\n              {\n                data\n              }\n            </DialogContent>\n            <DialogActions >\n              <Button onClick={handleClose} autoFocus variant=\"contained\">\n                关闭\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n} \n","import React, { useState, useEffect } from \"react\";\n\nimport {\n  Avatar, Box, Card, CardContent, Grid,\n  Typography, Dialog, DialogTitle, DialogContent, Button, DialogActions\n} from '@mui/material';\n\nimport LibraryAddCheckIcon from '@mui/icons-material/LibraryAddCheck';\n\nconst CONTENT = {\n  title: \"接受任务总数的员工排名\",\n\n}\n\nexport function AcceptMissionEmployees({ list_data, ...rest }) {\n  useEffect(() => {\n    if (list_data.length > 0) {\n      const display = list_data.map(\n        employee => {\n          return (\n            <Card sx={{\n              m: 1, minWidth: \"500px\"\n            }}\n              key={employee.username}>\n              <CardContent>\n                <Typography\n                  color=\"textSecondary\"\n                  gutterBottom\n                  variant=\"overline\"\n                  fontSize=\"large\"\n                >\n                  员工 ID : {employee.badge}\n                </Typography>\n                <Typography>\n                  姓名 : {employee.username}\n                </Typography>\n                <Typography>\n                  接受总数 : {employee.count}\n                </Typography>\n              </CardContent>\n            </Card>\n          )\n        }\n      )\n      setData(display);\n    }\n  }, [])\n  const [data, setData] = useState();\n  const [open, setOpen] = useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Card\n      sx={{ height: '100%' }}\n    >\n      <CardContent>\n        <Grid\n          container\n          spacing={3}\n          sx={{ justifyContent: 'space-between' }}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"overline\"\n              fontSize=\"large\"\n            >\n              接受任务总数的员工排名\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h4\"\n            >\n              {list_data.length}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar\n              sx={{\n                backgroundColor: 'success.main',\n                height: 56,\n                width: 56\n              }}\n            >\n              <LibraryAddCheckIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n        <Box sx={{ pt: 3 }}>\n          <Button variant=\"contained\" onClick={handleClickOpen}>\n            查看\n          </Button>\n          <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            sx={{ width: '100%' }}\n          >\n            <DialogTitle id=\"alert-dialog-title\">\n              {CONTENT.title}\n            </DialogTitle>\n            <DialogContent>\n              {\n                data\n              }\n            </DialogContent>\n            <DialogActions >\n              <Button onClick={handleClose} autoFocus variant=\"contained\">\n                关闭\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n} \n","import React, { useState, useEffect } from \"react\";\n\nimport {\n  Avatar, Box, Card, CardContent, Grid,\n  Typography, Dialog, DialogTitle, DialogContent, Button, DialogActions\n} from '@mui/material';\nimport CancelIcon from '@mui/icons-material/Cancel';\n\nconst CONTENT = {\n  title: \"拒绝任务总数的员工排名\",\n}\n\nexport function RejectMissionEmployees({ list_data, ...rest }) {\n  useEffect(() => {\n    if (list_data.length > 0) {\n      const display = list_data.map(\n        employee => {\n          return (\n            <Card sx={{\n              m: 1, minWidth: \"500px\"\n            }} key={employee.username}>\n              <CardContent>\n                <Typography\n                  color=\"textSecondary\"\n                  gutterBottom\n                  variant=\"overline\"\n                  fontSize=\"large\"\n                >\n                  员工 ID : {employee.username}\n                </Typography>\n                <Typography>\n                  姓名 : {employee.full_name}\n                </Typography>\n                <Typography>\n                  拒绝总数 : {employee.count}\n                </Typography>\n              </CardContent>\n            </Card>\n          )\n        }\n      )\n      setData(display);\n    }\n  }, [])\n  const [data, setData] = useState();\n  const [open, setOpen] = useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Card\n      sx={{ height: '100%' }}\n    >\n      <CardContent>\n        <Grid\n          container\n          spacing={3}\n          sx={{ justifyContent: 'space-between' }}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"overline\"\n              fontSize=\"large\"\n            >\n              拒绝任务总数的员工排名\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h4\"\n            >\n              {list_data.length}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar\n              sx={{\n                backgroundColor: 'warning.main',\n                height: 56,\n                width: 56\n              }}\n            >\n              <CancelIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n        <Box sx={{ pt: 3 }}>\n          <Button variant=\"contained\" onClick={handleClickOpen}>\n            查看\n          </Button>\n          <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">\n              {CONTENT.title}\n            </DialogTitle>\n            <DialogContent>\n              {\n                data\n              }\n            </DialogContent>\n            <DialogActions >\n              <Button onClick={handleClose} autoFocus variant=\"contained\">\n                关闭\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n} \n","import React, { useState, useEffect } from \"react\";\n\nimport {\n  Avatar, Box, Card, CardContent, Grid,\n  Typography, Dialog, DialogTitle, DialogContent, Button, DialogActions\n} from '@mui/material';\nimport AssignmentLateIcon from '@mui/icons-material/AssignmentLate';\n\nconst CONTENT = {\n  title: \"前十大历史机台异常任务\",\n}\n\nexport function AbnormalMissions({ list_data, ...rest }) {\n  useEffect(() => {\n    if (list_data.length > 0) {\n      const display = list_data.map(\n        mission => {\n          return (\n            <Card sx={{\n              m: 1, minWidth: \"500px\"\n            }}\n              key={mission.mission_id}>\n              <CardContent>\n                <Typography\n                  color=\"textSecondary\"\n                  gutterBottom\n                  variant=\"overline\"\n                  fontSize=\"large\"\n                >\n                  任务 ID : {mission.mission_id}\n                </Typography>\n                <Typography>\n                  装置 ID : {mission.device_id}\n                </Typography>\n                <Typography>\n                  装置名称 : {mission.device_cname}\n                </Typography>\n                <Typography>\n                  类别 : {mission.categories}\n                </Typography>\n                <Typography>\n                  信息 : {mission.messages}\n                </Typography>\n              </CardContent>\n            </Card>\n          )\n        }\n      )\n      setData(display);\n    }\n  }, [])\n  const [data, setData] = useState();\n  const [open, setOpen] = useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Card\n      sx={{ height: '100%' }}\n    >\n      <CardContent>\n        <Grid\n          container\n          spacing={3}\n          sx={{ justifyContent: 'space-between' }}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"overline\"\n              fontSize=\"large\"\n            >\n              前十大历史机台异常任务\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h4\"\n            >\n              {list_data.length}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar\n              sx={{\n                backgroundColor: 'info.main',\n                height: 56,\n                width: 56\n              }}\n            >\n              <AssignmentLateIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n        <Box sx={{ pt: 3 }}>\n          <Button variant=\"contained\" onClick={handleClickOpen}>\n            查看\n          </Button>\n          <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">\n              {CONTENT.title}\n            </DialogTitle>\n            <DialogContent>\n              {\n                data\n              }\n            </DialogContent>\n            <DialogActions >\n              <Button onClick={handleClose} autoFocus variant=\"contained\">\n                关闭\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n} \n","import React, { useState, useEffect } from \"react\";\n\nimport {\n  Avatar, Box, Card, CardContent, Grid,\n  Typography, Dialog, DialogTitle, DialogContent, Button, DialogActions\n} from '@mui/material';\nimport InsertChartIcon from '@mui/icons-material/InsertChartOutlined';\n\nconst CONTENT = {\n  title: \"机台异常处理时间/次数\",\n}\n\nexport function AbnormalDevices({ list_data, ...rest }) {\n  useEffect(() => {\n    if (list_data.length > 0) {\n      const display = list_data.map(\n        device => {\n          return (\n            <Card sx={{\n              m: 1, minWidth: \"500px\"\n            }}\n              key={device.device_id}>\n              <CardContent>\n                <Typography\n                  color=\"textSecondary\"\n                  gutterBottom\n                  variant=\"overline\"\n                  fontSize=\"large\"\n                >\n                  装置 ID : {device.device_id}\n                </Typography>\n                <Typography>\n                  装置名称 : {device.device_cname}\n                </Typography>\n                <Typography>\n                  类别 : {device.category}\n                </Typography>\n                <Typography>\n                  信息 : {device.messages}\n                </Typography>\n                <Typography>\n                  历史最佳指派员工 : {\n                    device.top_great_assignees &&\n                    device.top_great_assignees.map(user => {\n                      return (\n                        <Card key={user.badge}>\n                          <CardContent>\n                            <Typography\n                              color=\"textSecondary\"\n                              gutterBottom\n                              variant=\"overline\"\n                              fontSize=\"small\"\n                            >\n                              员工 ID : {user.badge}\n                            </Typography>\n                            <Typography fontSize=\"small\">\n                              姓名 : {user.username}\n                            </Typography>\n                            {/* <Typography fontSize=\"small\">\n                              Time(s) : {user.duration}\n                            </Typography> */}\n                          </CardContent>\n                        </Card>\n                      )\n                    })\n                  }\n                </Typography>\n              </CardContent>\n            </Card>\n          )\n        }\n      )\n      setData(display);\n    }\n  }, [])\n  const [data, setData] = useState();\n  const [open, setOpen] = useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Card\n      sx={{ height: '100%' }}\n    >\n      <CardContent>\n        <Grid\n          container\n          spacing={3}\n          sx={{ justifyContent: 'space-between' }}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"overline\"\n              fontSize=\"large\"\n            >\n              机台异常处理时间/次数\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h4\"\n            >\n              {list_data.length}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar\n              sx={{\n                backgroundColor: 'info.main',\n                height: 56,\n                width: 56\n              }}\n            >\n              <InsertChartIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n        <Box sx={{ pt: 3 }}>\n          <Button variant=\"contained\" onClick={handleClickOpen}>\n            查看\n          </Button>\n          <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">\n              {CONTENT.title}\n            </DialogTitle>\n            <DialogContent>\n              {\n                data\n              }\n            </DialogContent>\n            <DialogActions >\n              <Button onClick={handleClose} autoFocus variant=\"contained\">\n                关闭\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n} \n","import React, { useState, useRef } from \"react\";\n\nimport {\n  Box,\n  Card,\n  Grid,\n  FormControl,\n  InputLabel\n} from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { DateRange } from \"../components/date-range.js\";\nimport { Rate } from \"../components/rate.js\";\nimport { CrashedDevices } from \"../components/crashed-devices.js\";\nimport { AcceptMissionEmployees } from \"../components/accept-mission-employees.js\";\nimport { RejectMissionEmployees } from \"../components/reject-mission-employees.js\";\nimport { AbnormalMissions } from \"../components/abnormal-missions.js\";\nimport { AbnormalDevices } from \"../components/abnormal-devices.js\";\nimport { WorkshopPicker } from \"../components/workshop-picker.js\";\nimport { apiStatisticsWithDate, apiStatisticsWithShift } from \"../api.js\";\n\nconst darkTheme = createTheme({\n  palette: {\n    mode: 'dark',\n    background: {\n      default: '#1a1e2b',\n      paper: '#1a1e2b',\n    },\n    text: {\n      primary: '#EDF2F7',\n    },\n    primary: {\n      // Purple and green play nicely together.\n      main: '#5048E5',\n    },\n  },\n});\n\nexport default function Statistics({ token, setAlert, ...rest }) {\n  const _isMounted = useRef(true);\n  const [statusData, setData] = useState();\n  const [workshop, setWorkshop] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const [sDate, setSDate] = useState(new Date());\n  const [eDate, setEDate] = useState(new Date());\n  const [shift, setShift] = useState();\n\n  const updatedata = (data) => {\n    setData(null);\n    console.log(data);\n    setLoading(true);\n    if (data.shift !== null) {\n      // 更改時間，讓時間只剩下日期(正崴需求! (2023/01/10 17:46))\n      // data['start'] = data['start'].substring(0, 10)\n      // data['end'] = data['end'].substring(0, 10)\n\n      apiStatisticsWithShift(data).then(res => {\n        setData(res.data);\n        setAlert({\n          'open': true,\n          'msg': \"更新成功\",\n          'type': 'success'\n        });\n      }).catch(err => {\n        setAlert({\n          'open': true,\n          'msg': \"错误代码：\" + err.response.status,\n          'type': 'error'\n        });\n        console.log(err);\n      }).finally(() => {\n        setLoading(false);\n      });\n    }\n    else {\n      apiStatisticsWithDate(data).then(res => {\n        console.log('APICALL資料(不分班別)')\n        console.log(res.data)\n        setData(res.data);\n        setAlert({\n          'open': true,\n          'msg': \"更新成功\",\n          'type': 'success'\n        });\n      }).catch(err => {\n        setAlert({\n          'open': true,\n          'msg': \"请选取车间\",\n          'type': 'error'\n        });\n        console.log(err);\n      }).finally(() => {\n        setLoading(false);\n      });\n    }\n  }\n  const handleOnClick = () => {\n    if (workshop === \"\") {\n      setAlert({\n        'open': true,\n        'msg': \"请选取车间\",\n        'type': 'error'\n      });\n      return;\n    }\n    let _shift;\n    if (shift == \"夜\") {\n      _shift = true;\n    } else if (shift == \"日\") {\n      _shift = false;\n    } else {\n      _shift = null;\n    }\n    const data = {\n      token: token,\n      start: new Date(sDate).toISOString(),\n      end: new Date(eDate).toISOString(),\n      workshop: workshop,\n      shift: _shift\n    }\n    updatedata(data);\n  }\n\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <Grid\n        container\n        spacing={3}\n        sx={{ pb: 5 }}\n      >\n        <Grid item xs={8}>\n          <DateRange sDate={sDate} eDate={eDate} setSDate={setSDate} setEDate={setEDate} setShift={setShift} />\n        </Grid>\n        <Grid item xs={4} justifyContent={\"center\"}>\n          <Card >\n            <Box>\n              <FormControl sx={{ mt: 3, mb: 3, mr: 3, ml: 3 }}>\n                <InputLabel id=\"demo-simple-select-label\" >WorkShop</InputLabel>\n                <WorkshopPicker token={token} workshop={workshop} setWorkshop={setWorkshop} />\n              </FormControl>\n              <LoadingButton\n                variant=\"contained\"\n                size=\"large\"\n                component=\"span\"\n                sx={{\n                  borderRadius: 4,\n                  justifyContent: 'center',\n                  letterSpacing: 3,\n                  mt: 4\n                }}\n                loading={loading}\n                onClick={handleOnClick}\n              >\n                更新资料\n              </LoadingButton>\n            </Box>\n          </Card>\n        </Grid>\n      </Grid>\n      {\n        statusData &&\n        <Grid\n          container\n          spacing={3}\n        >\n          <Grid\n            item\n            lg={4}\n          >\n            {\n              statusData\n              && <Rate list_data={statusData.login_users_percentage_this_week} />\n              // statusData\n              // && (statusData['login_users_percentage_this_week'] == 0 ? <Rate rate={0} /> :\n              //   <Rate list_data={statusData['login_users_percentage_this_week'][0] * 100} />\n              // )\n              // && <Rate list_data={statusData.login_users_percentage_this_week[1].login_users} />\n            }\n          </Grid>\n          <Grid\n            item\n            lg={4}\n          >\n            {\n              statusData.devices_stats &&\n              <CrashedDevices list_data={statusData.devices_stats.most_frequent_crashed_devices} />\n            }\n          </Grid>\n          <Grid\n            item\n            lg={4}\n          >\n            {\n              statusData.top_most_accept_mission_employees &&\n              <AcceptMissionEmployees list_data={statusData.top_most_accept_mission_employees} />\n            }\n\n          </Grid>\n          <Grid\n            item\n            lg={4}\n          >\n            {\n              statusData.top_most_reject_mission_employees &&\n              <RejectMissionEmployees list_data={statusData.top_most_reject_mission_employees} />\n            }\n\n          </Grid>\n          <Grid\n            item\n            lg={4}\n          >\n            {\n              statusData.devices_stats &&\n              <AbnormalMissions list_data={statusData.devices_stats.top_abnormal_missions_this_month} />\n            }\n\n          </Grid>\n          <Grid\n            item\n            lg={4}\n          >\n            {\n              statusData.devices_stats &&\n              <AbnormalDevices list_data={statusData.devices_stats.top_abnormal_devices} />\n            }\n          </Grid>\n        </Grid>\n      }\n    </ThemeProvider>\n  );\n}","import React, { useState } from \"react\";\n\nimport { saveAs } from 'file-saver';\n\nimport { Box, Card, CardContent, CardHeader, Divider, Typography, createTheme, ThemeProvider,InputLabel, MenuItem, Select,FormControl } from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport { QRCode as QRCodeIcon } from '../icons/qrcode';\nimport { WorkshopPicker } from \"../components/workshop-picker.js\";\n\nimport ArrowCircleDownIcon from '@mui/icons-material/ArrowCircleDown';\n\nimport { apiQRCode } from \"../api.js\";\n\nconst darkTheme = createTheme({\n    palette: {\n        mode:'dark',\n        primary: {\n            main: '#5048E5',\n            light: '#828DF8',\n            dark: '#7582EB',\n            contrastText: '#FFFFFF'\n          },\n        background: {\n            default: '#1a1e2b',\n            paper: '#1a1e2b',\n          },\n          text: {\n            primary: '#fff',\n          }\n    },\n  });\n\n\n\nexport default function QrcodeDownload({token, ...rest}) {\n    const [downloading, setDownload] = useState(false);\n    const [workshop, setWorkshop] = useState(\"\");\n\n    const qrCodeHandler = () => {\n        //let data = `grant_type=&username=${account}&password=${password}&scope=&client_id=&client_secret=`\n        if(workshop != \"\"){\n            setDownload(true);\n            const data = {\n                \"name\" : workshop,\n                \"token\" : token\n            }\n            apiQRCode(data)\n            .then(res => {\n                    saveAs(res.data, `${workshop}.zip`);\n                    setDownload(false);\n                }\n            ).catch(\n                err => {\n                    alert(\"workshop is not found!\");\n                }\n            )\n        }\n    }\n\n    return (\n        <ThemeProvider theme={darkTheme}>\n            <Card >\n                <CardHeader title=\"QR Code 下载\" />\n                <Divider sx={{ borderBottomWidth: 3 }}/>\n                <CardContent>\n                    <Box\n                    sx={{\n                        display: 'flex',\n                        justifyContent: 'center',\n                        pt: 2\n                    }}\n                    >\n                    <QRCodeIcon fontSize=\"large\" />\n                    </Box>\n                    <Box\n                    sx={{\n                        display: 'flex',\n                        justifyContent: 'center',\n                        pt: 2\n                    }}\n                    >   \n                        <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                            请选取要下载的车间\n                        </Typography>\n                    </Box>  \n                    <Box\n                    sx={{\n                        display: 'flex',\n                        justifyContent: 'center',\n                        pt: 2\n                    }}\n                    >\n                        <FormControl >\n                                <InputLabel id=\"demo-simple-select-label\">WorkShop</InputLabel>\n                                <WorkshopPicker token={token} workshop={workshop} setWorkshop={setWorkshop} />\n                                <LoadingButton\n                                    onClick={qrCodeHandler}\n                                    endIcon={<ArrowCircleDownIcon color=\"white\"/>}\n                                    loading={downloading}\n                                    loadingPosition=\"end\"\n                                    variant=\"contained\"\n                                    sx={{m:3}}\n                                    color=\"primary\"\n                                    size=\"large\"\n                                >\n                                    下載\n                                </LoadingButton>\n                        </FormControl>   \n                    </Box>\n                </CardContent>\n            </Card>\n        </ThemeProvider>\n    );\n}\n","import React, { useState } from \"react\";\n\nimport { Box, Card, CardContent, CardHeader, Divider, Typography, createTheme, Container, ThemeProvider,InputLabel, MenuItem, Select,FormControl } from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport MapIcon from '@mui/icons-material/Map';\n\nimport ArrowCircleDownIcon from '@mui/icons-material/ArrowCircleDown';\n\nimport { apiMapGet } from \"../api.js\";\n\nimport { WorkshopPicker } from \"../components/workshop-picker.js\";\n\nconst darkTheme = createTheme({\n    palette: {\n        mode:'dark',\n        primary: {\n            main: '#5048E5',\n            light: '#828DF8',\n            dark: '#7582EB',\n            contrastText: '#FFFFFF'\n          },\n        background: {\n            default: '#1a1e2b',\n            paper: '#1a1e2b',\n          },\n          text: {\n            primary: '#fff',\n          }\n    },\n  });\n\nexport default function Map({token, setAlert, ...rest}) {\n  const [downloading, setDownload] = useState(false);\n    const [workshop, setWorkshop] = useState(\"\");\n    const [img, setImg] = useState();\n\n    const style = {\n        'minWidth': '100%',\n        'maxWidth': '100%'\n    };\n\n    const arrayBufferToBase64 = (buffer) =>  {\n      var binary = '';\n      var bytes = [].slice.call(new Uint8Array(buffer));\n      bytes.forEach((b) => binary += String.fromCharCode(b));\n      const img_component = <img src={`data:image/png;base64,${window.btoa(binary)}`} style={style} />;\n      setImg(img_component);\n  };\n\n    const mapHandler = () => {\n        if(workshop != \"\"){\n            setDownload(true);\n            const data = {\n                \"name\" : workshop,\n                \"token\" : token\n            }\n            apiMapGet(data)\n            .then(res => {\n                    arrayBufferToBase64(res.data);\n                }\n            ).catch(\n                err => {\n                    setAlert({\n                        'open':true,\n                        'msg': \"[404] 無车间地图資料\",\n                        'type': 'error'\n                    })\n                }\n            ).finally(()=>{\n                setDownload(false);\n            })\n        }\n    }\n\n    return (\n        <ThemeProvider theme={darkTheme}>\n            <Card >\n                <CardHeader title=\"车间地图显示\" />\n                <Divider sx={{ borderBottomWidth: 3 }}/>\n                <CardContent>\n                    <Box\n                    sx={{\n                        display: 'flex',\n                        justifyContent: 'center',\n                        pt: 2\n                    }}\n                    >\n                    <MapIcon fontSize=\"large\" />\n                    </Box>\n                    <Box\n                    sx={{\n                        display: 'flex',\n                        justifyContent: 'center',\n                        pt: 2\n                    }}\n                    >   \n                        <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                            请选取要显示的车间\n                        </Typography>\n                    </Box>  \n                    <Box\n                    sx={{\n                        display: 'flex',\n                        justifyContent: 'center',\n                        pt: 2\n                    }}\n                    >\n                        <FormControl >\n                                <InputLabel id=\"demo-simple-select-label\">WorkShop</InputLabel>\n                                <WorkshopPicker token={token} workshop={workshop} setWorkshop={setWorkshop} />\n                                {/* <Select\n                                labelId=\"demo-simple-select-label\"\n                                id=\"demo-simple-select\"\n                                value={workshop}\n                                label=\"WorkShop\"\n                                onChange={handleChange}\n                                >\n                                    {\n                                        selectItem\n                                    }\n                                </Select> */}\n                                <LoadingButton\n                                    onClick={mapHandler}\n                                    endIcon={<ArrowCircleDownIcon color=\"white\"/>}\n                                    loading={downloading}\n                                    loadingPosition=\"end\"\n                                    variant=\"contained\"\n                                    sx={{m:3}}\n                                    color=\"primary\"\n                                    size=\"large\"\n                                >\n                                    显示\n                                </LoadingButton>\n                        </FormControl>   \n                    </Box>\n                    <Box\n                      sx={{\n                        display: 'flex',\n                        justifyContent: 'center',\n                    }}\n                    >\n                    <Container sx={{\n                    width: '-webkit-fill-available',\n                    overflowX:'scroll'}}>\n                        {img}\n                    </Container>\n                    </Box>\n                </CardContent>\n            </Card>\n        </ThemeProvider>\n    );\n}","import React, { useState, useEffect } from \"react\";\n\nimport {\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    Container\n} from '@mui/material';\n\nexport default function ExcelTableView({ keys, datas, id2words, ...rest }) {\n    const [table, setTable] = useState();\n\n    return (\n        <Table sx={{ minWidth: 1000, overflowX: 'scroll' }}>\n            <TableHead sx={{ background: \"#272d3a\" }}>\n                <TableRow >\n                    {\n                        id2words == null ?\n                            keys.map((key, index) => {\n                                return <TableCell sx={{ minWidth: \"100%\" }} key={index}>{key}</TableCell>\n                            }) : id2words.map((key, index) => {\n                                return <TableCell sx={{ minWidth: \"100%\" }} key={index}>{key}</TableCell>\n                            })\n                    }\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {\n                    datas.map((data, i) => {\n                        return (\n                            <TableRow key={i + 1}>\n                                {\n                                    keys.map((key, j) => {\n                                        if(data[key] === true){\n                                            return (\n                                                <TableCell sx={{ minWidth: \"100%\" }} key={key} >\n                                                    {\n                                                        \"是\"\n                                                    }\n                                                </TableCell>\n                                            )\n                                        }else if(data[key] === false){\n                                            return (\n                                                <TableCell sx={{ minWidth: \"100%\" }} key={key} >\n                                                    {\n                                                        \"否\"\n                                                    }\n                                                </TableCell>\n                                            )\n                                        }else{\n                                            return (\n                                                <TableCell sx={{ minWidth: \"100%\" }} key={key} >\n                                                    {\n                                                        data[key]\n                                                    }\n                                                </TableCell>\n                                            )\n                                        }\n                                    })\n                                }\n                            </TableRow>\n                        )\n                    })\n                }\n            </TableBody>\n\n        </Table>\n    );\n}","import React, { useState, useEffect } from \"react\";\n\nimport { Box, Dialog, DialogTitle, DialogContent, Button, DialogActions, TableBody\n} from '@mui/material';\n\nimport ExcelTableView from \"../components/excel-table-view\";\n\nexport function Parameter({csv_data, ...rest}) {\n  useEffect(()=> {\n    setData(csv_data);\n}, [])\n  const [data, setData] = useState();\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  \n  return (\n    <Box sx={{ pt: 3, display: 'flex',\n    justifyContent: 'center' }} >\n      <Button variant=\"contained\" onClick={handleClickOpen}>\n        查看 Parameter\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n        fullScreen\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n        参数\n        </DialogTitle>\n        <DialogContent>\n          {\n            data && \n            <ExcelTableView keys={data['keys']} datas={data['datas']}/>\n          }\n        </DialogContent>\n        <DialogActions sx={{ pt: 3, display: 'flex',\n          justifyContent: 'center' }}>\n            <Button onClick={handleClose} autoFocus variant=\"contained\" size=\"large\">\n            关闭\n            </Button>\n        </DialogActions>\n      </Dialog>\n      </Box>\n  );\n} \n","import React, { useState } from \"react\";\nimport { Container, Snackbar, Box, Typography } from \"@mui/material\";\nimport MuiAlert from '@mui/material/Alert';\n\nexport const AlertComponent = ({ open, setOpen, message, severity, duration }) => {\n  const [state, setState] = useState({\n    vertical: 'top',\n    horizontal: 'center',\n  });\n  const { vertical, horizontal } = state;\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') { return; }\n    setOpen(false);\n  }\n\n  const Alert = React.forwardRef(function Alert(props, ref) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n  });\n\n  return (\n    <Snackbar open={open} autoHideDuration={duration} onClose={handleClose} anchorOrigin={{ vertical, horizontal }} >\n      <Alert onClose={handleClose} severity={severity} sx={{ width: '100%' }}>\n        <Typography variant=\"h6\">\n          {String(message)}\n        </Typography>\n      </Alert>\n    </Snackbar>\n  );\n};\n\n\n","import { createSvgIcon } from '@mui/material/utils';\nimport React from \"react\";\nexport const Upload = createSvgIcon(\n  <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" >\n  <g>\n    <g>\n      <path d=\"m153.7,171.5l81.9-88.1v265.3c0,11.3 9.1,20.4 20.4,20.4 11.3,0 20.4-9.1 20.4-20.4v-265.3l81.9,88.1c7.7,8.3 20.6,8.7 28.9,1.1 8.3-7.7 8.7-20.6 1.1-28.9l-117.3-126.2c-11.5-11.6-25.6-5.2-29.9,0l-117.3,126.2c-7.7,8.3-7.2,21.2 1.1,28.9 8.2,7.6 21.1,7.2 28.8-1.1z\"/>\n      <path d=\"M480.6,341.2c-11.3,0-20.4,9.1-20.4,20.4V460H51.8v-98.4c0-11.3-9.1-20.4-20.4-20.4S11,350.4,11,361.6v118.8    c0,11.3,9.1,20.4,20.4,20.4h449.2c11.3,0,20.4-9.1,20.4-20.4V361.6C501,350.4,491.9,341.2,480.6,341.2z\"/>\n    </g>\n  </g>\n</svg>,\n  'Upload'\n);\n","import React, { useState, useEffect } from \"react\";\n\nimport { styled } from '@mui/material/styles';\nimport {\n    Alert,\n    Box,\n    Card,\n    CardContent,\n    CardHeader,\n    Divider,\n    TextField,\n    Typography,\n    createTheme,\n    ThemeProvider,\n    FormControl,\n    InputLabel,\n    Select,\n    MenuItem,\n} from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport CloudUploadOutlinedIcon from '@mui/icons-material/CloudUploadOutlined';\n\nimport ExcelTableView from \"../components/excel-table-view\";\nimport { Parameter } from \"../components/parameter\";\nimport { AlertComponent } from \"../components/alert-component\";\n\nimport { Upload } from '../icons/upload';\nimport { apiGetFileName } from \"../api.js\";\nimport { apiDevices, apiWorkShopList, apiDevicesData, apiGetSystemEnvSetting, apiPostSystemEnvSetting, apiGetSystemEnvSettingCount, apiPostSystemEnvSettingCount } from \"../api.js\";\n\nconst CONTENT = {\n    id: \"装置 ID\",\n    project: \"专案\",\n    process: \"制程段\",\n    line: \"产线\",\n    device_name: \"装置代号\",\n    device_cname: \"装置名称\",\n    workshop: \"车间\",\n    x_axis: \"X 轴座标\",\n    y_axis: \"Y 轴座标\",\n    is_rescue: \"是否为救援站\",\n    sop_link: \"SOP 链接\"\n}\n\nconst darkTheme = createTheme({\n    palette: {\n        mode: 'dark',\n        primary: {\n            main: '#5048E5',\n            light: '#828DF8',\n            dark: '#7582EB',\n            contrastText: '#FFFFFF'\n        },\n        background: {\n            default: '#1a1e2b',\n            paper: '#1a1e2b',\n        },\n        text: {\n            primary: '#fff',\n        }\n    },\n});\n\nconst Input = styled('input')({\n    display: 'none',\n});\n\nexport default function DevicesUpload({ token, ...rest }) {\n    const [dataStatus, setDataStatus] = useState(\"No File Chosen\");\n    const [uploading, setUpload] = useState(false);\n    const [loading, setLoading] = useState(false);\n    // init workshop\n    const [selectItem, setSelectItem] = useState(\"\");\n    const [workshop, setWorkshop] = useState(\"\");\n    const [keys, setKeys] = useState();\n    const [id2words, setId2Word] = useState();\n    const [datas, setDatas] = useState();\n\n    const [parameter, setParameter] = useState();\n\n    const [alert, setAlert] = useState(false);\n    const [errmsg, setErrMsg] = useState();\n\n    const [rescueStatus, setRescueStatus] = useState(\"\");\n    const [rescueCount, setRescueCount] = useState(\"\");\n    const [rescueTime, setRescueTime] = useState(\"\");\n\n    const [open, setOpen] = useState(false);\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    useEffect(() => {\n        updateData();\n    }, [])\n\n    useEffect(() => {\n        if (errmsg) {\n            setAlert(true);\n        }\n    }, [errmsg])\n\n    const updateData = () => {\n        setUpload(false);\n        setWorkshop(null);\n        setKeys(null);\n        setDatas(null);\n        // 先抓當前救援站數量\n        apiGetSystemEnvSettingCount({ \"key\": \"rescue_count\", token: token }).then(res => {\n            setRescueCount(() => {\n                return (res.data.value)\n            })\n        });\n        // 抓救援站設定\n        apiGetSystemEnvSetting({ \"key\": \"auto_rescue\", token: token }).then(res => {\n            if (res.data.value == \"1\") {\n                setRescueStatus(() => {\n                    return ('自动')\n                })\n            } else {\n                setRescueStatus(() => {\n                    return ('手动')\n                })\n            }\n        });\n        apiWorkShopList(token).then(res => {\n            setSelectItem(res.data.map(name => {\n                return (<MenuItem key={name} value={name}>{name}</MenuItem>)\n            }))\n        }).catch(err => {\n        });\n    }\n\n    // useEffect(() => {\n    //     handleOnClickGetEnv();\n    //     handleOnClickGetCount();\n    // }, [])\n\n    // const handleOnClickGetEnv= () => {\n    //     const data = {\n    //         \"key\": \"auto_rescue\",\n    //         \"token\": token\n    //     }\n    //     apiGetSystemEnvSetting(data).then(res => {\n    //         if (res.data.value == \"1\") {\n    //             setRescueStatus(() => {\n    //                 return ('自动')\n    //             })\n    //         } else {\n    //             setRescueStatus(() => {\n    //                 return ('手动')\n    //             })\n    //         }\n    //     });\n    // }\n    // const handleOnClickGetCount = () => {\n    //     const data = {\n    //         \"key\": \"rescue_count\",\n    //         \"token\": token\n    //     }\n    //     apiGetSystemEnvSettingCount(data).then(res => {\n    //         setRescueCount(() => {\n    //             return (res.data.value)\n    //         })\n    //     });\n    // }\n\n    const fetchData = (name) => {\n        let data = {\n            name: name,\n            token: token\n        }\n        apiDevicesData(data).then(res => {\n\n            let keys = Object.keys(res.data[0]);\n            let newKeys = []\n            keys.map(key => {\n                newKeys.push(CONTENT[key]);\n            })\n            setKeys(keys);\n            setId2Word(newKeys);\n            setDatas(res.data);\n        }).catch(err => {\n            setErrMsg(err.response.statusText);\n        }).finally(() => {\n            setUpload(false);\n        })\n    }\n    const handleWorkshopChange = (event) => {\n        setWorkshop(event.target.value);\n        fetchData(event.target.value);\n    }\n\n    const handleFileChange = (e) => {\n        if (e.target.files.length > 0) {\n\n            setDataStatus(e.target.files[0].name);\n\n            setUpload(true);\n\n            const file = e.target.files[0];\n            let formData = new FormData();\n            formData.append(\"file\", file);\n            formData.append(\"clear_all\", true);\n\n            let data = {};\n            data['token'] = token;\n            data['file'] = formData;\n\n            apiDevices(data).then(res => {\n                if (res.status === 201) {\n                    setUpload(false);\n                    updateData();\n                    let rawdata = res.data['parameter'].split(/\\n/);\n                    let processed_data = [];\n                    let keys = []\n                    rawdata.map((line, i) => {\n                        if (i == 0) {\n                            keys = line.split(',');\n                            keys[0] = 'idx';\n                        } else {\n                            let temp = line.split(',');\n                            let obj = {};\n                            temp.map((item, j) => {\n                                obj[keys[j]] = temp[j];\n                            })\n                            processed_data.push(obj);\n                        }\n                    });\n                    let csv_data = {\n                        'keys': keys,\n                        'datas': processed_data\n                    }\n\n                    setParameter(csv_data);\n                }\n                handleOpen()\n            }).catch(err => {\n                console.log(err);\n                setErrMsg(\"档案格式有误, 请重新上传！\");\n                updateData();\n            })\n        } else {\n            setDataStatus(\"No File Chosen\");\n        }\n    }\n\n    const [deviceName, setDeviceName] = useState();\n\n    useEffect(() => {\n        handleOnClick();\n    })\n\n    const updateFileName = (data) => {\n        apiGetFileName(data).then(res => {\n            // console.log(res.data)\n            setDeviceName(res.data.devices);\n            // setAlert({\n            //     'open': true,\n            //     'msg': \"更新成功\",\n            //     'type': 'success'\n            // });\n        })\n        // .catch(err => {\n        //     console.log(err)\n        //     setAlert({\n        //         'open': true,\n        //         'msg': \"错误代码：\" + err.response,\n        //         'type': 'error'\n        //     });\n        //     console.log(err);\n        // }).finally(() => {\n        //     setLoading(false);\n        // });\n    }\n    const handleOnClick = () => {\n        const data = {\n            \"token\": token,\n        }\n        updateFileName(data);\n    }\n\n    // useEffect(() => {\n    //     valueChange();\n    // })\n\n    // const valueChange = () => {\n    //     const data = {\n    //         token: token,\n    //         key: \"auto_rescue\",\n    //     }\n    //     apiGetSystemEnvSetting(data).then(res => {\n    //         setRescueValue(res.data.value)\n    //         console.log('接到的Settings value')\n    //         console.log(rescueValue)\n    //         if (res.data.value == \"0\") {\n    //             setRescueStatus(\"手動\")\n    //         }\n    //         else if (res.data.value == \"1\") {\n    //             setRescueStatus(\"自動\")\n    //         }\n    //     })\n    // }\n\n    // useEffect(() => {\n    //     // Just run the first time\n    //     const data = {\n    //         \"token\": token,\n    //         \"key\": \"auto_rescue\"\n    //     }\n    //     apiGetSystemEnvSetting(data, res => {\n    //         console.log(res.data)\n    //         if (res.data.value == \"1\") {\n    //             setRescueStatus('自动')\n    //         } else {\n    //             setRescueStatus('手动')\n    //         }\n    //     })\n    // })\n\n    // 設定救援站設定\n    const handleOnClickSetting = () => {\n        let temp = \"\"\n        if (rescueStatus == \"自动\") {\n            temp = \"0\"\n        } else {\n            temp = \"1\"\n        }\n        const data = {\n            \"token\": token,\n            \"key\": 'auto_rescue',\n            \"value\": temp\n        }\n        apiPostSystemEnvSetting(data).then(res => {\n            if (res.data.value == \"1\") {\n                setRescueStatus(() => {\n                    return ('自动')\n                })\n                handleOpen()\n            } else {\n                setRescueStatus(() => {\n                    return ('手动')\n                })\n                handleOpen()\n            }\n        }).catch(err => {\n            console.log(err);\n            setErrMsg(\"更新失败！\");\n        })\n        // apiGetSystemEnvSetting(data).then(res => {\n        //     if (res.data.value == '0') {\n        //         data.value = '1'\n        //         apiPostSystemEnvSetting(data)\n        //         console.log('我要 Post 內容')\n        //         console.log(data.value)\n        //         console.log(data.token)\n        //         setRescueStatus('自动')\n        //     }\n        //     else if (res.data.value == '1') {\n        //         data.value = '0'\n        //         apiPostSystemEnvSetting(data)\n        //         console.log('我要 Post 內容')\n        //         console.log(data.value)\n        //         setRescueStatus('手动')\n        //     }\n        // })\n    }\n\n    // 設定救援站數量\n    const handleOnClickSettingQuantity = () => {\n        const data = {\n            \"token\": token,\n            \"key\": 'rescue_count',\n            \"value\": rescueCount\n        }\n        data.value = document.getElementById('quantity').value;\n        apiPostSystemEnvSettingCount(data).catch(err => {\n            console.log(err);\n            setErrMsg(\"更新失败！\");\n        })\n        handleOpen()\n        setRescueCount(document.getElementById('quantity').value)\n    }\n\n    // 設定救援站區間\n    // const handleOnClickSettingTime = () => {\n    //     const data = {\n    //         \"token\": token,\n    //         \"key\": 'rescue_count',\n    //         \"value\": rescueCount,\n    //         \"start\": 0,\n    //         \"end\": 0\n    //     }\n    //     data.start = document.getElementById('start').value;\n    //     data.end = document.getElementById('end').value;\n    //     apiPostSystemEnvSettingCount(data).catch(err => {\n    //         console.log(err);\n    //         setErrMsg(\"更新失败！\");\n    //     })\n    //     handleOpen()\n    //     setRescueTime(document.getElementById('start').value + document.getElementById('end').value)\n    // }\n\n    return (\n        <ThemeProvider theme={darkTheme}>\n            <AlertComponent open={alert} setOpen={setAlert} message={errmsg} severity={\"error\"} />\n            <AlertComponent open={open} setOpen={setOpen} message=\"更新成功\" severity={\"success\"} />\n            <Card >\n                <CardHeader title=\"车间 Layout 座标表上传\" />\n                <Divider sx={{ borderBottomWidth: 3 }} />\n                <CardContent>\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n\n                        }}\n                    >\n                        <Upload fontSize=\"large\" />\n                    </Box>\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <label htmlFor=\"contained-button-file\">\n                            <Input type=\"file\" accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\" id=\"contained-button-file\" onChange={handleFileChange} />\n                            <LoadingButton\n                                color=\"success\"\n                                variant=\"contained\"\n                                size=\"large\"\n                                component=\"span\"\n                                startIcon={<CloudUploadOutlinedIcon sx={{ mr: 1 }} />}\n                                sx={{\n                                    borderRadius: 4,\n                                    minWidth: 200,\n                                    justifyContent: 'center',\n                                    letterSpacing: 3,\n                                }}\n                                type=\"input\"\n                                loading={uploading}\n                            >\n                                {\n                                    uploading ? \"上传中...\" : \"选择档案\"\n                                }\n                            </LoadingButton>\n                        </label>\n                    </Box>\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                            {dataStatus}\n                        </Typography>\n                    </Box>\n                    {\n                        parameter && (\n                            <Box\n                                sx={{\n                                    display: 'flex',\n                                    justifyContent: 'center',\n                                    pt: 2\n                                }}\n                            >\n                                <Divider sx={{ borderBottomWidth: 3 }} />\n                                <Parameter csv_data={parameter} />\n                            </Box>\n                        )\n                    }\n                    <Divider sx={{ borderBottomWidth: 3, m: 3 }} />\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <Typography\n                            color=\"textSecondary\"\n                            gutterBottom\n                            variant=\"overline\"\n                            fontSize=\"large\"\n                        >\n                            目前救援站狀態:{rescueStatus}\n                        </Typography>\n                    </Box>\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <LoadingButton\n                            variant=\"contained\"\n                            size=\"large\"\n                            component=\"span\"\n                            sx={{\n                                borderRadius: 4,\n                                justifyContent: 'center',\n                                letterSpacing: 3,\n                                mt: 2\n                            }}\n                            loading={loading}\n                            onClick={handleOnClickSetting}\n                        >\n                            救援站开关\n                        </LoadingButton>\n                    </Box>\n                    <Divider sx={{ borderBottomWidth: 3, m: 3 }} />\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <Typography\n                            color=\"textSecondary\"\n                            gutterBottom\n                            variant=\"overline\"\n                            fontSize=\"large\"\n                        >\n                            目前救援站数量:{rescueCount}\n                        </Typography>\n                    </Box>\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <TextField\n                            label=\"请输入救援站数量\"\n                            margin=\"normal\"\n                            name=\"quantity\"\n                            id=\"quantity\"\n                            variant=\"outlined\"\n                        />\n                        <LoadingButton\n                            variant=\"contained\"\n                            size=\"medium\"\n                            component=\"span\"\n                            sx={{\n                                borderRadius: 4,\n                                justifyContent: 'center',\n                                letterSpacing: 3,\n                                mt: 2,\n                                ml: 2\n                            }}\n                            loading={loading}\n                            onClick={handleOnClickSettingQuantity}\n                        >\n                            更新数量\n                        </LoadingButton>\n                    </Box>\n                    {/* <Divider sx={{ borderBottomWidth: 3, m: 3 }} />\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <Typography\n                            color=\"textSecondary\"\n                            gutterBottom\n                            variant=\"overline\"\n                            fontSize=\"large\"\n                        >\n                            目前救援站區間:{rescueTime}\n                        </Typography>\n                    </Box>\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <TextField\n                            label=\"请输入救援站區間\"\n                            margin=\"normal\"\n                            name=\"start\"\n                            id=\"start\"\n                            variant=\"outlined\"\n                        />\n                        <TextField\n                            label=\"请输入救援站區間\"\n                            margin=\"normal\"\n                            name=\"end\"\n                            id=\"end\"\n                            variant=\"outlined\"\n                        />\n                        <LoadingButton\n                            variant=\"contained\"\n                            size=\"medium\"\n                            component=\"span\"\n                            sx={{\n                                borderRadius: 4,\n                                justifyContent: 'center',\n                                letterSpacing: 3,\n                                mt: 2,\n                                ml: 2\n                            }}\n                            loading={loading}\n                            onClick={handleOnClickSettingTime}\n                        >\n                            更新區間\n                        </LoadingButton>\n                    </Box> */}\n                    <Divider sx={{ borderBottomWidth: 3, m: 3 }} />\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <LoadingButton\n                            variant=\"contained\"\n                            size=\"large\"\n                            component=\"span\"\n                            sx={{\n                                borderRadius: 4,\n                                justifyContent: 'center',\n                                letterSpacing: 3,\n                                mt: 2\n                            }}\n                            loading={loading}\n                            onClick={handleOnClick}\n                        >\n                            更新资料\n                        </LoadingButton>\n                    </Box>\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <Typography\n                            color=\"textSecondary\"\n                            gutterBottom\n                            variant=\"overline\"\n                            fontSize=\"large\"\n                        >\n                            档案名称:{deviceName}\n                        </Typography>\n                    </Box>\n                    {\n                        selectItem &&\n                        <Box\n                            sx={{\n                                display: 'flex',\n                                justifyContent: 'center',\n                                m: 2\n                            }}\n                        >\n                            <Typography sx={{ m: 1 }}>\n                                现有资料 :\n                            </Typography>\n                            <FormControl sx={{ width: 300 }}>\n                                <InputLabel id=\"workshop-label\">Workshop</InputLabel>\n                                <Select\n                                    labelId=\"workshop-label\"\n                                    id=\"workshop-select\"\n                                    value={workshop == null ? '' : workshop}\n                                    onChange={handleWorkshopChange}\n                                >\n                                    {\n                                        selectItem\n                                    }\n                                </Select>\n                            </FormControl>\n                        </Box>\n                    }\n                    <Box>\n                        {\n                            keys && datas && id2words &&\n                            <ExcelTableView keys={keys} datas={datas} id2words={id2words} />\n                        }\n                    </Box>\n                </CardContent>\n            </Card>\n        </ThemeProvider>\n    );\n}","import React, { useState, useEffect } from \"react\";\n\nimport {\n  Table, TableRow, TableHead, TableCell, Box, Card, CardContent, Dialog, DialogTitle, DialogContent, Button, DialogActions, TableBody\n} from '@mui/material';\n\nconst CONTENT = {\n  project: \"专案\",\n  process: \"制程段\",\n  device_name: \"装置代号\",\n  line: \"产线\",\n  exp: \"经验值\"\n}\n\nexport function WorkExperiences({ list_data, ...rest }) {\n  useEffect(() => {\n    let keys = [\"project\", \"process\", \"device_name\", \"line\", \"exp\"]\n    const display = (\n      <Card sx={{\n        m: 1,\n      }}\n        key=\"ex-card\">\n        <CardContent >\n          <Table>\n            <TableHead sx={{ background: \"#272d3a\" }}>\n              <TableRow>\n                {\n                  keys.map((key, index) => {\n                    return <TableCell key={index}>{CONTENT[key]}</TableCell>\n                  })\n                }\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {\n                list_data.map(\n                  exp => {\n                    return (\n                      <TableRow>\n                        {\n                          keys.map((key, index) => {\n                            return <TableCell key={exp[key]}>{exp[key]}</TableCell>\n                          })\n                        }\n                      </TableRow>\n                    )\n                  })\n              }\n            </TableBody>\n          </Table>\n        </CardContent>\n      </Card>\n    )\n    setData(display);\n  }, [])\n  const [data, setData] = useState();\n  const [open, setOpen] = useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Box sx={{ pt: 3, minWidth: '100%' }}>\n      <Button variant=\"contained\" onClick={handleClickOpen}>\n        查看\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n        sx={{ minWidth: '900px' }}\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          经验\n        </DialogTitle>\n        <DialogContent>\n          {\n            data\n          }\n        </DialogContent>\n        <DialogActions >\n          <Button onClick={handleClose} autoFocus variant=\"contained\">\n            关闭\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n} \n","import React, { useState, useEffect } from \"react\";\n\nimport { styled } from '@mui/material/styles';\nimport {\n    Box,\n    Card,\n    CardContent,\n    CardHeader,\n    Divider,\n    Typography,\n    createTheme,\n    ThemeProvider,\n    Table,\n    TableHead,\n    TableBody,\n    TableRow,\n    TableCell,\n    FormControl,\n    InputLabel,\n    Button\n} from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport CloudUploadOutlinedIcon from '@mui/icons-material/CloudUploadOutlined';\n\nimport { WorkExperiences } from \"../components/worker-experiences\";\nimport { Parameter } from \"../components/parameter\";\nimport { AlertComponent } from \"../components/alert-component\";\nimport { WorkshopPicker } from \"../components/workshop-picker.js\";\n\nimport { Upload } from '../icons/upload';\n\nimport { apiGetFileName } from \"../api.js\";\nimport { apiWorkerinfos, apiWorkerAll } from \"../api.js\";\n\nconst CONTENT = {\n    badge: \"员工 ID\",\n    username: \"姓名\",\n    workshop: \"车间\",\n    level: \"层级\",\n    shift: \"班别\",\n    superior: \"领导\",\n    experiences: \"经验\",\n}\n\nconst darkTheme = createTheme({\n    palette: {\n        mode: 'dark',\n        primary: {\n            main: '#5048E5',\n            light: '#828DF8',\n            dark: '#7582EB',\n            contrastText: '#FFFFFF'\n        },\n        background: {\n            default: '#1a1e2b',\n            paper: '#1a1e2b',\n        },\n        text: {\n            primary: '#fff',\n        }\n    },\n});\n\nconst infotable = (datas) => {\n    console.log(datas)\n    let keys = [\"badge\", \"username\", \"workshop\", \"level\", \"shift\", \"superior\", \"experiences\"]\n    return (\n        <div>\n            <Table >\n                <TableHead>\n                    <TableRow>\n                        <TableCell>\n                            日班\n                        </TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableHead sx={{ background: \"#272d3a\" }}>\n                    <TableRow>\n                        {\n                            keys.map((key, index) => {\n                                return <TableCell key={index}>{CONTENT[key]}</TableCell>\n                            })\n                        }\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {\n                        datas['day_shift'].map((data, i) => {\n                            return (\n                                <TableRow key={i + 1}>\n                                    {\n                                        keys.map((key, j) => {\n                                            if (key == \"shift\") {\n                                                return (\n                                                    <TableCell key={key}>\n                                                        {\n                                                            \"日\"\n                                                        }\n                                                    </TableCell>\n                                                )\n                                            }\n                                            else if (key == \"experiences\") {\n                                                return (\n                                                    <TableCell key={`${key}_btn`}>\n                                                        {\n                                                            <WorkExperiences list_data={data[\"experiences\"]}>Experiences</WorkExperiences>\n                                                        }\n                                                    </TableCell>\n                                                )\n                                            }\n                                            else {\n                                                return (\n                                                    <TableCell key={key}>\n                                                        {\n                                                            data[key]\n                                                        }\n                                                    </TableCell>\n                                                )\n                                            }\n\n                                        })\n                                    }\n                                </TableRow>\n                            )\n                        })\n                    }\n                </TableBody>\n            </Table>\n            <Divider sx={{ borderBottomWidth: 3, m: 3 }} />\n            <Table >\n                <TableHead>\n                    <TableRow>\n                        <TableCell>\n                            夜班\n                        </TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableHead sx={{ background: \"#272d3a\" }}>\n                    <TableRow >\n                        {\n                            keys.map((key, index) => {\n                                return <TableCell key={index}>{CONTENT[key]}</TableCell>\n                            })\n                        }\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {\n                        datas['night_shift'].map((data, i) => {\n                            return (\n                                <TableRow key={i + 1}>\n                                    {\n                                        keys.map((key, j) => {\n                                            if (key == \"shift\") {\n                                                return (\n                                                    <TableCell key={key}>\n                                                        {\n                                                            \"夜\"\n                                                        }\n                                                    </TableCell>\n                                                )\n                                            }\n                                            else if (key == \"experiences\") {\n                                                return (\n                                                    <TableCell key={`${key}_btn`}>\n                                                        {\n                                                            <WorkExperiences list_data={data[\"experiences\"]}>Experiences</WorkExperiences>\n                                                        }\n                                                    </TableCell>\n                                                )\n                                            }\n                                            else {\n                                                return (\n                                                    <TableCell key={key}>\n                                                        {\n                                                            data[key]\n                                                        }\n                                                    </TableCell>\n                                                )\n                                            }\n\n                                        })\n                                    }\n                                </TableRow>\n                            )\n                        })\n                    }\n                </TableBody>\n            </Table>\n        </div>\n    )\n}\n// Style component\nconst Input = styled('input')({\n    display: 'none',\n});\n\nexport default function WorkerinfoUpload({ token, setAlert, ...rest }) {\n    const [workerFile, setWorkFile] = useState();\n    const [deviceFile, setDeviceFile] = useState();\n\n\n    const [dataStatus, setDataStatus] = useState(\"\");\n    const [uploading, setUpload] = useState(false);\n    const [loading, setLoading] = useState(false);\n\n    const [data, setData] = useState();\n\n    const [parameter, setParameter] = useState();\n\n    const [workshop, setWorkshop] = useState(\"\");\n\n    useEffect(() => {\n        //UpdateData();\n        if (workshop != \"\") {\n            UpdateData();\n        }\n    }, [workshop])\n    String.prototype.replaceAt = function (index, char) {\n        var a = this.split(\"\");\n        a[index] = char;\n        return a.join(\"\");\n    }\n\n    const UpdateData = () => {\n        setDataStatus(\"Loading Data ...\");\n        let data = {\n            'token': token,\n            'workshop': workshop\n        };\n\n        apiWorkerAll(data).then(res => {\n            setData(res.data);\n            console.log(res.data);\n        }).catch(err => {\n            console.log(err);\n            setAlert({\n                'open': true,\n                'msg': \"資料载入異常\",\n                'type': 'error'\n            });\n        }).finally(() => {\n            setDataStatus(\"\");\n        })\n    }\n\n    const parseParm = (str) => {\n        let rawdata = str.split(/\\n/);\n        let processed_data = [];\n        let keys = []\n        // Data processing\n        rawdata.map((line, i) => {\n            if (i == 0) {\n                keys = line.split(',');\n                keys[0] = 'idx';\n            } else {\n                let flag = false;\n                for (let i = 0; i < line.length; i++) {\n                    if (line[i] == '(') {\n                        flag = true;\n                    }\n                    if (flag == true) {\n                        if (line[i] == ',') continue;\n                        if (line[i] == ')') flag = false;\n                    } else {\n                        if (line[i] == ',') line = line.replaceAt(i, '@');\n                    }\n                }\n                let temp = line.split('@');\n                let obj = {}\n                temp.map((item, j) => {\n                    obj[keys[j]] = temp[j];\n                })\n                processed_data.push(obj);\n            }\n\n        })\n        let csv_data = {\n            'keys': keys,\n            'datas': processed_data\n        }\n        setParameter(csv_data);\n    }\n\n    const workerFileChangeHandler = (event) => {\n        if (event.target.files.length > 0) {\n            setWorkFile(event.target.files[0]);\n        }\n    };\n    const deviceFileChangeHandler = (event) => {\n        if (event.target.files.length > 0) {\n            setDeviceFile(event.target.files[0]);\n        }\n    };\n    const postData = (data) => {\n        apiWorkerinfos(data).then(res => {\n            parseParm(res.data);\n            setAlert({\n                'open': true,\n                'msg': \"上传成功\",\n                'type': 'success'\n            });\n        }).catch(err => {\n            console.log(err);\n            setAlert({\n                'open': true,\n                'msg': \"上传錯誤\",\n                'type': 'error'\n            });\n        }).finally(() => {\n            setUpload(false);\n            setWorkFile(null);\n            setDeviceFile(null);\n        });\n    }\n    const handleUpload = () => {\n        if (workerFile == null) {\n            setAlert({\n                'open': true,\n                'msg': \"请完整选取档案\",\n                'type': 'error'\n            });\n        }\n        else {\n            setUpload(true);\n            let fd = new FormData();\n            fd.append(\"worker_file\", workerFile);\n            //fd.append(\"device_file\", deviceFile)\n            let data = {\n                'token': token,\n                'file': fd\n            };\n            postData(data);\n        }\n    }\n\n    const [workerinfoName, setWorkerinfoName] = useState();\n\n    useEffect(() => {\n        handleOnClick();\n    })\n\n    const updateFileName = (data) => {\n        apiGetFileName(data).then(res => {\n            console.log(res.data)\n            setWorkerinfoName(res.data.worker);\n            // setAlert({\n            //     'open': true,\n            //     'msg': \"更新成功\",\n            //     'type': 'success'\n            // });\n        })\n        // .catch(err => {\n        //     console.log(err)\n        //     setAlert({\n        //         'open': true,\n        //         'msg': \"错误代码：\" + err.response,\n        //         'type': 'error'\n        //     });\n        //     console.log(err);\n        // }).finally(() => {\n        //     setLoading(false);\n        // });\n    }\n    const handleOnClick = () => {\n        const data = {\n            token: token,\n        }\n        updateFileName(data);\n    }\n\n    return (\n        <ThemeProvider theme={darkTheme}>\n            <Card >\n                <CardHeader title=\"员工专职表上传\" />\n                <Divider sx={{ borderBottomWidth: 3 }} />\n                <CardContent>\n                    {/* icon */}\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n\n                        }}\n                    >\n                        <Upload fontSize=\"large\" />\n                    </Box>\n                    {/* 員工專職 */}\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <label htmlFor=\"contained-button-work-file\">\n                            <Input type=\"file\" accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\" id=\"contained-button-work-file\" onChange={workerFileChangeHandler} />\n                            <LoadingButton\n                                color=\"success\"\n                                variant=\"contained\"\n                                size=\"large\"\n                                component=\"span\"\n                                startIcon={<CloudUploadOutlinedIcon sx={{ mr: 1 }} />}\n                                sx={{\n                                    borderRadius: 4,\n                                    minWidth: 200,\n                                    justifyContent: 'center',\n                                    letterSpacing: 3,\n                                }}\n                                type=\"input\"\n                                loading={uploading}\n                            >\n                                {\n                                    workerFile ? \"已载入\" : \"选择员工专职表\"\n                                }\n                            </LoadingButton>\n                        </label>\n                    </Box>\n                    {/* 座標表 */}\n                    {/* <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <label htmlFor=\"contained-button-device-file\">\n                            <Input type=\"file\" accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\" id=\"contained-button-device-file\" onChange={deviceFileChangeHandler} />\n                            <LoadingButton\n                                color=\"success\"\n                                variant=\"contained\"\n                                size=\"large\"\n                                component=\"span\"\n                                startIcon={<CloudUploadOutlinedIcon sx={{ mr: 1 }} />}\n                                sx={{\n                                    borderRadius: 4,\n                                    minWidth: 200,\n                                    justifyContent: 'center',\n                                    letterSpacing: 3,\n                                }}\n                                type=\"input\"\n                                loading={uploading}\n                            >\n                                {\n                                    deviceFile ? \"已载入\" : \"选择座标表档案\"\n                                }\n                            </LoadingButton>\n                        </label>\n                    </Box> */}\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <LoadingButton\n                            variant=\"contained\"\n                            size=\"large\"\n                            component=\"span\"\n                            sx={{\n                                borderRadius: 4,\n                                justifyContent: 'center',\n                                letterSpacing: 3,\n                                mt: 4\n                            }}\n                            loading={uploading}\n                            onClick={handleUpload}\n                        >\n                            上传资料\n                        </LoadingButton>\n                    </Box>\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                            {dataStatus}\n                        </Typography>\n                    </Box>\n                    <Divider sx={{ borderBottomWidth: 3, m: 3 }} />\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <LoadingButton\n                            variant=\"contained\"\n                            size=\"large\"\n                            component=\"span\"\n                            sx={{\n                                borderRadius: 4,\n                                justifyContent: 'center',\n                                letterSpacing: 3,\n                                mt: 2\n                            }}\n                            loading={loading}\n                            onClick={handleOnClick}\n                        >\n                            更新资料\n                        </LoadingButton>\n                    </Box>\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <Typography\n                            color=\"textSecondary\"\n                            gutterBottom\n                            variant=\"overline\"\n                            fontSize=\"large\"\n                        >\n                            档案名称:{workerinfoName}\n                        </Typography>\n                    </Box>\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            m: 2\n                        }}\n                    >\n                        <Typography sx={{ m: 1 }}>\n                            现有资料 :\n                        </Typography>\n                        <FormControl >\n                            <InputLabel id=\"demo-simple-select-label\">WorkShop</InputLabel>\n                            <WorkshopPicker token={token} workshop={workshop} setWorkshop={setWorkshop} />\n                        </FormControl>\n                    </Box>\n                    {\n                        parameter && (\n                            <Box\n                                sx={{\n                                    display: 'flex',\n                                    justifyContent: 'center',\n                                    pt: 2\n                                }}\n                            >\n                                <Parameter csv_data={parameter} />\n                            </Box>\n                        )\n                    }\n                    <Box>\n                        {\n                            data && infotable(data)\n                        }\n                    </Box>\n                </CardContent>\n            </Card>\n        </ThemeProvider>\n    )\n}","import React, { useState, useEffect, useReducer } from \"react\";\nimport { styled } from '@mui/material/styles';\nimport {\n    Box,\n    Card,\n    CardContent,\n    CardHeader,\n    Divider,\n    Typography,\n    createTheme,\n    ThemeProvider,\n} from '@mui/material';\n\nimport LoadingButton from '@mui/lab/LoadingButton';\n\nimport CloudUploadOutlinedIcon from '@mui/icons-material/CloudUploadOutlined';\nimport { Upload } from '../icons/upload';\n\nimport { apiMapPost } from \"../api.js\";\nimport { apiGetFileName } from \"../api.js\";\n\nimport { AlertComponent } from \"../components/alert-component\";\n\n\nconst darkTheme = createTheme({\n    palette: {\n        mode: 'dark',\n        primary: {\n            main: '#5048E5',\n            light: '#828DF8',\n            dark: '#7582EB',\n            contrastText: '#FFFFFF'\n        },\n        background: {\n            default: '#1a1e2b',\n            paper: '#1a1e2b',\n        },\n        text: {\n            primary: '#fff',\n        }\n    },\n});\n\nconst Input = styled('input')({\n    display: 'none',\n});\n\nexport default function MapUpload({ token, ...rest }) {\n    const [dataStatus, setDataStatus] = useState(\" No File Chosen\");\n    const [uploading, setUpload] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [errmsg, setErrMsg] = useState();\n    const [alert, setAlert] = useState(false);\n\n    useEffect(() => {\n        if (errmsg) {\n            setAlert(true);\n        }\n    }, [errmsg])\n\n    const handleFileChange = (e) => {\n        if (e.target.files.length > 0) {\n            let filename = e.target.files[0].name;\n            let regex = filename.match(/Layout_(.+)_([0-9]+)/);\n\n            if (regex && regex.length == 3) {\n                let filename = regex[1];\n                setDataStatus(filename);\n\n                setUpload(true);\n\n                const file = e.target.files[0];\n                let formData = new FormData();\n                formData.append(\"image\", file);\n\n                let data = {};\n                data['token'] = token;\n                data['file'] = formData;\n                data['name'] = filename;\n\n                apiMapPost(data).then(res => {\n                    setDataStatus(\"上传完毕\");\n                }).catch(err => {\n                    // 後端沒有擋擋名錯誤\n                    setErrMsg(err.response.statusText);\n                }).finally(() => {\n                    setUpload(false);\n                })\n\n            } else {\n                setErrMsg(\"档名有误, 请重新上传！\");\n                document.getElementById('contained-button-file').value = null;\n                console.log(document.getElementById('contained-button-file').value);\n            }\n        } else {\n            setDataStatus(\"No File Chosen\");\n        }\n    }\n\n    const [mapName, setMapName] = useState();\n\n    useEffect(() => {\n        handleOnClick();\n    })\n\n    const updateFileName = (data) => {\n        apiGetFileName(data).then(res => {\n            console.log(res.data)\n            setMapName(res.data.images);\n            // setAlert({\n            //     'open': true,\n            //     'msg': \"更新成功\",\n            //     'type': 'success'\n            // });\n        })\n        // .catch(err => {\n        //     console.log(err)\n        //     setAlert({\n        //         'open': true,\n        //         'msg': \"错误代码：\" + err.response,\n        //         'type': 'error'\n        //     });\n        //     console.log(err);\n        // }).finally(() => {\n        //     setLoading(false);\n        // });\n    }\n    const handleOnClick = () => {\n        const data = {\n            token: token,\n        }\n        updateFileName(data);\n    }\n\n    return (\n        <ThemeProvider theme={darkTheme}>\n            <AlertComponent open={alert} setOpen={setAlert} message={errmsg} severity={\"error\"} />\n            <Card >\n                <CardHeader title=\"车间 Layout 图上传\" />\n                <Divider sx={{ borderBottomWidth: 3 }} />\n                <CardContent>\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n\n                        }}\n                    >\n                        <Upload fontSize=\"large\" />\n                    </Box>\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <label htmlFor=\"contained-button-file\">\n                            <Input type=\"file\" accept=\"image/png\" id=\"contained-button-file\" onChange={handleFileChange} value='' />\n                            <LoadingButton\n                                color=\"success\"\n                                variant=\"contained\"\n                                size=\"large\"\n                                component=\"span\"\n                                startIcon={<CloudUploadOutlinedIcon sx={{ mr: 1 }} />}\n                                sx={{\n                                    borderRadius: 4,\n                                    minWidth: 200,\n                                    justifyContent: 'center',\n                                    letterSpacing: 3,\n                                }}\n                                type=\"input\"\n                                loading={uploading}\n                            >\n                                {\n                                    uploading ? \"上传中...\" : \"选择档案\"\n                                }\n                            </LoadingButton>\n                        </label>\n                    </Box>\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                            {dataStatus}\n                        </Typography>\n                    </Box>\n                    <Divider sx={{ borderBottomWidth: 3, m: 3 }} />\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <LoadingButton\n                            variant=\"contained\"\n                            size=\"large\"\n                            component=\"span\"\n                            sx={{\n                                borderRadius: 4,\n                                justifyContent: 'center',\n                                letterSpacing: 3,\n                                mt: 2\n                            }}\n                            loading={loading}\n                            onClick={handleOnClick}\n                        >\n                            更新资料\n                        </LoadingButton>\n                    </Box>\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <Typography\n                            color=\"textSecondary\"\n                            gutterBottom\n                            variant=\"overline\"\n                            fontSize=\"large\"\n                        >\n                            档案名称:{mapName}\n                        </Typography>\n                    </Box>\n                </CardContent>\n            </Card>\n        </ThemeProvider>\n    )\n}","import React, { useState, useEffect } from \"react\";\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n    Box,\n    Button,\n    Card,\n    CardHeader,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    createTheme,\n    ThemeProvider,\n    Divider,\n} from '@mui/material';\nimport { Typography, Container, InputLabel, MenuItem, Select, FormControl } from '@mui/material';\n\nimport { apiGetWhiteList, apiGetDeviceNameById, apiWorkShopList, apiGetDeviceRecommend, apiGetWorkersByDevice, apiPostAddWorkersWhitelist, apiDeleteWorkersWhitelist } from \"../api.js\";\n\nconst darkTheme = createTheme({\n    palette: {\n        mode: 'dark',\n        background: {\n            default: '#1a1e2b',\n            paper: '#1a1e2b',\n        },\n        text: {\n            primary: '#EDF2F7',\n        },\n        secondary: {\n            main: '#10B981',\n            light: '#3FC79A',\n            dark: '#0B815A',\n            contrastText: '#FFFFFF'\n        },\n        success: {\n            main: '#14B8A6',\n            light: '#43C6B7',\n            dark: '#0E8074',\n            contrastText: '#FFFFFF'\n        },\n        info: {\n            main: '#2196F3',\n            light: '#64B6F7',\n            dark: '#0B79D0',\n            contrastText: '#FFFFFF'\n        },\n        warning: {\n            main: '#FFB020',\n            light: '#FFBF4C',\n            dark: '#B27B16',\n            contrastText: '#FFFFFF'\n        },\n        error: {\n            main: '#D14343',\n            light: '#DA6868',\n            dark: '#922E2E',\n            contrastText: '#FFFFFF'\n        },\n    },\n});\n\nconst CONTENT = {\n    title: \"白名單\",\n    editTitle: \"编辑白名單\",\n    device_cname: \"装置名称\",\n    device_id: \"装置 ID\",\n    name: \"員工姓名\",\n    id: \"員工 ID\",\n    project: \"专案\",\n    update: \"更新资料\",\n    shift: \"班別\",\n    recommand: \"推荐员工\",\n    action: \"新增\",\n    remove: \"移除\"\n}\n\nexport default function WhiteList({ token, ...rest }) {\n    const [deviceMap, setDeviceMap] = useState();\n    const [deviceRecommend, setDeviceRecommend] = useState();\n\n    const [workshop, setWorkshop] = useState();\n\n    const [selectItem, setSelectItem] = useState();\n    const [deviceSelect, setDeviceSelect] = useState();\n    const [workSelect, setWorkSelect] = useState();\n\n    const [shift, setShift] = useState();\n    const [device, setDevice] = useState();\n    const [worker, setWorker] = useState();\n\n    useEffect(() => {\n        handleUpdate();\n        return () => {\n        }\n    }, [])\n\n    const handleChange = (event) => {\n        setWorkshop(event.target.value);\n        apiGetWhiteList(event.target.value).then(res => {\n            let promises = []\n            let ids = Object.keys(res.data);\n\n            ids.map(id => {\n                promises.push(GetDeviceName(id, res.data[String(id)]));\n            })\n            Promise.all(promises).then(response => {\n                setDeviceMap(response);\n            })\n        }).catch(err => {\n            console.log(err);\n        })\n\n        apiGetDeviceRecommend(event.target.value).then(res => {\n            setDeviceRecommend(res.data);\n            // 看 apiGetDeviceRecommend 的資料型態\n            // console.log('apiGetDeviceRecommend : ')\n            // console.log(res.data)\n        }).catch(err => {\n            console.log(err);\n        })\n    }\n\n    const GetDeviceName = (id, employee) => {\n        return new Promise((resolve, reject) => {\n            let data = {\n                \"token\": token,\n                \"device_id\": id\n            }\n            apiGetDeviceNameById(data).then(res => {\n                // 看 apiGetDeviceNameById 的資料型態\n                // console.log('apiGetDeviceNameById : ')\n                // console.log(res.data)\n                resolve({ 'id': id, 'project': res.data['project'], 'name': res.data['device_cname'], 'employee': employee });\n            }).catch(err => {\n                reject();\n            })\n        })\n    }\n\n    const handleUpdate = () => {\n        setShift(null);\n\n        setWorkshop(null);\n        setSelectItem(null);\n        setDeviceSelect(null);\n        setDeviceRecommend(null);\n        setWorker(null);\n        setWorkSelect(null);\n        setDeviceMap(null);\n        apiWorkShopList(token).then(res => {\n            setSelectItem(res.data.map(name => {\n                return (<MenuItem key={name} value={name}>{name}</MenuItem>)\n            }))\n        }).catch(err => {\n\n        });\n\n\n    }\n\n    const handDelete = (device_id, user_id) => {\n        let data = {\n            device_id: device_id,\n            username: user_id\n        }\n        apiDeleteWorkersWhitelist(data).then(res => {\n            if (res.status == 200) {\n                alert('移除成功');\n                handleUpdate();\n            }\n        }).catch(err => {\n            console.log(err);\n        })\n    }\n\n    // select change handler\n    const shiftChange = (event) => {\n        setWorker(null);\n        setDevice(null);\n        setDeviceSelect(null);\n        setWorkSelect(null);\n        let shift = event.target.value;\n        setShift(shift);\n\n        if (deviceRecommend != null) {\n            let promises = [];\n            let allDevice = Object.keys(deviceRecommend[shift.toString()]);\n            allDevice.map(id => {\n                promises.push(GetDeviceName(id, \"\"));\n            })\n            Promise.all(promises).then(response => {\n                setDeviceSelect(response.map(item => {\n                    return (<MenuItem key={item['id']} value={item['id']}>{`(${item[\"id\"]}) ${item[\"name\"]} 异常次数：${deviceRecommend[shift.toString()][item['id'].toString()]} `}</MenuItem>)\n                }))\n                console.log()\n            })\n\n\n        }\n    }\n    const deviceChange = (event) => {\n        setWorker(null);\n        setWorkSelect(null);\n        setDevice(event.target.value);\n        let data = {\n            device_id: event.target.value.toString(),\n            shift: shift === \"day\" ? false : true\n        }\n\n        console.log('apiGetWorkersByDevice : ')\n        console.log(apiGetWorkersByDevice(data))\n\n\n        apiGetWorkersByDevice(data).then(res => {\n            // 看 apiGetWorkersByDevice 的資料型態\n            setWorkSelect(res.data.map(worker => {\n                return (<MenuItem key={worker['username']} value={worker['username']}>{worker['username']}</MenuItem>)\n            }))\n            console.log('apiGetWorkersByDevice : ')\n            console.log(res.data)\n\n\n        }).catch(err => {\n            console.log(err);\n        })\n    }\n    const workChange = (event) => {\n        setWorker(event.target.value);\n    }\n    const addWhiteList = (event) => {\n\n        let data = {\n            device_id: device,\n            username: worker\n        }\n        apiPostAddWorkersWhitelist(data).then(res => {\n            if (res.status == 200) {\n                alert(`新增 ${device}, ${worker}`);\n            }\n        }).catch(err => {\n            alert('重复建立，请重新操作');\n            console.log(err);\n        })\n\n    }\n\n\n    return (\n        <ThemeProvider theme={darkTheme}>\n            <Card >\n                <CardHeader title={CONTENT.title}\n                    action={(<Button\n                        color=\"primary\"\n                        size=\"large\"\n                        variant=\"text\"\n                        onClick={handleUpdate}\n                        sx={{ mr: 3 }}\n                    >\n                        {CONTENT.update}\n                    </Button>)} />\n\n                <Divider sx={{ borderBottomWidth: 3 }} />\n                <Box\n                    sx={{\n                        display: 'flex',\n                        justifyContent: 'center',\n                        pt: 2\n                    }}\n                >\n                    <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                        请选取要显示的车间\n                    </Typography>\n                </Box>\n                <Box\n                    sx={{\n                        display: 'flex',\n                        justifyContent: 'center',\n                        pt: 2\n                    }}\n                >\n                    {\n                        selectItem &&\n                        <FormControl >\n                            <InputLabel id=\"demo-simple-select-label\">WorkShop</InputLabel>\n                            <Select\n                                labelId=\"demo-simple-select-label\"\n                                id=\"workshop-select\"\n                                value={workshop}\n                                label=\"WorkShop\"\n                                onChange={handleChange}\n                                sx={{ minWidth: \"200px\" }}\n                            >\n                                {\n                                    selectItem\n                                }\n                            </Select>\n                        </FormControl>\n                    }\n                </Box>\n                <PerfectScrollbar>\n                    <Box sx={{ minWidth: 800 }}>\n                        <Table>\n                            <TableHead sx={{ background: \"#272d3a\" }}>\n                                <TableRow>\n                                    <TableCell>\n                                        {CONTENT.device_id}\n                                    </TableCell>\n                                    <TableCell>\n                                        {CONTENT.device_cname}\n                                    </TableCell>\n                                    <TableCell >\n                                        {CONTENT.id}\n                                    </TableCell>\n                                    <TableCell >\n                                        {CONTENT.name}\n                                    </TableCell>\n                                    <TableCell >\n                                        {CONTENT.remove}\n                                    </TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {\n                                    deviceMap &&\n                                    deviceMap.map(device => {\n                                        return device.employee.map(worker => (\n                                            (\n                                                <TableRow\n                                                    hover\n                                                    key={device.id}\n                                                >\n                                                    <TableCell>\n                                                        {device.id}\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        {device.name}\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        {worker.username}\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        {worker.full_name}\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        {\n                                                            <Button key={device.id} color=\"error\" onClick={() => handDelete(device.id, worker.username)}>移除白名單</Button>\n                                                        }\n                                                    </TableCell>\n                                                </TableRow>\n                                            )\n                                        ))\n                                    })\n                                }\n                            </TableBody>\n                        </Table>\n                    </Box>\n                </PerfectScrollbar>\n\n            </Card>\n            {\n                deviceRecommend &&\n                <Card sx={{ mt: 5 }}>\n                    <CardHeader title={CONTENT.editTitle} />\n                    <PerfectScrollbar>\n                        <Box sx={{ minWidth: 800 }}>\n                            <Table>\n                                <TableHead sx={{ background: \"#272d3a\" }}>\n                                    <TableRow>\n                                        <TableCell>\n                                            {CONTENT.shift}\n                                        </TableCell>\n                                        <TableCell>\n                                            {CONTENT.device_cname}\n                                        </TableCell>\n                                        <TableCell >\n                                            {CONTENT.recommand}\n                                        </TableCell>\n                                        <TableCell >\n                                            {CONTENT.action}\n                                        </TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    <TableRow>\n                                        <TableCell>\n                                            {\n                                                workshop &&\n                                                <FormControl >\n                                                    <InputLabel id=\"shift-select\">{CONTENT.shift}</InputLabel>\n                                                    <Select\n                                                        labelId=\"shift-select\"\n                                                        id=\"shift-select-id\"\n                                                        value={shift}\n                                                        label=\"WorkShop\"\n                                                        onChange={shiftChange}\n                                                        sx={{ minWidth: \"100px\" }}\n                                                    >\n                                                        <MenuItem key={0} value={\"day\"}>日</MenuItem>\n                                                        <MenuItem key={1} value={\"night\"}>夜</MenuItem>\n                                                    </Select>\n                                                </FormControl>\n                                            }\n                                        </TableCell>\n                                        <TableCell>\n                                            {\n                                                deviceSelect &&\n                                                <FormControl >\n                                                    <InputLabel id=\"device-select\">{CONTENT.device_cname}</InputLabel>\n                                                    <Select\n                                                        labelId=\"device-select\"\n                                                        id=\"device-select-id\"\n                                                        value={device}\n                                                        label=\"device\"\n                                                        onChange={deviceChange}\n                                                        sx={{ minWidth: \"200px\" }}\n                                                    >\n                                                        {\n                                                            deviceSelect\n                                                        }\n                                                    </Select>\n                                                </FormControl>\n                                            }\n                                        </TableCell>\n                                        <TableCell >\n                                            {\n                                                workSelect &&\n                                                <FormControl >\n                                                    <InputLabel id=\"work-select\">{CONTENT.name}</InputLabel>\n                                                    <Select\n                                                        labelId=\"work-select\"\n                                                        id=\"work-select-id\"\n                                                        value={worker}\n                                                        label=\"worker\"\n                                                        onChange={workChange}\n                                                        sx={{ minWidth: \"100px\" }}\n                                                    >\n                                                        {\n                                                            workSelect\n                                                        }\n                                                    </Select>\n                                                </FormControl>\n                                            }\n                                        </TableCell>\n                                        <TableCell >\n                                            <Button onClick={addWhiteList} color=\"success\">加入白名單</Button>\n                                        </TableCell>\n                                    </TableRow>\n                                </TableBody>\n                            </Table>\n                        </Box>\n                    </PerfectScrollbar>\n\n                </Card>\n            }\n\n        </ThemeProvider>\n    );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Avatar, Box, Card, CardContent, Grid, \n  Typography, Dialog, DialogTitle, DialogContent, Button, DialogActions\n} from '@mui/material';\nimport ReportGmailerrorredSharpIcon from '@mui/icons-material/ReportGmailerrorredSharp';\n\nconst CONTENT = {\n  title : \"紧急通报\",\n}\n\nexport function Emergency({list_data, ...rest}) {\n  useEffect(()=> {\n    if(list_data.length > 0){\n      const display = list_data.map(\n        mission => {\n          return (\n            <Card sx={{m:1, minWidth: \"500px\"\n          }} key={mission.mission_id}>\n              <CardContent>\n                  <Typography\n                      color=\"textSecondary\"\n                      gutterBottom\n                      variant=\"overline\"\n                      fontSize=\"large\"\n                  >\n                    任务 ID : {mission.mission_id}\n                  </Typography>\n                  <Typography>\n                  装置 ID : {mission.device.device_id}\n                  </Typography>\n                  <Typography>\n                  装置名称 : {mission.device.device_id}\n                  </Typography>\n                  {/* <Typography>\n                  类别 : {mission.category}\n                  </Typography>\n                  <Typography>\n                  说明 : {mission.description}\n                  </Typography>\n                  <Typography>\n                  assignees : {\n                    mission.assignees && \n                    mission.assignees.map(user=>{\n                      return (\n                        <Card key={user.username}>\n                          <CardContent>\n                          <Typography\n                              color=\"textSecondary\"\n                              gutterBottom\n                              variant=\"overline\"\n                              fontSize=\"small\"\n                          >\n                            ID : {user.username}\n                          </Typography>\n                          <Typography fontSize=\"small\">\n                            full_name : {user.full_name}\n                          </Typography>\n                          </CardContent>\n                        </Card>\n                      )\n                    })\n                  }\n                  </Typography> */}\n              </CardContent>\n            </Card>\n          )\n        }\n      )\n      setData(display);\n    }\n    else{\n      const display = <Card sx={{m:1}} key=\"no-data\"><CardContent>\n        暂时无紧急通报任务\n        </CardContent></Card>;\n        setData(display);\n    }\n}, [])\n  const [data, setData] = useState();\n  const [open, setOpen] = useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  \n  return (\n    <Card\n    sx={{ height: '100%' }}\n  >\n    <CardContent>\n      <Grid\n        container\n        spacing={3}\n        sx={{ justifyContent: 'space-between' }}\n      >\n        <Grid item>\n          <Typography\n            color=\"textSecondary\"\n            gutterBottom\n            variant=\"overline\"\n            fontSize=\"large\"\n          >\n            紧急通报\n          </Typography>\n          <Typography\n            color=\"textPrimary\"\n            variant=\"h4\"\n          >\n            {list_data.length}\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Avatar\n            sx={{\n              backgroundColor: 'error.main',\n              height: 56,\n              width: 56\n            }}\n          >\n            <ReportGmailerrorredSharpIcon />\n          </Avatar>\n        </Grid>\n      </Grid>\n      <Box sx={{ pt: 3 }}>\n      <Button variant=\"contained\" onClick={handleClickOpen}>\n        查看\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {CONTENT.title}\n        </DialogTitle>\n        <DialogContent>\n          {\n            data\n          }\n        </DialogContent>\n        <DialogActions >\n          <Button onClick={handleClose} autoFocus variant=\"contained\">\n          关闭\n          </Button>\n        </DialogActions>\n      </Dialog>\n      </Box>\n    </CardContent>\n  </Card>\n  );\n} \n","import React, { useState, useEffect } from \"react\";\n\nimport { Avatar, Box, Card, CardContent, Grid, \n  Typography, Dialog, DialogTitle, DialogContent, Button, DialogActions\n} from '@mui/material';\nimport BrokenImageSharpIcon from '@mui/icons-material/BrokenImageSharp';\n\nconst CONTENT = {\n  title:\"无人维修之任务\",\n\n}\n\nexport function MissionNeedRepair({list_data, ...rest}) {\n  useEffect(()=> {\n    if(list_data.length > 0){\n      const display = list_data.map(\n        mission => {\n          return (\n            <Card sx={{m:1, minWidth: \"500px\"\n          }}\n            key={mission.mission_id}>\n              <CardContent>\n                    <Typography\n                      color=\"textSecondary\"\n                      gutterBottom\n                      variant=\"overline\"\n                      fontSize=\"large\"\n                    >\n                      任务 ID : {mission.mission_id}\n                    </Typography>\n                    <Typography>\n                      任务名称 : {mission.name}\n                    </Typography>\n                    <Typography>\n                      任务信息 : {mission.description}\n                    </Typography>\n              </CardContent>\n            </Card>\n          )\n        }\n      )\n        setData(display);\n    }\n}, [])\n  const [data, setData] = useState();\n  const [open, setOpen] = useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  \n  return (\n    <Card\n    sx={{ height: '100%' }}\n    \n  >\n    <CardContent>\n      <Grid\n        container\n        spacing={3}\n        sx={{ justifyContent: 'space-between' }}\n      >\n        <Grid item>\n          <Typography\n            color=\"textSecondary\"\n            gutterBottom\n            variant=\"overline\"\n            fontSize=\"large\"\n          >\n            无人维修之任务\n          </Typography>\n          <Typography\n            color=\"textPrimary\"\n            variant=\"h4\"\n          >\n            {list_data.length}\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Avatar\n            sx={{\n              backgroundColor: 'info.main',\n              height: 56,\n              width: 56\n            }}\n          >\n            <BrokenImageSharpIcon />\n          </Avatar>\n        </Grid>\n      </Grid>\n      <Box sx={{ pt: 3 }}>\n      <Button variant=\"contained\" onClick={handleClickOpen}>\n        查看\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {CONTENT.title}\n        </DialogTitle>\n        <DialogContent>\n          {\n            data\n          }\n        </DialogContent>\n        <DialogActions >\n          <Button onClick={handleClose} autoFocus variant=\"contained\">\n          关闭\n          </Button>\n        </DialogActions>\n      </Dialog>\n      </Box>\n    </CardContent>\n  </Card>\n  );\n} \n","import React, { useState, useEffect, useRef } from \"react\";\n\nimport {\n  Box,\n  Card,\n  Skeleton,\n  Grid,\n  Button,\n  Typography,\n  FormControl,\n  InputLabel\n} from '@mui/material';\n\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { Emergency } from \"../components/emergency.js\";\nimport { MissionNeedRepair } from \"../components/mission-need-repair.js\";\nimport { WorkshopPicker } from \"../components/workshop-picker.js\";\n\nimport { apiMissionEmergency, apiMissionNeedRepair } from \"../api.js\";\n\n\nconst darkTheme = createTheme({\n  palette: {\n    mode: 'dark',\n    background: {\n      default: '#1a1e2b',\n      paper: '#1a1e2b',\n    },\n    text: {\n      primary: '#EDF2F7',\n    },\n    primary: {\n      // Purple and green play nicely together.\n      main: '#5048E5',\n    },\n  },\n});\n\nexport default function ENRMission({ token, ...rest }) {\n  const _isMounted = useRef(true);\n  const [emergencyMission, setEmergencyMission] = useState();\n  const [needRepairMissions, setNeedRepairMissions] = useState();\n  const [workshop, setWorkshop] = useState(\"\");\n  \n  useEffect(() => {\n    //updatedata();\n  }, [])\n\n  const updatedata = (data) => {\n    setEmergencyMission(null);\n    setNeedRepairMissions(null);\n    apiMissionNeedRepair(data).then(res => {\n      setNeedRepairMissions(res.data);\n    }).catch(err => {\n      console.log(err);\n    })\n    apiMissionEmergency(data).then(res => {\n      setEmergencyMission(res.data);\n    }).catch(err => {\n      if(workshop === \"\"){\n        alert(\"请选取车间\");\n      }\n      console.log(err);\n    })\n  }\n  const handleOnClick = () => {\n    let now = new Date(Date.now());\n    const data = {\n      token: token,\n      workshop: workshop,\n      start: now.toISOString(),\n      end: now.toISOString(),\n    }\n    updatedata(data);\n  }\n\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <Grid\n        container\n        spacing={3}\n        sx={{pb:5}}\n        >\n        <Grid item xs={4} justifyContent={\"center\"}>\n          <Card >\n            <Box>\n              <FormControl sx={{mt:3, mb:3, mr:3, ml: 3}}>\n                  <InputLabel id=\"demo-simple-select-label\" >WorkShop</InputLabel>\n                  <WorkshopPicker token={token} workshop={workshop} setWorkshop={setWorkshop} />\n              </FormControl>\n              <Button sx={{mt:3, mb:3}} size=\"large\"  variant=\"contained\" onClick={handleOnClick}>更新资料</Button>\n            </Box>\n          </Card>\n        </Grid>\n      </Grid>\n      {\n        emergencyMission && \n        <Grid\n        container\n        spacing={3}\n        >\n        <Grid\n          item\n          lg={4}\n        >\n          <Emergency list_data={emergencyMission} />\n        </Grid>\n        <Grid\n        item\n        lg={4}\n        >\n          {\n            needRepairMissions ?  \n            (\n              <MissionNeedRepair list_data={needRepairMissions} />\n            ) : \n            (\n              <Box\n                sx={{\n                  width: '100%',\n                  display: 'flex',\n                  justifyContent: 'center',\n                  p: 8,\n                }}\n              >\n                <Skeleton\n                  sx={{ bgcolor: 'grey.900' }}\n                  variant=\"rectangular\"\n                  width={1000}\n                  height={80}\n                >\n                  <Typography>.</Typography>\n                </Skeleton>\n              </Box>\n            )\n          }\n        </Grid>\n        </Grid>\n      }\n    </ThemeProvider>\n\n  );\n}","import React, { useState } from 'react';\nimport {\n    BrowserRouter as Router,\n    Routes,\n    Route,\n    Navigate\n} from 'react-router-dom'\n\nimport Login from './LoginPage';\nimport FoxlinkPages from './homepage';\nimport SnackbarAlert from \"./Snackbar\";\nimport Status from \"./AllStatus\";\nimport Statistics from \"./Statistics\";\nimport QrcodeDownload from \"./Qrcode\";\nimport Map from \"./Map\";\nimport DevicesUpload from \"./DevicesUpload\";\nimport WorkerinfoUpload from \"./WorkinfoUpload\";\nimport MapUpload from \"./MapUpload\";\nimport WhiteList from \"./WhiteList\";\nimport ENRMission from \"./OtherMission\";\nimport { NotFound } from \"./404\";\n\nexport default function App() {\n\n    const [alert, setAlert] = useState({\n        'open': false,\n        'type': '',\n        'msg': '',\n        'duration': 3000\n    })\n    // user auth\n    const [authUser, setAuthUser] = useState({\n        'token': null,\n        'token_type': null,\n        'username': null,\n        'level': null,\n    })\n\n    return (\n        <>\n            <SnackbarAlert open={alert.open} message={alert.msg} type={alert.type} setAlert={setAlert} duration={alert.duration} />\n            <Router>\n                <Routes>\n                    <Route element={<Login setAlert={setAlert} setUser={setAuthUser} />} path={'/login'}></Route>\n                    <Route element={<FoxlinkPages authUser={authUser} />} path={'/'}>\n                        <Route element={<Status token={authUser.token} setAlert={setAlert} />} path={'/all-status'}></Route>\n                        <Route element={<WorkerinfoUpload setAlert={setAlert} token={authUser.token} />} path={'/worker-info-upload'}></Route>\n                        <Route element={<DevicesUpload token={authUser.token} />} path={'/devices-upload'}></Route>\n                        <Route element={<Statistics token={authUser.token} setAlert={setAlert} />} path={'/statistics'}></Route>\n                        <Route element={<QrcodeDownload token={authUser.token} />} path={'/qrcode-download'}></Route>\n                        <Route element={<Map setAlert={setAlert} token={authUser.token} />} path={'/map'}></Route>\n                        <Route element={<MapUpload token={authUser.token} />} path={'/map-upload'}></Route>\n                        <Route element={<WhiteList token={authUser.token} />} path={'/white-list'}></Route>\n                        <Route element={<ENRMission token={authUser.token} />} path={'/ENRMission'}></Route>\n                    </Route>\n                    <Route\n                        path='*'\n                        element={\n                            <Navigate to=\"/login\" replace />\n                        }\n                    />\n                </Routes>\n            </Router>\n        </>\n\n    )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './pages/app';\n\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  // <BrowserRouter>\n  //   <Homepage />\n  // </BrowserRouter>\n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}