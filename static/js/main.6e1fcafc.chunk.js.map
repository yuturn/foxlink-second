{"version":3,"sources":["assets/foxlink_logo.png","tools/crypt.js","components/logo.js","api.js","pages/LoginPage.js","icons/user-circle.js","components/dashboard-navbar.js","icons/qrcode.js","icons/chart-bar.js","icons/layout.js","icons/info.js","components/dashboard-layout.js","pages/Snackbar.js","components/severity-pill.js","components/workshop-picker.js","pages/AllStatus.js","components/date-range.js","components/rate.js","components/crashed-devices.js","components/accept-mission-employees.js","components/reject-mission-employees.js","components/abnormal-missions.js","components/abnormal-devices.js","pages/Statistics.js","pages/Qrcode.js","pages/Map.js","components/excel-table-view.js","components/parameter.js","components/alert-component.js","icons/upload.js","pages/DevicesUpload.js","components/worker-experiences.js","pages/WorkinfoUpload.js","pages/MapUpload.js","pages/WhiteList.js","components/emergency.js","components/mission-need-repair.js","pages/OtherMission.js","pages/app.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Object","defineProperty","value","verify","encrypt","HashType","crypto_1","require","buffer_1","dictionary","shuffleMap","sha256","sha512","roundsDefault","getRandomString","length","min","max","result","i","Math","ceil","floor","random","generateHash","plaintext","conf","digestSize","id","hashType","digestA","hashA","createHash","update","saltString","hashB","digestB","digest","plaintextByteLength","Buffer","byteLength","offset","remainder","slice","toString","split","reverse","forEach","num","generateDigestA","hashDP","digestDP","alloc","set","hashDS","step18","digestDS","s","saltByteLength","saltRemainder","hash","idx","buf","bufferToBase64","base64Encode","Array","rounds","fill","reduce","acc","curr","hashC","first","parseInt","second","third","fourth","charAt","salt","specifyRounds","parts","Number","Error","match","substr","parseSalt","push","concat","join","normalizeSalt","computedHash","lastIndexOf","timingSafeEqual","from","Logo","_ref","handler","React","createElement","Button","src","foxlinkLogo","width","height","baseRequest","axios","create","baseURL","process","headers","Access-Control-Allow-Origin","timeout","auth_except","x","catch","e","response","status","alert","statusText","apiSystemSpace","token","get","accept","Authorization","apiUserLogin","data","post","Content-Type","apiStatisticsWithDate","apiStatisticsWithShift","apiMissionNeedRepair","apiMissionEmergency","apiWorkShopList","apiQRCode","responseType","apiMapGet","apiMapPost","apiGetFileName","apiDevices","_headers2","_defineProperty","apiDevicesData","apiWorkerinfos","_headers3","apiWorkerAll","apiGetWhiteList","workshop_name","apiGetDeviceRecommend","apiGetDeviceNameById","apiGetWorkersByDevice","apiPostAddWorkersWhitelist","apiDeleteWorkersWhitelist","delete","apiGetSystemEnvSetting","apiPostSystemEnvSetting","apiGetSystemEnvSettingCount","apiPostSystemEnvSettingCount","darkTheme","createTheme","palette","mode","background","default","paper","text","primary","main","Login","setUser","setAlert","navigate","useNavigate","_isMounted","useRef","useEffect","current","ThemeProvider","theme","Grid","container","spacing","direction","alignItems","justifyContent","sx","minHeight","item","xs","Box","component","display","flexGrow","maxWidth","borderRadius","border","borderColor","Container","pt","my","Typography","color","variant","gutterBottom","pb","TextField","fullWidth","label","margin","name","type","py","size","onClick","account","document","getElementById","password","hashPassWord","then","res","token_type","username","level","open","msg","toFixed","duration","err","errMsg","console","log","createSvgIcon","viewBox","xmlns","fillRule","clipRule","d","styled","AppBar","backgroundColor","boxShadow","QRCode","version","y","data-name","flex","paddingTop","breakpoints","up","paddingLeft","SnackbarAlert","message","Alert","forwardRef","props","ref","MuiAlert","assign","elevation","handleClose","event","reason","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","severity","ownerState","colorHEX","contrastText","cursor","flexShrink","fontFamily","typography","fontSize","pxToRem","lineHeight","fontWeight","letterSpacing","minWidth","paddingRight","textTransform","whiteSpace","WorkshopPicker","workshop","setWorkshop","_useState","useState","_useState2","_slicedToArray","selectItem","setSelectItem","map","MenuItem","key","Select","labelId","onChange","target","secondary","light","dark","success","info","warning","error","leave","working","notice","moving","idle","DateRange","sDate","eDate","setSDate","setEDate","setShift","shift_","setShift_","Card","CardContent","pr","LocalizationProvider","dateAdapter","AdapterDayjs","DatePicker","newValue","renderInput","params","Stack","FormControl","mt","mb","mr","ml","InputLabel","CONTENT","title","Rate","list_data","_objectWithoutProperties","login_users","employees","m","badge","setData","_useState3","_useState4","setOpen","percentage","Avatar","InsertChartIcon","LinearProgress","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogActions","autoFocus","CrashedDevices","device","device_id","device_cname","count","BrokenImageSharpIcon","AcceptMissionEmployees","employee","LibraryAddCheckIcon","RejectMissionEmployees","full_name","CancelIcon","AbnormalMissions","mission","mission_id","categories","messages","AssignmentLateIcon","AbnormalDevices","category","top_great_assignees","user","Statistics","statusData","_useState5","_useState6","loading","setLoading","_useState7","Date","_useState8","_useState9","_useState10","_useState11","_useState12","shift","LoadingButton","_shift","finally","updatedata","start","toISOString","end","lg","login_users_percentage_this_week","devices_stats","most_frequent_crashed_devices","top_most_accept_mission_employees","top_most_reject_mission_employees","top_abnormal_missions_this_month","top_abnormal_devices","QrcodeDownload","downloading","setDownload","CardHeader","Divider","borderBottomWidth","QRCodeIcon","saveAs","endIcon","ArrowCircleDownIcon","loadingPosition","Map","img","setImg","style","MapIcon","buffer","binary","call","Uint8Array","b","String","fromCharCode","img_component","window","btoa","arrayBufferToBase64","overflowX","ExcelTableView","keys","datas","id2words","Table","TableHead","TableRow","index","TableCell","TableBody","j","Parameter","csv_data","fullScreen","AlertComponent","state","Upload","project","line","device_name","x_axis","y_axis","is_rescue","sop_link","Input","DevicesUpload","dataStatus","setDataStatus","uploading","setUpload","setKeys","_useState13","_useState14","setId2Word","_useState15","_useState16","setDatas","_useState17","_useState18","parameter","setParameter","_useState19","_useState20","_useState21","_useState22","errmsg","setErrMsg","_useState23","_useState24","rescueStatus","setRescueStatus","_useState25","_useState26","rescueCount","setRescueCount","_useState27","_useState28","_useState29","_useState30","handleOpen","updateData","_useState31","_useState32","deviceName","setDeviceName","handleOnClick","devices","updateFileName","htmlFor","files","file","formData","FormData","append","rawdata","processed_data","temp","obj","startIcon","CloudUploadOutlinedIcon","newKeys","exp","WorkExperiences","superior","experiences","infotable","WorkerinfoUpload","workerFile","setWorkFile","setDeviceFile","UpdateData","prototype","replaceAt","char","a","this","postData","str","flag","parseParm","workerinfoName","setWorkerinfoName","worker","fd","MapUpload","mapName","setMapName","images","regex","filename","editTitle","recommand","action","remove","WhiteList","deviceMap","setDeviceMap","deviceRecommend","setDeviceRecommend","deviceSelect","setDeviceSelect","workSelect","setWorkSelect","setDevice","setWorker","handleUpdate","GetDeviceName","Promise","resolve","reject","promises","all","PerfectScrollbar","hover","user_id","Emergency","ReportGmailerrorredSharpIcon","MissionNeedRepair","description","ENRMission","emergencyMission","setEmergencyMission","needRepairMissions","setNeedRepairMissions","now","Skeleton","bgcolor","App","setAuthUser","Fragment","Router","Routes","Route","element","path","reportWebVitals","onPerfEntry","Function","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.6e1fcafc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/foxlink_logo.7d1cd178.png\";","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.verify = exports.encrypt = void 0;\nvar crypto_1 = require(\"crypto\");\nvar buffer_1 = require(\"buffer\");\nvar HashType;\n(function (HashType) {\n    HashType[HashType[\"sha256\"] = 5] = \"sha256\";\n    HashType[HashType[\"sha512\"] = 6] = \"sha512\";\n})(HashType || (HashType = {}));\nvar dictionary = \"./0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n// prettier-ignore\nvar shuffleMap = {\n    sha256: [\n        20, 10, 0,\n        11, 1, 21,\n        2, 22, 12,\n        23, 13, 3,\n        14, 4, 24,\n        5, 25, 15,\n        26, 16, 6,\n        17, 7, 27,\n        8, 28, 18,\n        29, 19, 9,\n        30, 31\n    ],\n    sha512: [\n        42, 21, 0,\n        1, 43, 22,\n        23, 2, 44,\n        45, 24, 3,\n        4, 46, 25,\n        26, 5, 47,\n        48, 27, 6,\n        7, 49, 28,\n        29, 8, 50,\n        51, 30, 9,\n        10, 52, 31,\n        32, 11, 53,\n        54, 33, 12,\n        13, 55, 34,\n        35, 14, 56,\n        57, 36, 15,\n        16, 58, 37,\n        38, 17, 59,\n        60, 39, 18,\n        19, 61, 40,\n        41, 20, 62,\n        63,\n    ]\n};\nvar roundsDefault = 5000;\nfunction getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n/**\n * Generate a random string\n * @param length Length of salt\n */\nfunction getRandomString(length) {\n    var result = \"\";\n    for (var i = 0; i < length; i++) {\n        result += dictionary[getRandomInt(0, dictionary.length - 1)];\n    }\n    return result;\n}\n/**\n * Normalize salt for use with hash, for example: \"$6$rounds=1234&saltsalt\" or \"$6$saltsalt\"\n * @param conf The separate parts of id, rounds, specifyRounds, and saltString\n */\nfunction normalizeSalt(conf) {\n    var parts = [\"\", conf.id];\n    if (conf.specifyRounds || conf.rounds !== roundsDefault) {\n        parts.push(\"rounds=\".concat(conf.rounds));\n    }\n    parts.push(conf.saltString);\n    return parts.join(\"$\");\n}\n/**\n * Parse salt into pieces, performs sanity checks, and returns proper defaults for missing values\n * @param salt Standard salt, \"$6$rounds=1234$saltsalt\", \"$6$saltsalt\", \"$6\", \"$6$rounds=1234\"\n */\nfunction parseSalt(salt) {\n    var roundsMin = 1000;\n    var roundsMax = 999999999;\n    var conf = {\n        id: HashType.sha512,\n        saltString: getRandomString(16),\n        rounds: roundsDefault,\n        specifyRounds: false,\n    };\n    if (salt) {\n        var parts = salt.split(\"$\");\n        conf.id = Number(parts[1]);\n        if (conf.id !== HashType.sha256 && conf.id !== HashType.sha512) {\n            throw new Error(\"Only sha256 and sha512 is supported by this library\");\n        }\n        if (parts.length < 2 || parts.length > 4) {\n            throw new Error(\"Invalid salt string\");\n        }\n        else if (parts.length > 2) {\n            var rounds = parts[2].match(/^rounds=(\\d*)$/);\n            if (rounds) {\n                // number of rounds has been specified\n                conf.rounds = Number(rounds[1]);\n                conf.specifyRounds = true;\n                if (parts[3]) {\n                    conf.saltString = parts[3];\n                }\n            }\n            else {\n                // default number of rounds has already been set\n                conf.saltString = parts[2];\n            }\n        }\n    }\n    // sanity-check rounds\n    conf.rounds =\n        conf.rounds < roundsMin\n            ? roundsMin\n            : conf.rounds > roundsMax\n                ? /* istanbul ignore next */\n                    (conf.rounds = roundsMax)\n                : conf.rounds;\n    // sanity-check saltString\n    conf.saltString = conf.saltString.substr(0, 16);\n    if (conf.saltString.match(\"[^./0-9A-Za-z]\")) {\n        throw new Error(\"Invalid salt string\");\n    }\n    return conf;\n}\n/**\n * Steps 1-12 in the spec\n * @param plaintext\n * @param conf\n */\nfunction generateDigestA(plaintext, conf) {\n    var digestSize = conf.id === HashType.sha256 ? 32 : 64;\n    // steps 1-8\n    var hashA = (0, crypto_1.createHash)(HashType[conf.id]);\n    hashA.update(plaintext);\n    hashA.update(conf.saltString);\n    var hashB = (0, crypto_1.createHash)(HashType[conf.id]);\n    hashB.update(plaintext);\n    hashB.update(conf.saltString);\n    hashB.update(plaintext);\n    var digestB = hashB.digest();\n    // step 9\n    var plaintextByteLength = buffer_1.Buffer.byteLength(plaintext);\n    for (var offset = 0; offset + digestSize < plaintextByteLength; offset += digestSize) {\n        hashA.update(digestB);\n    }\n    // step 10\n    var remainder = plaintextByteLength % digestSize;\n    hashA.update(digestB.slice(0, remainder));\n    // step 11\n    plaintextByteLength\n        .toString(2)\n        .split(\"\")\n        .reverse()\n        .forEach(function (num) {\n        hashA.update(num === \"0\" ? plaintext : digestB);\n    });\n    // step 12\n    return hashA.digest();\n}\nfunction generateHash(plaintext, conf) {\n    var digestSize = conf.id === HashType.sha256 ? 32 : 64;\n    var hashType = HashType[conf.id];\n    // steps 1-12\n    var digestA = generateDigestA(plaintext, conf);\n    // steps 13-15\n    var plaintextByteLength = buffer_1.Buffer.byteLength(plaintext);\n    var hashDP = (0, crypto_1.createHash)(hashType);\n    for (var i = 0; i < plaintextByteLength; i++) {\n        hashDP.update(plaintext);\n    }\n    var digestDP = hashDP.digest();\n    // step 16a\n    var p = buffer_1.Buffer.alloc(plaintextByteLength);\n    for (var offset = 0; offset + digestSize < plaintextByteLength; offset += digestSize) {\n        p.set(digestDP, offset);\n    }\n    // step 16b\n    var remainder = plaintextByteLength % digestSize;\n    p.set(digestDP.slice(0, remainder), plaintextByteLength - remainder);\n    // step 17-19\n    var hashDS = (0, crypto_1.createHash)(hashType);\n    var step18 = 16 + digestA[0];\n    for (var i = 0; i < step18; i++) {\n        hashDS.update(conf.saltString);\n    }\n    var digestDS = hashDS.digest();\n    // step 20\n    var s = buffer_1.Buffer.alloc(conf.saltString.length);\n    // step 20a\n    // Isn't this step redundant? The salt string doesn't have 32 or 64 bytes. It's truncated to 16 characters\n    var saltByteLength = buffer_1.Buffer.byteLength(conf.saltString);\n    for (var offset = 0; offset + digestSize < saltByteLength; offset += digestSize) {\n        /* istanbul ignore next */\n        s.set(digestDS, offset);\n    }\n    // step 20b\n    var saltRemainder = saltByteLength % digestSize;\n    s.set(digestDS.slice(0, saltRemainder), saltByteLength - saltRemainder);\n    // step 21\n    var rounds = Array(conf.rounds).fill(0);\n    var digestC = rounds.reduce(function (acc, curr, idx) {\n        var hashC = (0, crypto_1.createHash)(hashType);\n        // steps b-c\n        if (idx % 2 === 0) {\n            hashC.update(acc);\n        }\n        else {\n            hashC.update(p);\n        }\n        // step d\n        if (idx % 3 !== 0) {\n            hashC.update(s);\n        }\n        // step e\n        if (idx % 7 !== 0) {\n            hashC.update(p);\n        }\n        // steps f-g\n        if (idx % 2 !== 0) {\n            hashC.update(acc);\n        }\n        else {\n            hashC.update(p);\n        }\n        return hashC.digest();\n    }, digestA);\n    // step 22\n    return base64Encode(digestC, shuffleMap[hashType]);\n}\nfunction base64Encode(digest, shuffleMap) {\n    var hash = \"\";\n    for (var idx = 0; idx < digest.length; idx += 3) {\n        var buf = buffer_1.Buffer.alloc(3);\n        buf[0] = digest[shuffleMap[idx]];\n        buf[1] = digest[shuffleMap[idx + 1]];\n        buf[2] = digest[shuffleMap[idx + 2]];\n        hash += bufferToBase64(buf);\n    }\n    // adjust hash length by stripping trailing zeroes induced by base64-encoding\n    return hash.slice(0, digest.length === 32 ? -1 : -2);\n}\n/**\n * Encode buffer to base64 using our dictionary\n * @param buf Buffer of bytes to be encoded\n */\nfunction bufferToBase64(buf) {\n    var first = buf[0] & parseInt(\"00111111\", 2);\n    var second = ((buf[0] & parseInt(\"11000000\", 2)) >>> 6) |\n        ((buf[1] & parseInt(\"00001111\", 2)) << 2);\n    var third = ((buf[1] & parseInt(\"11110000\", 2)) >>> 4) |\n        ((buf[2] & parseInt(\"00000011\", 2)) << 4);\n    var fourth = (buf[2] & parseInt(\"11111100\", 2)) >>> 2;\n    return (dictionary.charAt(first) +\n        dictionary.charAt(second) +\n        dictionary.charAt(third) +\n        dictionary.charAt(fourth));\n}\n/**\n * Create sha256 or sha512 crypt of plaintext password\n * @param plaintext The plaintext password\n * @param salt optional salt, for example \"$6$salt\" or \"$6$rounds=10000$salt\"\n */\nfunction encrypt(plaintext, salt) {\n    var conf = parseSalt(salt);\n    var hash = generateHash(plaintext, conf);\n    return normalizeSalt(conf) + \"$\" + hash;\n}\nexports.encrypt = encrypt;\n/**\n * Verify plaintext password against expected hash\n * @param plaintext The plaintext password\n * @param hash The expected hash\n */\nfunction verify(plaintext, hash) {\n    var salt = hash.slice(0, hash.lastIndexOf(\"$\"));\n    var computedHash = encrypt(plaintext, salt);\n    return (0, crypto_1.timingSafeEqual)(buffer_1.Buffer.from(computedHash, \"utf8\"), buffer_1.Buffer.from(hash, \"utf8\"));\n}\nexports.verify = verify;\n","import { Button } from '@mui/material';\nimport React from \"react\";\nimport foxlinkLogo from '../assets/foxlink_logo.png';\n\nexport const Logo = ({handler}) => {\n  return (\n    <Button>\n      <img src={foxlinkLogo}width=\"178\" height=\"46\"/>\n    </Button>\n  );\n};\n\n\n","import axios from 'axios';\nimport { useNavigate } from \"react-router-dom\";\n\n\nconst baseRequest = axios.create({\n  baseURL: process.env.REACT_APP_BASEURL,\n  headers: { \"Access-Control-Allow-Origin\": \"*\" },\n  timeout: 300000,\n});\n\nconst auth_except = (x) => x.catch((e) => {\n  if (e.response.status == 403) {\n    //alert('无法验证身份');\n    alert(e.response.statusText);\n  }\n  throw e;\n})\n\nexport const apiSystemSpace = (token) => auth_except(baseRequest.get('/system/space', {\n  headers: {\n    'accept': 'application/json',\n    'Authorization': `Bearer ${token}`\n  }\n}));\n\nexport const apiUserLogin = (data) => auth_except(baseRequest.post('/auth/token', data, {\n  headers:\n  {\n    'accept': 'application/json',\n    'Content-Type': 'application/x-www-form-urlencoded'\n  },\n  timeout: 30000,\n}));\nexport const apiUserLevel = (token) => auth_except(baseRequest.get('/users/info', {\n  headers: {\n    'accept': 'application/json',\n    'Authorization': `Bearer ${token}`\n  }\n}));\n\nexport const apiStatisticsWithDate = (data) => auth_except(baseRequest.get(`/stats/?workshop_name=${data['workshop']}&start_date=${data['start']}&end_date=${data['end']}`, {\n  headers:\n  {\n    'accept': 'application/json',\n    'Content-Type': 'application/x-www-form-urlencoded'\n  }\n}));\n\n// export const apiStatisticsWithDate = (data) => auth_except(baseRequest.get(`/stats/?workshop_name=${data['workshop']}&start_date=${data['start']}&end_date=${data['end']}`, {\n//   headers:\n//   {\n//     'accept': 'application/json',\n//     'Content-Type': 'application/x-www-form-urlencoded'\n//   }\n\nexport const apiStatisticsWithShift = (data) => auth_except(baseRequest.get(`/stats/?workshop_name=${data['workshop']}&start_date=${data['start']}&end_date=${data['end']}&is_night_shift=${data['shift']}`, {\n  headers:\n  {\n    'accept': 'application/json',\n    'Content-Type': 'application/x-www-form-urlencoded'\n  }\n\n}));\n/*\n*\n* FQ-9%E8%BB%8A%E9%96%93 新改 ＡＰＩ\n*\n*/\nexport const apiWorkStatus = (workshop) => auth_except(baseRequest.get(`/stats/${workshop}/worker-status`, {\n  headers: {\n    'accept': 'application/json',\n    'Content-Type': 'application/x-www-form-urlencoded'\n  },\n  timeout: 60000,\n}));\n\nexport const apiMissionNeedRepair = (data) => auth_except(baseRequest.get(`missions/?workshop_name=${data['workshop']}&is_worker_null=true&is_done=false`, {\n  headers: {\n    'accept': 'application/json',\n    'Authorization': `Bearer ${data['token']}`\n  }\n}));\nexport const apiMissionEmergency = (data) => auth_except(baseRequest.get(`missions/?workshop_name=${data['workshop']}&is_started=false&is_done=false&is_emergency=true`, {\n  headers: {\n    'accept': 'application/json',\n    'Authorization': `Bearer ${data['token']}`\n  }\n}));\n\n// List\nexport const apiWorkShopList = (token) => auth_except(baseRequest.get('/workshop/list', {\n  headers: {\n    'accept': 'application/json',\n    'Authorization': `Bearer ${token}`\n  }\n}));\nexport const apiProjectList = (data) => auth_except(baseRequest.get(`workshop/${data['workshopname']}/projects`, {\n  headers: {\n    'accept': 'application/json',\n    'Authorization': `Bearer ${data['token']}`\n  }\n}));\n\nexport const apiQRCode = (data) => auth_except(baseRequest.get(`/workshop/qrcode?workshop_name=${data['name']}`, {\n  headers:\n  {\n    'accept': 'application/x-zip-compressed',\n    'Authorization': `Bearer ${data['token']}`\n  },\n  responseType: 'blob'\n}));\n\nexport const apiMapGet = (data) => auth_except(baseRequest.get(`/workshop/${data['name']}/image`, {\n  headers:\n  {\n    'accept': 'application/json',\n    'Authorization': `Bearer ${data['token']}`\n  },\n  responseType: 'arraybuffer'\n}));\nexport const apiMapPost = (data) => auth_except(baseRequest.post(`/workshop/${data['name']}/image`, data['file'], {\n  headers:\n  {\n    'accept': 'application/json',\n    'Content-Type': 'multipart/form-data',\n    'Authorization': `Bearer ${data['token']}`\n  }\n}));\n\nexport const apiGetFileName = (data) => auth_except(baseRequest.get(`/workshop/filename`, {\n  headers:\n  {\n    'accept': 'application/json',\n    'Authorization': `Bearer ${data['token']}`\n  },\n}));\n\nexport const apiEventbook = (data) => auth_except(baseRequest.post('/migration/workshop-eventbook', data['file'], {\n  headers:\n  {\n    'accept': 'application/json',\n    'Content-Type': 'multipart/form-data',\n    'accept': 'application/json',\n    'Authorization': `Bearer ${data['token']}`\n  }\n}));\nexport const apiEventbookGet = (data) => auth_except(baseRequest.get(`/device/category-priority?workshop_name=${data['workshop']}&project=${data['project']}`, {\n  headers:\n  {\n    'accept': 'application/json',\n    'Authorization': `Bearer ${data['token']}`\n  },\n}));\n\nexport const apiDevices = (data) => auth_except(baseRequest.post('/migration/devices', data['file'], {\n  headers:\n  {\n    'accept': 'application/json',\n    'Content-Type': 'multipart/form-data',\n    'accept': 'application/json',\n    'Authorization': `Bearer ${data['token']}`\n  }\n}));\nexport const apiDevicesData = (data) => auth_except(baseRequest.get(`/device/?workshop_name=${data['name']}`, {\n  headers:\n  {\n    'accept': 'application/json',\n    'Authorization': `Bearer ${data['token']}`\n  }\n}));\n\nexport const apiWorkerinfos = (data) => auth_except(baseRequest.post('/migration/factory-worker-infos', data['file'], {\n  headers:\n  {\n    'accept': 'application/json',\n    'Content-Type': 'multipart/form-data',\n    'accept': 'application/json',\n    'Authorization': `Bearer ${data['token']}`\n  }\n}));\nexport const apiWorkerAll = (data) => auth_except(baseRequest.get(`/users/overview?workshop_name=${data['workshop']}`,\n  {\n    headers:\n    {\n      'accept': 'application/json',\n      'Authorization': `Bearer ${data['token']}`\n    }\n  }));\n\n// white list\nexport const apiGetWhiteList = (workshop_name) => auth_except(baseRequest.get(`/device/whitelist?workshop_name=${workshop_name}`, {\n  headers: {\n    'accept': 'application/json',\n  }\n}));\nexport const apiGetDeviceRecommend = (workshop_name) => auth_except(baseRequest.get(`/device/whitelist/recommend?workshop_name=${workshop_name}`, {\n  headers: {\n    'accept': 'application/json',\n  }\n}));\nexport const apiGetDeviceNameById = (data) => auth_except(baseRequest.get(`/device/${data['device_id']}`, {\n  headers:\n  {\n    'accept': 'application/json',\n    'Authorization': `Bearer ${data['token']}`\n  }\n}));\nexport const apiGetWorkersByDevice = (data) => auth_except(baseRequest.get(`/device/${data['device_id']}/workers?shift_type=${data['shift']}`, {\n  headers: {\n    'accept': 'application/json',\n  }\n}));\nexport const apiPostAddWorkersWhitelist = (data) => auth_except(baseRequest.post(`/device/${data['device_id']}/whitelist?username=${data['username']}`, {\n  headers: {\n    'accept': 'application/json',\n  }\n}));\nexport const apiDeleteWorkersWhitelist = (data) => auth_except(baseRequest.delete(`/device/${data['device_id']}/whitelist?username=${data['username']}`, {\n  headers: {\n    'accept': 'application/json',\n  }\n}));\n\nexport const apiGetSystemEnvSetting = (data) => auth_except(baseRequest.get(`/system/env-get-settings/${data['key']}`, {\n  headers:\n  {\n    'accept': 'application/json',\n    'Authorization': `Bearer ${data['token']}`\n  }\n}));\n\nexport const apiPostSystemEnvSetting = (data) => auth_except(baseRequest.post(`/system/env-update-settings/${data['key']}?value=${data['value']}`, data, {\n  headers:\n  {\n    'accept': 'application/json',\n    'Authorization': `Bearer ${data['token']}`\n  }\n}));\n\nexport const apiGetSystemEnvSettingCount = (data) => auth_except(baseRequest.get(`/system/env-get-settings/${data['key']}`, {\n  headers:\n  {\n    'accept': 'application/json',\n    'Authorization': `Bearer ${data['token']}`\n  }\n}));\n\nexport const apiPostSystemEnvSettingCount = (data) => auth_except(baseRequest.post(`/system/env-update-settings/${data['key']}?value=${data['value']}`, data, {\n  headers:\n  {\n    'accept': 'application/json',\n    'Authorization': `Bearer ${data['token']}`\n  }\n}));\n\n// $5$rounds=10000$F0XL1NKPWDHaSH$x7OJPMIuQs3XFigY6rsIzhYVDezZa0i3O1qZrDemcm5\n","import React, { useRef, useEffect } from \"react\";\n\nimport { Box, Button, Container, TextField, Typography, Grid } from '@mui/material';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { Logo } from \"../components/logo.js\";\n\nimport { apiUserLogin, apiSystemSpace } from \"../api.js\";\n\nimport { useNavigate } from 'react-router-dom';\n\nimport { encrypt, verify } from \"../tools/crypt\";\n\nconst darkTheme = createTheme({\n    palette: {\n        mode: 'dark',\n        background: {\n            default: '#1a1e2b',\n            paper: '#1a1e2b',\n        },\n        text: {\n            primary: '#EDF2F7',\n        },\n        primary: {\n            // Purple and green play nicely together.\n            main: '#5048E5',\n        },\n\n    },\n});\n\nexport default function Login({ setUser, setAlert }) {\n    const navigate = useNavigate();\n    const _isMounted = useRef(true);\n    useEffect(() => {\n        return () => {\n            _isMounted.current = false;\n        }\n    }, []);\n    function handleOnClick() {\n        try {\n            let account = document.getElementById('account').value;\n            let password = document.getElementById('password').value;\n            const hashPassWord = encrypt(\"foxlink\", \"$5$rounds=10000$F0XL1NKPWDHaSH\");\n\n            if (account == '' || password == '') throw \"帐密不可為空\";\n            apiUserLogin(`grant_type=&username=${account}&password=${hashPassWord}&scope=&client_id=123&client_secret=`)\n                .then(res => {\n                    if (_isMounted.current) {\n                        setUser({\n                            'token': res.data['access_token'],\n                            'token_type': res.data['token_type'],\n                            'username': '',\n                            'level': '',\n                        })\n                        apiSystemSpace(res.data['access_token'])\n                            .then(res => {\n                                setAlert({\n                                    'open': true,\n                                    'msg': `硬盘使用率 : ${(100 * Number(res.data)).toFixed(2)}%`,\n                                    'type': 'warning',\n                                    'duration': 10000\n                                })\n                                navigate('/all-status');\n                            })\n                    }\n                })\n                .catch(err => {\n                    let errMsg = '';\n                    if (err.response && err.response.status == 401) errMsg = '帐密错误';\n                    else if (err.response && err.response.status == 422) errMsg = '验证错误，请重试';\n                    else errMsg = '服务器拒绝连线，请联络相关人员';\n                    setAlert({\n                        'open': true,\n                        'msg': errMsg,\n                        'type': 'error'\n                    })\n                })\n\n        } catch (e) {\n            console.log(e);\n            setAlert({\n                'open': true,\n                'msg': e,\n                'type': 'error'\n            })\n        }\n        document.getElementById('account').value = \"\";\n        document.getElementById('password').value = \"\";\n    }\n    return (\n        <ThemeProvider theme={darkTheme}>\n            <Grid\n                container\n                spacing={0}\n                direction=\"column\"\n                alignItems=\"center\"\n                justifyContent=\"center\"\n                sx={{ minHeight: '100vh', background: '#121212' }}\n            >\n                <Grid item xs={3}>\n                    <Box\n                        component=\"main\"\n                        sx={{\n                            alignItems: 'center',\n                            display: 'flex',\n                            flexGrow: 1,\n                            minHeight: '100%',\n                            maxWidth: 'sm',\n                            background: '#1a1e2b',\n                            borderRadius: 4,\n                            border: 'solid',\n                            borderColor: '#2D3748'\n                        }}\n                    >\n                        <Container maxWidth=\"sm\">\n                            <Grid\n                                container\n                                spacing={0}\n                                direction=\"column\"\n                                alignItems=\"center\"\n                                justifyContent=\"center\"\n                                sx={{ pt: 5 }}\n                            >\n                                <Grid item xs={3}>\n                                    <Logo />\n                                </Grid>\n                            </Grid>\n                            <Box sx={{\n                                pt: 5,\n                                my: 3\n                            }}>\n                                <Typography\n                                    color=\"textPrimary\"\n                                    variant=\"h4\"\n                                >\n                                    系统登入\n                                </Typography>\n                                <Typography\n                                    color=\"textSecondary\"\n                                    gutterBottom\n                                    variant=\"body2\"\n                                >\n                                    使用主管级帐户进入\n                                </Typography>\n                            </Box>\n                            <Box\n                                sx={{\n                                    pb: 1,\n                                    pt: 3\n                                }}\n                            >\n                            </Box>\n                            <TextField\n                                fullWidth\n                                label=\"帐户\"\n                                margin=\"normal\"\n                                name=\"account\"\n                                id=\"account\"\n                                variant=\"outlined\"\n                            />\n                            <TextField\n                                fullWidth\n                                label=\"密码\"\n                                margin=\"normal\"\n                                name=\"password\"\n                                id=\"password\"\n                                type=\"password\"\n                                variant=\"outlined\"\n                            />\n                            <Box sx={{ py: 2 }}>\n                                <Button\n                                    color=\"primary\"\n                                    fullWidth\n                                    size=\"large\"\n                                    type=\"submit\"\n                                    variant=\"contained\"\n                                    onClick={handleOnClick}\n                                >\n                                    登入\n                                </Button>\n                            </Box>\n                        </Container>\n                    </Box>\n                </Grid>\n            </Grid>\n        </ThemeProvider>\n    );\n}","import { createSvgIcon } from '@mui/material/utils';\nimport React from \"react\";\nexport const UserCircle = createSvgIcon(\n  <svg\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M19.5999 9.99999C19.5999 12.5461 18.5885 14.9879 16.7881 16.7882C14.9878 18.5886 12.546 19.6 9.9999 19.6C7.45382 19.6 5.01203 18.5886 3.21168 16.7882C1.41133 14.9879 0.399902 12.5461 0.399902 9.99999C0.399902 7.45392 1.41133 5.01212 3.21168 3.21177C5.01203 1.41142 7.45382 0.399994 9.9999 0.399994C12.546 0.399994 14.9878 1.41142 16.7881 3.21177C18.5885 5.01212 19.5999 7.45392 19.5999 9.99999ZM12.3999 6.39999C12.3999 7.03651 12.147 7.64696 11.697 8.09705C11.2469 8.54714 10.6364 8.79999 9.9999 8.79999C9.36338 8.79999 8.75293 8.54714 8.30285 8.09705C7.85276 7.64696 7.5999 7.03651 7.5999 6.39999C7.5999 5.76347 7.85276 5.15302 8.30285 4.70294C8.75293 4.25285 9.36338 3.99999 9.9999 3.99999C10.6364 3.99999 11.2469 4.25285 11.697 4.70294C12.147 5.15302 12.3999 5.76347 12.3999 6.39999ZM9.9999 11.2C8.85102 11.1998 7.72623 11.5294 6.7592 12.1497C5.79217 12.77 5.02355 13.6549 4.5447 14.6992C5.21991 15.4847 6.05703 16.1149 6.99864 16.5466C7.94024 16.9782 8.96407 17.2011 9.9999 17.2C11.0357 17.2011 12.0596 16.9782 13.0012 16.5466C13.9428 16.1149 14.7799 15.4847 15.4551 14.6992C14.9762 13.6549 14.2076 12.77 13.2406 12.1497C12.2736 11.5294 11.1488 11.1998 9.9999 11.2Z\"\n    />\n  </svg>,\n  'UserCircle'\n);\n","import React from \"react\";\n\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport { AppBar, Avatar, Box, IconButton, Toolbar, Tooltip, Typography } from '@mui/material';\n\nimport { UserCircle as UserCircleIcon } from '../icons/user-circle';\n\n\nconst DashboardNavbarRoot = styled(AppBar)(({ theme }) => ({\n // backgroundColor: \"#0c0d13\",\n  backgroundColor: \"#FFFFFF\",\n  boxShadow: '0px 1px 4px rgba(100, 116, 139, 0.12)'\n}));\n\nexport function DashboardNavbar({user}){\n  return (\n    <>\n    {\n      user && \n      <DashboardNavbarRoot\n        sx={{\n          left: {\n            lg: 280\n          },\n          width: {\n            lg: 'calc(100% - 280px)'\n          }\n        }}\n      >\n      <Toolbar\n        disableGutters\n        sx={{\n          minHeight: 64,\n          left: 0,\n          px: 2\n        }}\n      >\n        <Box sx={{ flexGrow: 1 }} />\n        <Tooltip title={`You are ${user.username} !`}>\n          <IconButton sx={{ ml: 1 }}>\n            <Typography>\n                {user.username}\n            </Typography>\n          </IconButton>\n        </Tooltip>\n        <Tooltip title={`Level ${user.level}`}>\n          <Avatar\n            sx={{\n              height: 40,\n              width: 40,\n              ml: 1\n            }}\n          >\n            <UserCircleIcon fontSize=\"small\" />\n          </Avatar>\n        </Tooltip>\n      </Toolbar>\n    </DashboardNavbarRoot>\n    }\n    </>\n  );\n};\n\n","import { createSvgIcon } from '@mui/material/utils';\nimport React from \"react\";\nexport const QRCode = createSvgIcon(\n  <svg width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" data-name=\"Layer 1\">\n    <path d=\"M8,21H4a1,1,0,0,1-1-1V16a1,1,0,0,0-2,0v4a3,3,0,0,0,3,3H8a1,1,0,0,0,0-2Zm14-6a1,1,0,0,0-1,1v4a1,1,0,0,1-1,1H16a1,1,0,0,0,0,2h4a3,3,0,0,0,3-3V16A1,1,0,0,0,22,15ZM20,1H16a1,1,0,0,0,0,2h4a1,1,0,0,1,1,1V8a1,1,0,0,0,2,0V4A3,3,0,0,0,20,1ZM2,9A1,1,0,0,0,3,8V4A1,1,0,0,1,4,3H8A1,1,0,0,0,8,1H4A3,3,0,0,0,1,4V8A1,1,0,0,0,2,9Zm8-4H6A1,1,0,0,0,5,6v4a1,1,0,0,0,1,1h4a1,1,0,0,0,1-1V6A1,1,0,0,0,10,5ZM9,9H7V7H9Zm5,2h4a1,1,0,0,0,1-1V6a1,1,0,0,0-1-1H14a1,1,0,0,0-1,1v4A1,1,0,0,0,14,11Zm1-4h2V9H15Zm-5,6H6a1,1,0,0,0-1,1v4a1,1,0,0,0,1,1h4a1,1,0,0,0,1-1V14A1,1,0,0,0,10,13ZM9,17H7V15H9Zm5-1a1,1,0,0,0,1-1,1,1,0,0,0,0-2H14a1,1,0,0,0-1,1v1A1,1,0,0,0,14,16Zm4-3a1,1,0,0,0-1,1v3a1,1,0,0,0,0,2h1a1,1,0,0,0,1-1V14A1,1,0,0,0,18,13Zm-4,4a1,1,0,1,0,1,1A1,1,0,0,0,14,17Z\"/>\n  </svg>,\n  'QRCode'\n);\n","import { createSvgIcon } from '@mui/material/utils';\nimport React from \"react\";\nexport const ChartBar = createSvgIcon(\n  <svg\n    viewBox=\"0 0 20 18\"\n    fill=\"currentColor\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M0.399902 10.2C0.399902 9.88175 0.52633 9.57652 0.751374 9.35148C0.976418 9.12644 1.28164 9.00001 1.5999 9.00001H3.9999C4.31816 9.00001 4.62339 9.12644 4.84843 9.35148C5.07347 9.57652 5.1999 9.88175 5.1999 10.2V16.2C5.1999 16.5183 5.07347 16.8235 4.84843 17.0485C4.62339 17.2736 4.31816 17.4 3.9999 17.4H1.5999C1.28164 17.4 0.976418 17.2736 0.751374 17.0485C0.52633 16.8235 0.399902 16.5183 0.399902 16.2V10.2ZM7.5999 5.40001C7.5999 5.08175 7.72633 4.77652 7.95137 4.55148C8.17642 4.32643 8.48164 4.20001 8.7999 4.20001H11.1999C11.5182 4.20001 11.8234 4.32643 12.0484 4.55148C12.2735 4.77652 12.3999 5.08175 12.3999 5.40001V16.2C12.3999 16.5183 12.2735 16.8235 12.0484 17.0485C11.8234 17.2736 11.5182 17.4 11.1999 17.4H8.7999C8.48164 17.4 8.17642 17.2736 7.95137 17.0485C7.72633 16.8235 7.5999 16.5183 7.5999 16.2V5.40001ZM14.7999 1.80001C14.7999 1.48175 14.9263 1.17652 15.1514 0.951478C15.3764 0.726434 15.6816 0.600006 15.9999 0.600006H18.3999C18.7182 0.600006 19.0234 0.726434 19.2484 0.951478C19.4735 1.17652 19.5999 1.48175 19.5999 1.80001V16.2C19.5999 16.5183 19.4735 16.8235 19.2484 17.0485C19.0234 17.2736 18.7182 17.4 18.3999 17.4H15.9999C15.6816 17.4 15.3764 17.2736 15.1514 17.0485C14.9263 16.8235 14.7999 16.5183 14.7999 16.2V1.80001Z\"\n    />\n  </svg>,\n  'ChartBar'\n);\n","import { createSvgIcon } from '@mui/material/utils';\nimport React from \"react\";\nexport const Layout = createSvgIcon(\n  <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\"  x=\"0px\" y=\"0px\"\n\t viewBox=\"0 0 456.578 456.578\" >\n<g>\n\t<g>\n\t\t<g>\n\t\t\t<path d=\"M435.539,0h-184c-8.284,0-15,6.716-15,15v426.578c0,8.284,6.716,15,15,15h184c8.284,0,15-6.716,15-15V15\n\t\t\t\tC450.539,6.716,443.823,0,435.539,0z\"/>\n\t\t\t<path d=\"M191.291,0H21.039c-8.284,0-15,6.716-15,15v102.249c0,8.284,6.716,15,15,15h170.252c8.284,0,15-6.716,15-15V15\n\t\t\t\tC206.291,6.716,199.575,0,191.291,0z\"/>\n\t\t\t<path d=\"M191.291,324.329H21.039c-8.284,0-15,6.716-15,15v102.249c0,8.284,6.716,15,15,15h170.252c8.284,0,15-6.716,15-15\n\t\t\t\tV339.329C206.291,331.045,199.575,324.329,191.291,324.329z\"/>\n\t\t\t<path d=\"M191.291,162.165H21.039c-8.284,0-15,6.716-15,15v102.248c0,8.284,6.716,15,15,15h170.252c8.284,0,15-6.716,15-15\n\t\t\t\tV177.165C206.291,168.881,199.575,162.165,191.291,162.165z\"/>\n\t\t</g>\n\t</g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n</svg>,\n  'Layout'\n);\n","import { createSvgIcon } from '@mui/material/utils';\nimport React from \"react\";\nexport const Info = createSvgIcon(\n  <svg version=\"1.1\"  xmlns=\"http://www.w3.org/2000/svg\" \n\t viewBox=\"0 0 460 460\" >\n<g id=\"XMLID_1055_\">\n\t<g>\n\t\t<path d=\"M230,0C102.975,0,0,102.975,0,230s102.975,230,230,230s230-102.974,230-230S357.025,0,230,0z M268.333,377.36\n\t\t\tc0,8.676-7.034,15.71-15.71,15.71h-43.101c-8.676,0-15.71-7.034-15.71-15.71V202.477c0-8.676,7.033-15.71,15.71-15.71h43.101\n\t\t\tc8.676,0,15.71,7.033,15.71,15.71V377.36z M230,157c-21.539,0-39-17.461-39-39s17.461-39,39-39s39,17.461,39,39\n\t\t\tS251.539,157,230,157z\"/>\n\t</g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n<g>\n</g>\n</svg>\n,\n  'Info'\n);\n","import React from \"react\";\n\nimport { Box, Container } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { DashboardNavbar } from './dashboard-navbar';\nimport { DashboardSidebar } from './dashboard-sidebar';\n\nconst DashboardLayoutRoot = styled('div')(({ theme }) => ({\n  display: 'flex',\n  flex: '1 1 auto',\n  maxWidth: '100%',\n  paddingTop: 64,\n  [theme.breakpoints.up('lg')]: {\n    paddingLeft: 280\n  }\n}));\n\nexport const DashboardLayout = ({children, user}) => {\n  return (\n    <Box\n      component=\"main\"\n      sx={{\n      flexGrow: 1,\n      py: 6\n      }}\n    >\n      <Container maxWidth={false}>\n      <DashboardLayoutRoot>\n        <Box\n          sx={{\n            display: 'flex',\n            flex: '1 1 auto',\n            flexDirection: 'column',\n            width: '100%',\n          }}\n        >\n          {children}\n        </Box>\n      </DashboardLayoutRoot>\n      <DashboardSidebar />\n      <DashboardNavbar user={user} />\n      </Container>\n    </Box>\n      \n  );\n};\n","import React from \"react\";\nimport {Snackbar} from \"@mui/material\";\nimport MuiAlert from '@mui/material/Alert';\n\nexport default function SnackbarAlert({open, type, message, setAlert}) {\n    const Alert = React.forwardRef(function Alert(props, ref) {\n        return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n    });\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {return;}\n        setAlert({\n            'open': false,\n        })\n    }\n    return (\n        <div>\n             <Snackbar open={open} autoHideDuration={1000} onClose={handleClose} anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\n                <Alert onClose={handleClose} severity={type} sx={{ width: '100%' }}>\n                    {message}\n                </Alert>\n            </Snackbar>  \n        </div>\n    )\n}","import React from \"react\";\nimport { styled } from '@mui/material/styles';\n\nconst SeverityPillRoot = styled('span')(({ theme, ownerState, colorHEX }) => {\n  const backgroundColor = theme.palette[ownerState.color].main;\n  //const backgroundColor = colorHEX;\n  //const color = colorHEX;\n  const color = theme.palette[ownerState.color].contrastText;\n\n\n  return {\n    alignItems: 'center',\n    backgroundColor,\n    borderRadius: 12,\n    color,\n    cursor: 'default',\n    display: 'inline-flex',\n    flexGrow: 0,\n    flexShrink: 0,\n    fontFamily: theme.typography.fontFamily,\n    fontSize: theme.typography.pxToRem(12),\n    lineHeight: 2,\n    fontWeight: 600,\n    justifyContent: 'center',\n    letterSpacing: 0.5,\n    minWidth: 20,\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    textTransform: 'uppercase',\n    whiteSpace: 'nowrap'\n  };\n});\n\nexport const SeverityPill = (props) => {\n  const { color = 'primary', children, ...other } = props;\n\n  const ownerState = { color };\n\n  return (\n    <SeverityPillRoot\n      ownerState={ownerState}\n      {...other}\n    >\n      {children}\n    </SeverityPillRoot>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport {\n  useNavigate\n} from 'react-router-dom'\nimport { Select, MenuItem } from '@mui/material';\nimport {apiWorkShopList} from \"../api.js\";\n\nexport const WorkshopPicker = ({token, workshop, setWorkshop, setAlert}) => {\n  const navigate = useNavigate();\n  const [selectItem, setSelectItem] = useState();\n\n  const handleChange = (event) => {\n    setWorkshop(event.target.value);\n  };\n\n  useEffect(()=> {\n    apiWorkShopList(token).then(res => {\n        setSelectItem(res.data.map(name=>{\n            return(<MenuItem key={name} value={name}>{name}</MenuItem>)\n        }))\n    }).catch(err => {\n     \n    });\n}, [])\n\n  return (\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={workshop}\n          label=\"WorkShop\"\n          onChange={handleChange}\n          sx={{minWidth:\"130px\"}}\n        >\n        {\n          selectItem \n        }\n        </Select>\n  );\n} \n","import React, { useState, useEffect, useReducer } from \"react\";\nimport {useNavigate} from 'react-router-dom';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n    Box,\n    Button,\n    Card,\n    CardHeader,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    createTheme,\n    ThemeProvider,\n    Divider,\n    FormControl,\n    InputLabel\n} from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport { SeverityPill } from '../components/severity-pill';\nimport { WorkshopPicker } from \"../components/workshop-picker.js\";\nimport { apiWorkStatus } from \"../api.js\";\n\nconst darkTheme = createTheme({\n    palette: {\n        mode: 'dark',\n        background: {\n            default: '#1a1e2b',\n            paper: '#1a1e2b',\n        },\n        text: {\n            primary: '#EDF2F7',\n        },\n        secondary: {\n            main: '#10B981',\n            light: '#3FC79A',\n            dark: '#0B815A',\n            contrastText: '#FFFFFF'\n        },\n        success: {\n            main: '#14B8A6',\n            light: '#43C6B7',\n            dark: '#0E8074',\n            contrastText: '#FFFFFF'\n        },\n        info: {\n            main: '#2196F3',\n            light: '#64B6F7',\n            dark: '#0B79D0',\n            contrastText: '#FFFFFF'\n        },\n        warning: {\n            main: '#FFB020',\n            light: '#FFBF4C',\n            dark: '#B27B16',\n            contrastText: '#FFFFFF'\n        },\n        error: {\n            main: '#D14343',\n            light: '#DA6868',\n            dark: '#922E2E',\n            contrastText: '#FFFFFF'\n        },leave: {\n            main:'#292b2c',\n            contrastText: '#fff'\n        },\n        working:{\n            main:'#d9534f',\n            contrastText: '#fff'\n        },\n        notice:{\n            main:'#f0ad4e',\n            contrastText: '#fff'\n        },\n        moving:{\n            main:'#0275d8',\n            contrastText: '#fff'\n        },\n        idle:{\n            main:'#5cb85c',\n            contrastText: '#fff'\n        }\n    }\n});\n\nconst CONTENT = {\n    title: \"员工状态总览\",\n    worker_id: \"员工 ID\",\n    name: \"姓名\",\n    last_event_end_date: \"上次任务结束时间\",\n    at_device_cname: \"员工位置\",\n    worker_status: \"员工状态\",\n    total_dispatches: \"派工总数\",\n    mission_duration: \"任务时长\",\n    repair_duration: \"维修时长\",\n    update: \"更新资料\",\n    Idle:\"閒置中\",\n    Working:\"维修中\",\n    Moving:\"移动中\",\n    Notice:\"指派中\",\n    Leave:\"离线\",\n\n}\nexport default function AllStatus({ token, setAlert, ...rest }) {\n    const [statusData, setStatusData] = useState();\n    const [workshop, setWorkshop] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const [_, forceUpdate] = useReducer(x => x + 1, 0);\n    const navigate = useNavigate();\n\n    const updataData = (sort=false) => {\n        setLoading(true);\n        apiWorkStatus(workshop).then(res => {\n            let rawData = res.data;\n            rawData.map(worker => {\n                worker.finish_event_date = parseTimeZone(worker.finish_event_date);\n                if(worker.mission_duration == null) worker.mission_duration = \"无\";\n                else worker.mission_duration = parseSeconds(worker.mission_duration);\n                if(worker.repair_duration == null) worker.repair_duration = \"无\";\n                else worker.repair_duration = parseSeconds(worker.repair_duration);\n                worker.sort = parseSortIndex(worker.status);\n            });\n            if(sort){\n                rawData.sort(function(a, b){\n                    return b.sort - a.sort;\n                })\n            }\n            setStatusData(rawData);\n            setAlert({\n                'open':true,\n                'msg': \"更新成功\",\n                'type': 'success'\n              });\n        }).catch(err => {\n            if(err.response){\n                setAlert({\n                    'open':true,\n                    'msg': err.response.statusText,\n                    'type': 'error'\n                })\n            }\n            else{\n                alert('网路异常，请联系相关人员 (断线 或 Timeout)');\n                navigate('/login');\n            }\n        }).finally(()=>{\n            setLoading(false);\n        });\n    }\n\n    /*\n    const handleSort = () => {\n        \n        let sortedData = statusData;\n        sortedData.sort(function(a, b){\n            return b.sort - a.sort;\n        })\n        setStatusData(sortedData);\n        forceUpdate();\n    }\n    */\n    const parseTimeZone = (time_string) => {\n        let dt = new Date(time_string);\n        dt.setTime(dt.getTime() - dt.getTimezoneOffset() * 60 * 1000);\n        let formated_str = dt.toLocaleDateString() + \"  \" + dt.toLocaleTimeString('zh-CN', { hour12: false });\n        return formated_str;\n    }\n    const parseSeconds = (sencond_str) => {\n        let sec_num = parseInt(sencond_str);\n        let hours = Math.floor(sec_num / 3600);\n        let minutes = Math.floor((sec_num - (hours * 3600)) / 60);\n        let seconds = sec_num - (hours * 3600) - (minutes * 60);\n\n        if (hours < 10) { hours = \"0\" + hours; }\n        if (minutes < 10) { minutes = \"0\" + minutes; }\n        if (seconds < 10) { seconds = \"0\" + seconds; }\n\n        return hours + ':' + minutes + ':' + seconds;\n    }\n    const parseSortIndex = (status_str) => {\n        if(status_str === \"Working\"){return 5;}\n        else if(status_str === \"Notice\"){return 4;}\n        else if(status_str === \"Moving\"){return 3;}\n        else if(status_str === \"Idle\"){return 2;}\n        else{return 1;}\n    }\n    return (\n        <ThemeProvider theme={darkTheme}>\n            <Card >\n                <CardHeader title={CONTENT.title}\n                    action={(\n                    <FormControl >\n                        <InputLabel id=\"demo-simple-select-label\">WorkShop</InputLabel>\n                        <WorkshopPicker token={token} workshop={workshop} setWorkshop={setWorkshop} />\n                        <LoadingButton\n                        variant=\"contained\"\n                        size=\"large\"\n                        component=\"span\"\n                        sx={{\n                            borderRadius: 4,\n                            minWidth: 200,\n                            justifyContent: 'center',\n                            letterSpacing: 3,\n                            mt:1\n                        }}\n                        loading={loading}\n                        onClick={() => updataData(false)}\n                        >\n                            {CONTENT.update}\n                        </LoadingButton>\n                    </FormControl>)} \n                />\n                <Divider sx={{ borderBottomWidth: 3 }} />\n                <PerfectScrollbar>\n                    {\n                        statusData && \n                        <Box sx={{ minWidth: 800 }}>\n                        <Table>\n                            <TableHead sx={{ background: \"#272d3a\" }}>\n                                <TableRow>\n                                    <TableCell>\n                                        {CONTENT.worker_id}\n                                    </TableCell>\n                                    <TableCell>\n                                        {CONTENT.name}\n                                    </TableCell>\n                                    <TableCell >\n                                        {CONTENT.last_event_end_date}\n                                    </TableCell>\n                                    <TableCell >\n                                        {CONTENT.at_device_cname}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Button id=\"status\" onClick={() => updataData(true)}>{CONTENT.worker_status}</Button>\n                                    </TableCell>\n                                    <TableCell>\n                                        {CONTENT.total_dispatches}\n                                    </TableCell>\n                                    <TableCell>\n                                        {CONTENT.mission_duration}\n                                    </TableCell>\n                                    <TableCell>\n                                        {CONTENT.repair_duration}\n                                    </TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {statusData.map(worker => (\n                                    <TableRow\n                                        hover\n                                        key={worker.worker_id}\n                                    >\n                                        <TableCell>\n                                            {worker.worker_id}\n                                        </TableCell>\n                                        <TableCell>\n                                            {worker.worker_name}\n                                        </TableCell>\n                                        <TableCell>\n                                            {worker.finish_event_date}\n                                        </TableCell>\n                                        <TableCell>\n                                            {\n                                              worker.at_device_cname == null ? worker.at_device : worker.at_device_cname\n                                            }\n                                        </TableCell>\n                                        <TableCell>\n                                            <SeverityPill\n                                                color={(worker.status === 'Working' && 'working')\n                                                    || (worker.status === 'Leave' && 'leave')\n                                                    || (worker.status === 'Notice' && 'notice')\n                                                    || (worker.status === 'Moving' && 'moving')\n                                                    || (worker.status === 'Idle' && 'idle')\n                                                    || 'warning'}\n                                            >\n                                                {CONTENT[worker.status]}\n                                            </SeverityPill>\n                                        </TableCell>\n                                        <TableCell>\n                                            {worker.total_dispatches}\n                                        </TableCell>\n                                        <TableCell>\n                                            {worker.mission_duration}\n                                        </TableCell>\n                                        <TableCell>\n                                            {worker.repair_duration}\n                                        </TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </Box>\n                    }\n                </PerfectScrollbar>\n            </Card>\n        </ThemeProvider>\n    );\n}","import React, { useState } from \"react\";\n\nimport { Avatar, Box, Card, CardContent, Grid, LinearProgress, Typography, TextField, Stack, Switch, SwitchProps } from '@mui/material';\n// import { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\n// import { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker';\nimport { FormControl, Select, MenuItem, InputLabel } from '@mui/material';\n\nexport const DateRange = ({ sDate, eDate, setSDate, setEDate, setShift }) => {\n\n  const [shift_, setShift_] = useState(\"\");\n\n  const handleChange = (event) => {\n    setShift(event.target.value);\n    setShift_(event.target.value);\n  };\n\n  return (\n    <Card\n      sx={{ height: '100%' }}\n    >\n      <CardContent>\n        <Grid\n          container\n          spacing={3}\n          sx={{ justifyContent: 'space-between' }}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"overline\"\n              fontSize=\"large\"\n              sx={{ pt: 4, pr: 1 }}\n            >\n              日期\n            </Typography>\n          </Grid>\n          <Box sx={{ pr: 1, pt: 4 }}>\n            <LocalizationProvider dateAdapter={AdapterDayjs}>\n              <DatePicker\n                label=\"开始日期\"\n                value={sDate}\n                onChange={(newValue) => {\n                  setSDate(newValue);\n                  //console.log(newValue);\n                }}\n                renderInput={(params) => <TextField {...params} />}\n              />\n              {/* <DateTimePicker\n                label=\"开始日期\"\n                value={sDate}\n                onChange={(newValue) => {\n                  setSDate(newValue);\n                }}\n                renderInput={(params) => <TextField {...params} />}\n              /> */}\n            </LocalizationProvider>\n          </Box>\n          <Box sx={{ pt: 4 }}>\n            <LocalizationProvider dateAdapter={AdapterDayjs}>\n              <DatePicker\n                label=\"结束日期\"\n                value={eDate}\n                onChange={(newValue) => {\n                  setEDate(newValue);\n                  //console.log(newValue);\n                }}\n                renderInput={(params) => <TextField {...params} />}\n              />\n            </LocalizationProvider>\n            {/* <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DateTimePicker\n                label=\"结束日期\"\n                value={eDate}\n                onChange={(newValue) => {\n                  setEDate(newValue);\n                  //console.log(newValue);\n                }}\n                renderInput={(params) => <TextField {...params} />}\n              /> */}\n          </Box>\n          <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n            {/* <Typography>夜</Typography>\n              <Switch checked={shift} onChange={handleChange} inputProps={{ 'aria-label': 'controlled' }} />\n              <Typography>日</Typography> */}\n            <FormControl sx={{ mt: 4, mb: 0, mr: 3, ml: 3 }}>\n              <InputLabel id=\"demo-simple-select-label\" >班別</InputLabel>\n              <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={shift_}\n                label=\"WorkShop\"\n                onChange={handleChange}\n                sx={{ minWidth: \"130px\" }}\n              >\n                <MenuItem key=\"no-shift\" value=\"無\">不分班別</MenuItem>\n                <MenuItem key=\"shift-true\" value=\"夜\">夜</MenuItem>\n                <MenuItem key=\"shift-false\" value=\"日\">日</MenuItem>\n              </Select>\n            </FormControl>\n          </Stack>\n        </Grid>\n      </CardContent>\n    </Card >\n  );\n} \n","import React, { useState, useEffect } from \"react\";\n\nimport {\n  Avatar, Box, Card, CardContent, Grid, LinearProgress,\n  Typography, Dialog, DialogTitle, DialogContent, Button, DialogActions\n} from '@mui/material';\nimport InsertChartIcon from '@mui/icons-material/InsertChartOutlined';\n\nconst CONTENT = {\n  title: \"出勤人员\",\n}\n\n\nexport function Rate({ list_data, ...rest }) {\n  useEffect(() => {\n    if (list_data.length > 0) {\n      const display = list_data[0].login_users.map(\n        employees => {\n          return (\n            <Card sx={{\n              m: 1, minWidth: \"500px\"\n            }}\n              key={employees.username}>\n              <CardContent>\n                <Typography\n                  color=\"textSecondary\"\n                  gutterBottom\n                  variant=\"overline\"\n                  fontSize=\"large\"\n                >\n                  员工编号 : {employees.badge}\n                </Typography>\n                <Typography>\n                  员工姓名 : {employees.username}\n                </Typography>\n              </CardContent>\n            </Card>\n          )\n        }\n      )\n      setData(display);\n    }\n  }, [])\n  const [data, setData] = useState();\n  const [open, setOpen] = useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  return (\n\n    <Card\n      sx={{ height: '100%' }}\n    >\n      <CardContent>\n        <Grid\n          container\n          spacing={3}\n          sx={{ justifyContent: 'space-between' }}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"overline\"\n              fontSize=\"large\"\n            >\n              出勤比例\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h4\"\n            >\n              {((list_data[0].percentage) * 100).toFixed(2)}%\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar\n              sx={{\n                backgroundColor: 'secondary.main',\n                height: 56,\n                width: 56\n              }}\n            >\n              <InsertChartIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n        <Box sx={{ pt: 3 }}>\n          <LinearProgress\n            value={list_data}\n            variant=\"determinate\"\n          />\n        </Box>\n        <Box sx={{ pt: 3 }}>\n          <Button variant=\"contained\" onClick={handleClickOpen}>\n            查看\n          </Button>\n          <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            sx={{ width: '100%' }}\n          >\n            <DialogTitle id=\"alert-dialog-title\">\n              {CONTENT.title}\n            </DialogTitle>\n            <DialogContent>\n              {\n                data\n              }\n            </DialogContent>\n            <DialogActions >\n              <Button onClick={handleClose} autoFocus variant=\"contained\">\n                关闭\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n}\n\n\n// export const Rate = ({ rate, ...rest }) => (\n//   <Card\n//     sx={{ height: '100%' }}\n//   >\n//     <CardContent>\n//       <Grid\n//         container\n//         spacing={3}\n//         sx={{ justifyContent: 'space-between' }}\n//       >\n//         <Grid item>\n//           <Typography\n//             color=\"textSecondary\"\n//             gutterBottom\n//             variant=\"overline\"\n//             fontSize=\"large\"\n//           >\n//             出勤比例\n//           </Typography>\n//           <Typography\n//             color=\"textPrimary\"\n//             variant=\"h4\"\n//           >\n//             {(rate).toFixed(2)}%\n//           </Typography>\n//         </Grid>\n//         <Grid item>\n//           <Avatar\n//             sx={{\n//               backgroundColor: 'secondary.main',\n//               height: 56,\n//               width: 56\n//             }}\n//           >\n//             <InsertChartIcon />\n//           </Avatar>\n//         </Grid>\n//       </Grid>\n//       <Box sx={{ pt: 3 }}>\n//         <LinearProgress\n//           value={rate}\n//           variant=\"determinate\"\n//         />\n//       </Box>\n//     </CardContent>\n//   </Card>\n// );\n","import React, { useState, useEffect } from \"react\";\n\nimport {\n  Avatar, Box, Card, CardContent, Grid,\n  Typography, Dialog, DialogTitle, DialogContent, Button, DialogActions\n} from '@mui/material';\nimport BrokenImageSharpIcon from '@mui/icons-material/BrokenImageSharp';\n\nconst CONTENT = {\n  title: \"经常异常装置\",\n\n}\n\nexport function CrashedDevices({ list_data, ...rest }) {\n  useEffect(() => {\n    if (list_data.length > 0) {\n      const display = list_data.map(\n        device => {\n          return (\n            <Card sx={{\n              m: 1, minWidth: \"500px\"\n            }}\n              key={device.device}>\n              <CardContent>\n                <Typography\n                  color=\"textSecondary\"\n                  gutterBottom\n                  variant=\"overline\"\n                  fontSize=\"large\"\n                >\n                  {device.device_id}\n                </Typography>\n                <Typography>\n                  装置名称 : {device.device_cname}\n                </Typography>\n                <Typography>\n                  異常次數 : {device.count}\n                </Typography>\n              </CardContent>\n            </Card>\n          )\n        }\n      )\n      setData(display);\n    }\n  }, [])\n  const [data, setData] = useState();\n  const [open, setOpen] = useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  return (\n    <Card\n      sx={{ height: '100%' }}\n\n    >\n      <CardContent>\n        <Grid\n          container\n          spacing={3}\n          sx={{ justifyContent: 'space-between' }}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"overline\"\n              fontSize=\"large\"\n            >\n              经常异常装置\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h4\"\n            >\n              {list_data.length}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar\n              sx={{\n                backgroundColor: 'info.main',\n                height: 56,\n                width: 56\n              }}\n            >\n              <BrokenImageSharpIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n        <Box sx={{ pt: 3 }}>\n          <Button variant=\"contained\" onClick={handleClickOpen}>\n            查看\n          </Button>\n          <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">\n              {CONTENT.title}\n            </DialogTitle>\n            <DialogContent>\n              {\n                data\n              }\n            </DialogContent>\n            <DialogActions >\n              <Button onClick={handleClose} autoFocus variant=\"contained\">\n                关闭\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n} \n","import React, { useState, useEffect } from \"react\";\n\nimport {\n  Avatar, Box, Card, CardContent, Grid,\n  Typography, Dialog, DialogTitle, DialogContent, Button, DialogActions\n} from '@mui/material';\n\nimport LibraryAddCheckIcon from '@mui/icons-material/LibraryAddCheck';\n\nconst CONTENT = {\n  title: \"接受任务总数的员工排名\",\n\n}\n\nexport function AcceptMissionEmployees({ list_data, ...rest }) {\n  useEffect(() => {\n    if (list_data.length > 0) {\n      const display = list_data.map(\n        employee => {\n          return (\n            <Card sx={{\n              m: 1, minWidth: \"500px\"\n            }}\n              key={employee.username}>\n              <CardContent>\n                <Typography\n                  color=\"textSecondary\"\n                  gutterBottom\n                  variant=\"overline\"\n                  fontSize=\"large\"\n                >\n                  员工 ID : {employee.badge}\n                </Typography>\n                <Typography>\n                  姓名 : {employee.username}\n                </Typography>\n                <Typography>\n                  接受总数 : {employee.count}\n                </Typography>\n              </CardContent>\n            </Card>\n          )\n        }\n      )\n      setData(display);\n    }\n  }, [])\n  const [data, setData] = useState();\n  const [open, setOpen] = useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Card\n      sx={{ height: '100%' }}\n    >\n      <CardContent>\n        <Grid\n          container\n          spacing={3}\n          sx={{ justifyContent: 'space-between' }}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"overline\"\n              fontSize=\"large\"\n            >\n              接受任务总数的员工排名\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h4\"\n            >\n              {list_data.length}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar\n              sx={{\n                backgroundColor: 'success.main',\n                height: 56,\n                width: 56\n              }}\n            >\n              <LibraryAddCheckIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n        <Box sx={{ pt: 3 }}>\n          <Button variant=\"contained\" onClick={handleClickOpen}>\n            查看\n          </Button>\n          <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            sx={{ width: '100%' }}\n          >\n            <DialogTitle id=\"alert-dialog-title\">\n              {CONTENT.title}\n            </DialogTitle>\n            <DialogContent>\n              {\n                data\n              }\n            </DialogContent>\n            <DialogActions >\n              <Button onClick={handleClose} autoFocus variant=\"contained\">\n                关闭\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n} \n","import React, { useState, useEffect } from \"react\";\n\nimport {\n  Avatar, Box, Card, CardContent, Grid,\n  Typography, Dialog, DialogTitle, DialogContent, Button, DialogActions\n} from '@mui/material';\nimport CancelIcon from '@mui/icons-material/Cancel';\n\nconst CONTENT = {\n  title: \"拒绝任务总数的员工排名\",\n}\n\nexport function RejectMissionEmployees({ list_data, ...rest }) {\n  useEffect(() => {\n    if (list_data.length > 0) {\n      const display = list_data.map(\n        employee => {\n          return (\n            <Card sx={{\n              m: 1, minWidth: \"500px\"\n            }} key={employee.username}>\n              <CardContent>\n                <Typography\n                  color=\"textSecondary\"\n                  gutterBottom\n                  variant=\"overline\"\n                  fontSize=\"large\"\n                >\n                  员工 ID : {employee.username}\n                </Typography>\n                <Typography>\n                  姓名 : {employee.full_name}\n                </Typography>\n                <Typography>\n                  拒绝总数 : {employee.count}\n                </Typography>\n              </CardContent>\n            </Card>\n          )\n        }\n      )\n      setData(display);\n    }\n  }, [])\n  const [data, setData] = useState();\n  const [open, setOpen] = useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Card\n      sx={{ height: '100%' }}\n    >\n      <CardContent>\n        <Grid\n          container\n          spacing={3}\n          sx={{ justifyContent: 'space-between' }}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"overline\"\n              fontSize=\"large\"\n            >\n              拒绝任务总数的员工排名\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h4\"\n            >\n              {list_data.length}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar\n              sx={{\n                backgroundColor: 'warning.main',\n                height: 56,\n                width: 56\n              }}\n            >\n              <CancelIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n        <Box sx={{ pt: 3 }}>\n          <Button variant=\"contained\" onClick={handleClickOpen}>\n            查看\n          </Button>\n          <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">\n              {CONTENT.title}\n            </DialogTitle>\n            <DialogContent>\n              {\n                data\n              }\n            </DialogContent>\n            <DialogActions >\n              <Button onClick={handleClose} autoFocus variant=\"contained\">\n                关闭\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n} \n","import React, { useState, useEffect } from \"react\";\n\nimport {\n  Avatar, Box, Card, CardContent, Grid,\n  Typography, Dialog, DialogTitle, DialogContent, Button, DialogActions\n} from '@mui/material';\nimport AssignmentLateIcon from '@mui/icons-material/AssignmentLate';\n\nconst CONTENT = {\n  title: \"前十大历史机台异常任务\",\n}\n\nexport function AbnormalMissions({ list_data, ...rest }) {\n  useEffect(() => {\n    if (list_data.length > 0) {\n      const display = list_data.map(\n        mission => {\n          return (\n            <Card sx={{\n              m: 1, minWidth: \"500px\"\n            }}\n              key={mission.mission_id}>\n              <CardContent>\n                <Typography\n                  color=\"textSecondary\"\n                  gutterBottom\n                  variant=\"overline\"\n                  fontSize=\"large\"\n                >\n                  任务 ID : {mission.mission_id}\n                </Typography>\n                <Typography>\n                  装置 ID : {mission.device_id}\n                </Typography>\n                <Typography>\n                  装置名称 : {mission.device_cname}\n                </Typography>\n                <Typography>\n                  类别 : {mission.categories}\n                </Typography>\n                <Typography>\n                  信息 : {mission.messages}\n                </Typography>\n              </CardContent>\n            </Card>\n          )\n        }\n      )\n      setData(display);\n    }\n  }, [])\n  const [data, setData] = useState();\n  const [open, setOpen] = useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Card\n      sx={{ height: '100%' }}\n    >\n      <CardContent>\n        <Grid\n          container\n          spacing={3}\n          sx={{ justifyContent: 'space-between' }}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"overline\"\n              fontSize=\"large\"\n            >\n              前十大历史机台异常任务\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h4\"\n            >\n              {list_data.length}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar\n              sx={{\n                backgroundColor: 'info.main',\n                height: 56,\n                width: 56\n              }}\n            >\n              <AssignmentLateIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n        <Box sx={{ pt: 3 }}>\n          <Button variant=\"contained\" onClick={handleClickOpen}>\n            查看\n          </Button>\n          <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">\n              {CONTENT.title}\n            </DialogTitle>\n            <DialogContent>\n              {\n                data\n              }\n            </DialogContent>\n            <DialogActions >\n              <Button onClick={handleClose} autoFocus variant=\"contained\">\n                关闭\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n} \n","import React, { useState, useEffect } from \"react\";\n\nimport {\n  Avatar, Box, Card, CardContent, Grid,\n  Typography, Dialog, DialogTitle, DialogContent, Button, DialogActions\n} from '@mui/material';\nimport InsertChartIcon from '@mui/icons-material/InsertChartOutlined';\n\nconst CONTENT = {\n  title: \"机台异常处理时间/次数\",\n}\n\nexport function AbnormalDevices({ list_data, ...rest }) {\n  useEffect(() => {\n    if (list_data.length > 0) {\n      const display = list_data.map(\n        device => {\n          return (\n            <Card sx={{\n              m: 1, minWidth: \"500px\"\n            }}\n              key={device.device_id}>\n              <CardContent>\n                <Typography\n                  color=\"textSecondary\"\n                  gutterBottom\n                  variant=\"overline\"\n                  fontSize=\"large\"\n                >\n                  装置 ID : {device.device_id}\n                </Typography>\n                <Typography>\n                  装置名称 : {device.device_cname}\n                </Typography>\n                <Typography>\n                  类别 : {device.category}\n                </Typography>\n                <Typography>\n                  信息 : {device.messages}\n                </Typography>\n                <Typography>\n                  历史最佳指派员工 : {\n                    device.top_great_assignees &&\n                    device.top_great_assignees.map(user => {\n                      return (\n                        <Card key={user.badge}>\n                          <CardContent>\n                            <Typography\n                              color=\"textSecondary\"\n                              gutterBottom\n                              variant=\"overline\"\n                              fontSize=\"small\"\n                            >\n                              员工 ID : {user.badge}\n                            </Typography>\n                            <Typography fontSize=\"small\">\n                              姓名 : {user.username}\n                            </Typography>\n                            {/* <Typography fontSize=\"small\">\n                              Time(s) : {user.duration}\n                            </Typography> */}\n                          </CardContent>\n                        </Card>\n                      )\n                    })\n                  }\n                </Typography>\n              </CardContent>\n            </Card>\n          )\n        }\n      )\n      setData(display);\n    }\n  }, [])\n  const [data, setData] = useState();\n  const [open, setOpen] = useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Card\n      sx={{ height: '100%' }}\n    >\n      <CardContent>\n        <Grid\n          container\n          spacing={3}\n          sx={{ justifyContent: 'space-between' }}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"overline\"\n              fontSize=\"large\"\n            >\n              机台异常处理时间/次数\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h4\"\n            >\n              {list_data.length}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar\n              sx={{\n                backgroundColor: 'info.main',\n                height: 56,\n                width: 56\n              }}\n            >\n              <InsertChartIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n        <Box sx={{ pt: 3 }}>\n          <Button variant=\"contained\" onClick={handleClickOpen}>\n            查看\n          </Button>\n          <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">\n              {CONTENT.title}\n            </DialogTitle>\n            <DialogContent>\n              {\n                data\n              }\n            </DialogContent>\n            <DialogActions >\n              <Button onClick={handleClose} autoFocus variant=\"contained\">\n                关闭\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n} \n","import React, { useState, useRef } from \"react\";\n\nimport {\n  Box,\n  Card,\n  Grid,\n  FormControl,\n  InputLabel\n} from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { DateRange } from \"../components/date-range.js\";\nimport { Rate } from \"../components/rate.js\";\nimport { CrashedDevices } from \"../components/crashed-devices.js\";\nimport { AcceptMissionEmployees } from \"../components/accept-mission-employees.js\";\nimport { RejectMissionEmployees } from \"../components/reject-mission-employees.js\";\nimport { AbnormalMissions } from \"../components/abnormal-missions.js\";\nimport { AbnormalDevices } from \"../components/abnormal-devices.js\";\nimport { WorkshopPicker } from \"../components/workshop-picker.js\";\nimport { apiStatisticsWithDate, apiStatisticsWithShift } from \"../api.js\";\n\nconst darkTheme = createTheme({\n  palette: {\n    mode: 'dark',\n    background: {\n      default: '#1a1e2b',\n      paper: '#1a1e2b',\n    },\n    text: {\n      primary: '#EDF2F7',\n    },\n    primary: {\n      // Purple and green play nicely together.\n      main: '#5048E5',\n    },\n  },\n});\n\nexport default function Statistics({ token, setAlert, ...rest }) {\n  const _isMounted = useRef(true);\n  const [statusData, setData] = useState();\n  const [workshop, setWorkshop] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const [sDate, setSDate] = useState(new Date());\n  const [eDate, setEDate] = useState(new Date());\n  const [shift, setShift] = useState();\n\n  const updatedata = (data) => {\n    setData(null);\n    console.log(data);\n    setLoading(true);\n    if (data.shift !== null) {\n      // 更改時間，讓時間只剩下日期(正崴需求! (2023/01/10 17:46))\n      // data['start'] = data['start'].substring(0, 10)\n      // data['end'] = data['end'].substring(0, 10)\n\n      apiStatisticsWithShift(data).then(res => {\n        setData(res.data);\n        setAlert({\n          'open': true,\n          'msg': \"更新成功\",\n          'type': 'success'\n        });\n      }).catch(err => {\n        setAlert({\n          'open': true,\n          'msg': \"错误代码：\" + err.response.status,\n          'type': 'error'\n        });\n        console.log(err);\n      }).finally(() => {\n        setLoading(false);\n      });\n    }\n    else {\n      apiStatisticsWithDate(data).then(res => {\n        console.log('APICALL資料(不分班別)')\n        console.log(res.data)\n        setData(res.data);\n        setAlert({\n          'open': true,\n          'msg': \"更新成功\",\n          'type': 'success'\n        });\n      }).catch(err => {\n        setAlert({\n          'open': true,\n          'msg': \"请选取车间\",\n          'type': 'error'\n        });\n        console.log(err);\n      }).finally(() => {\n        setLoading(false);\n      });\n    }\n  }\n  const handleOnClick = () => {\n    if (workshop === \"\") {\n      setAlert({\n        'open': true,\n        'msg': \"请选取车间\",\n        'type': 'error'\n      });\n      return;\n    }\n    let _shift;\n    if (shift == \"夜\") {\n      _shift = true;\n    } else if (shift == \"日\") {\n      _shift = false;\n    } else {\n      _shift = null;\n    }\n    const data = {\n      token: token,\n      start: new Date(sDate).toISOString(),\n      end: new Date(eDate).toISOString(),\n      workshop: workshop,\n      shift: _shift\n    }\n    updatedata(data);\n  }\n\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <Grid\n        container\n        spacing={3}\n        sx={{ pb: 5 }}\n      >\n        <Grid item xs={8}>\n          <DateRange sDate={sDate} eDate={eDate} setSDate={setSDate} setEDate={setEDate} setShift={setShift} />\n        </Grid>\n        <Grid item xs={4} justifyContent={\"center\"}>\n          <Card >\n            <Box>\n              <FormControl sx={{ mt: 3, mb: 3, mr: 3, ml: 3 }}>\n                <InputLabel id=\"demo-simple-select-label\" >WorkShop</InputLabel>\n                <WorkshopPicker token={token} workshop={workshop} setWorkshop={setWorkshop} />\n              </FormControl>\n              <LoadingButton\n                variant=\"contained\"\n                size=\"large\"\n                component=\"span\"\n                sx={{\n                  borderRadius: 4,\n                  justifyContent: 'center',\n                  letterSpacing: 3,\n                  mt: 4\n                }}\n                loading={loading}\n                onClick={handleOnClick}\n              >\n                更新资料\n              </LoadingButton>\n            </Box>\n          </Card>\n        </Grid>\n      </Grid>\n      {\n        statusData &&\n        <Grid\n          container\n          spacing={3}\n        >\n          <Grid\n            item\n            lg={4}\n          >\n            {\n              statusData\n              && <Rate list_data={statusData.login_users_percentage_this_week} />\n              // statusData\n              // && (statusData['login_users_percentage_this_week'] == 0 ? <Rate rate={0} /> :\n              //   <Rate list_data={statusData['login_users_percentage_this_week'][0] * 100} />\n              // )\n              // && <Rate list_data={statusData.login_users_percentage_this_week[1].login_users} />\n            }\n          </Grid>\n          <Grid\n            item\n            lg={4}\n          >\n            {\n              statusData.devices_stats &&\n              <CrashedDevices list_data={statusData.devices_stats.most_frequent_crashed_devices} />\n            }\n          </Grid>\n          <Grid\n            item\n            lg={4}\n          >\n            {\n              statusData.top_most_accept_mission_employees &&\n              <AcceptMissionEmployees list_data={statusData.top_most_accept_mission_employees} />\n            }\n\n          </Grid>\n          <Grid\n            item\n            lg={4}\n          >\n            {\n              statusData.top_most_reject_mission_employees &&\n              <RejectMissionEmployees list_data={statusData.top_most_reject_mission_employees} />\n            }\n\n          </Grid>\n          <Grid\n            item\n            lg={4}\n          >\n            {\n              statusData.devices_stats &&\n              <AbnormalMissions list_data={statusData.devices_stats.top_abnormal_missions_this_month} />\n            }\n\n          </Grid>\n          <Grid\n            item\n            lg={4}\n          >\n            {\n              statusData.devices_stats &&\n              <AbnormalDevices list_data={statusData.devices_stats.top_abnormal_devices} />\n            }\n          </Grid>\n        </Grid>\n      }\n    </ThemeProvider>\n  );\n}","import React, { useState } from \"react\";\n\nimport { saveAs } from 'file-saver';\n\nimport { Box, Card, CardContent, CardHeader, Divider, Typography, createTheme, ThemeProvider,InputLabel, MenuItem, Select,FormControl } from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport { QRCode as QRCodeIcon } from '../icons/qrcode';\nimport { WorkshopPicker } from \"../components/workshop-picker.js\";\n\nimport ArrowCircleDownIcon from '@mui/icons-material/ArrowCircleDown';\n\nimport { apiQRCode } from \"../api.js\";\n\nconst darkTheme = createTheme({\n    palette: {\n        mode:'dark',\n        primary: {\n            main: '#5048E5',\n            light: '#828DF8',\n            dark: '#7582EB',\n            contrastText: '#FFFFFF'\n          },\n        background: {\n            default: '#1a1e2b',\n            paper: '#1a1e2b',\n          },\n          text: {\n            primary: '#fff',\n          }\n    },\n  });\n\n\n\nexport default function QrcodeDownload({token, ...rest}) {\n    const [downloading, setDownload] = useState(false);\n    const [workshop, setWorkshop] = useState(\"\");\n\n    const qrCodeHandler = () => {\n        //let data = `grant_type=&username=${account}&password=${password}&scope=&client_id=&client_secret=`\n        if(workshop != \"\"){\n            setDownload(true);\n            const data = {\n                \"name\" : workshop,\n                \"token\" : token\n            }\n            apiQRCode(data)\n            .then(res => {\n                    saveAs(res.data, `${workshop}.zip`);\n                    setDownload(false);\n                }\n            ).catch(\n                err => {\n                    alert(\"workshop is not found!\");\n                }\n            )\n        }\n    }\n\n    return (\n        <ThemeProvider theme={darkTheme}>\n            <Card >\n                <CardHeader title=\"QR Code 下载\" />\n                <Divider sx={{ borderBottomWidth: 3 }}/>\n                <CardContent>\n                    <Box\n                    sx={{\n                        display: 'flex',\n                        justifyContent: 'center',\n                        pt: 2\n                    }}\n                    >\n                    <QRCodeIcon fontSize=\"large\" />\n                    </Box>\n                    <Box\n                    sx={{\n                        display: 'flex',\n                        justifyContent: 'center',\n                        pt: 2\n                    }}\n                    >   \n                        <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                            请选取要下载的车间\n                        </Typography>\n                    </Box>  \n                    <Box\n                    sx={{\n                        display: 'flex',\n                        justifyContent: 'center',\n                        pt: 2\n                    }}\n                    >\n                        <FormControl >\n                                <InputLabel id=\"demo-simple-select-label\">WorkShop</InputLabel>\n                                <WorkshopPicker token={token} workshop={workshop} setWorkshop={setWorkshop} />\n                                <LoadingButton\n                                    onClick={qrCodeHandler}\n                                    endIcon={<ArrowCircleDownIcon color=\"white\"/>}\n                                    loading={downloading}\n                                    loadingPosition=\"end\"\n                                    variant=\"contained\"\n                                    sx={{m:3}}\n                                    color=\"primary\"\n                                    size=\"large\"\n                                >\n                                    下載\n                                </LoadingButton>\n                        </FormControl>   \n                    </Box>\n                </CardContent>\n            </Card>\n        </ThemeProvider>\n    );\n}\n","import React, { useState } from \"react\";\n\nimport { Box, Card, CardContent, CardHeader, Divider, Typography, createTheme, Container, ThemeProvider,InputLabel, MenuItem, Select,FormControl } from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport MapIcon from '@mui/icons-material/Map';\n\nimport ArrowCircleDownIcon from '@mui/icons-material/ArrowCircleDown';\n\nimport { apiMapGet } from \"../api.js\";\n\nimport { WorkshopPicker } from \"../components/workshop-picker.js\";\n\nconst darkTheme = createTheme({\n    palette: {\n        mode:'dark',\n        primary: {\n            main: '#5048E5',\n            light: '#828DF8',\n            dark: '#7582EB',\n            contrastText: '#FFFFFF'\n          },\n        background: {\n            default: '#1a1e2b',\n            paper: '#1a1e2b',\n          },\n          text: {\n            primary: '#fff',\n          }\n    },\n  });\n\nexport default function Map({token, setAlert, ...rest}) {\n  const [downloading, setDownload] = useState(false);\n    const [workshop, setWorkshop] = useState(\"\");\n    const [img, setImg] = useState();\n\n    const style = {\n        'minWidth': '100%',\n        'maxWidth': '100%'\n    };\n\n    const arrayBufferToBase64 = (buffer) =>  {\n      var binary = '';\n      var bytes = [].slice.call(new Uint8Array(buffer));\n      bytes.forEach((b) => binary += String.fromCharCode(b));\n      const img_component = <img src={`data:image/png;base64,${window.btoa(binary)}`} style={style} />;\n      setImg(img_component);\n  };\n\n    const mapHandler = () => {\n        if(workshop != \"\"){\n            setDownload(true);\n            const data = {\n                \"name\" : workshop,\n                \"token\" : token\n            }\n            apiMapGet(data)\n            .then(res => {\n                    arrayBufferToBase64(res.data);\n                }\n            ).catch(\n                err => {\n                    setAlert({\n                        'open':true,\n                        'msg': \"[404] 無车间地图資料\",\n                        'type': 'error'\n                    })\n                }\n            ).finally(()=>{\n                setDownload(false);\n            })\n        }\n    }\n\n    return (\n        <ThemeProvider theme={darkTheme}>\n            <Card >\n                <CardHeader title=\"车间地图显示\" />\n                <Divider sx={{ borderBottomWidth: 3 }}/>\n                <CardContent>\n                    <Box\n                    sx={{\n                        display: 'flex',\n                        justifyContent: 'center',\n                        pt: 2\n                    }}\n                    >\n                    <MapIcon fontSize=\"large\" />\n                    </Box>\n                    <Box\n                    sx={{\n                        display: 'flex',\n                        justifyContent: 'center',\n                        pt: 2\n                    }}\n                    >   \n                        <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                            请选取要显示的车间\n                        </Typography>\n                    </Box>  \n                    <Box\n                    sx={{\n                        display: 'flex',\n                        justifyContent: 'center',\n                        pt: 2\n                    }}\n                    >\n                        <FormControl >\n                                <InputLabel id=\"demo-simple-select-label\">WorkShop</InputLabel>\n                                <WorkshopPicker token={token} workshop={workshop} setWorkshop={setWorkshop} />\n                                {/* <Select\n                                labelId=\"demo-simple-select-label\"\n                                id=\"demo-simple-select\"\n                                value={workshop}\n                                label=\"WorkShop\"\n                                onChange={handleChange}\n                                >\n                                    {\n                                        selectItem\n                                    }\n                                </Select> */}\n                                <LoadingButton\n                                    onClick={mapHandler}\n                                    endIcon={<ArrowCircleDownIcon color=\"white\"/>}\n                                    loading={downloading}\n                                    loadingPosition=\"end\"\n                                    variant=\"contained\"\n                                    sx={{m:3}}\n                                    color=\"primary\"\n                                    size=\"large\"\n                                >\n                                    显示\n                                </LoadingButton>\n                        </FormControl>   \n                    </Box>\n                    <Box\n                      sx={{\n                        display: 'flex',\n                        justifyContent: 'center',\n                    }}\n                    >\n                    <Container sx={{\n                    width: '-webkit-fill-available',\n                    overflowX:'scroll'}}>\n                        {img}\n                    </Container>\n                    </Box>\n                </CardContent>\n            </Card>\n        </ThemeProvider>\n    );\n}","import React, { useState, useEffect } from \"react\";\n\nimport {\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    Container\n} from '@mui/material';\n\nexport default function ExcelTableView({ keys, datas, id2words, ...rest }) {\n    const [table, setTable] = useState();\n\n    return (\n        <Table sx={{ minWidth: 1000, overflowX: 'scroll' }}>\n            <TableHead sx={{ background: \"#272d3a\" }}>\n                <TableRow >\n                    {\n                        id2words == null ?\n                            keys.map((key, index) => {\n                                return <TableCell sx={{ minWidth: \"100%\" }} key={index}>{key}</TableCell>\n                            }) : id2words.map((key, index) => {\n                                return <TableCell sx={{ minWidth: \"100%\" }} key={index}>{key}</TableCell>\n                            })\n                    }\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {\n                    datas.map((data, i) => {\n                        return (\n                            <TableRow key={i + 1}>\n                                {\n                                    keys.map((key, j) => {\n                                        if(data[key] === true){\n                                            return (\n                                                <TableCell sx={{ minWidth: \"100%\" }} key={key} >\n                                                    {\n                                                        \"是\"\n                                                    }\n                                                </TableCell>\n                                            )\n                                        }else if(data[key] === false){\n                                            return (\n                                                <TableCell sx={{ minWidth: \"100%\" }} key={key} >\n                                                    {\n                                                        \"否\"\n                                                    }\n                                                </TableCell>\n                                            )\n                                        }else{\n                                            return (\n                                                <TableCell sx={{ minWidth: \"100%\" }} key={key} >\n                                                    {\n                                                        data[key]\n                                                    }\n                                                </TableCell>\n                                            )\n                                        }\n                                    })\n                                }\n                            </TableRow>\n                        )\n                    })\n                }\n            </TableBody>\n\n        </Table>\n    );\n}","import React, { useState, useEffect } from \"react\";\n\nimport { Box, Dialog, DialogTitle, DialogContent, Button, DialogActions, TableBody\n} from '@mui/material';\n\nimport ExcelTableView from \"../components/excel-table-view\";\n\nexport function Parameter({csv_data, ...rest}) {\n  useEffect(()=> {\n    setData(csv_data);\n}, [])\n  const [data, setData] = useState();\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  \n  return (\n    <Box sx={{ pt: 3, display: 'flex',\n    justifyContent: 'center' }} >\n      <Button variant=\"contained\" onClick={handleClickOpen}>\n        查看 Parameter\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n        fullScreen\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n        参数\n        </DialogTitle>\n        <DialogContent>\n          {\n            data && \n            <ExcelTableView keys={data['keys']} datas={data['datas']}/>\n          }\n        </DialogContent>\n        <DialogActions sx={{ pt: 3, display: 'flex',\n          justifyContent: 'center' }}>\n            <Button onClick={handleClose} autoFocus variant=\"contained\" size=\"large\">\n            关闭\n            </Button>\n        </DialogActions>\n      </Dialog>\n      </Box>\n  );\n} \n","import React, { useState } from \"react\";\nimport { Container, Snackbar, Box, Typography } from \"@mui/material\";\nimport MuiAlert from '@mui/material/Alert';\n\nexport const AlertComponent = ({ open, setOpen, message, severity, duration }) => {\n  const [state, setState] = useState({\n    vertical: 'top',\n    horizontal: 'center',\n  });\n  const { vertical, horizontal } = state;\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') { return; }\n    setOpen(false);\n  }\n\n  const Alert = React.forwardRef(function Alert(props, ref) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n  });\n\n  return (\n    <Snackbar open={open} autoHideDuration={duration} onClose={handleClose} anchorOrigin={{ vertical, horizontal }} >\n      <Alert onClose={handleClose} severity={severity} sx={{ width: '100%' }}>\n        <Typography variant=\"h6\">\n          {String(message)}\n        </Typography>\n      </Alert>\n    </Snackbar>\n  );\n};\n\n\n","import { createSvgIcon } from '@mui/material/utils';\nimport React from \"react\";\nexport const Upload = createSvgIcon(\n  <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" >\n  <g>\n    <g>\n      <path d=\"m153.7,171.5l81.9-88.1v265.3c0,11.3 9.1,20.4 20.4,20.4 11.3,0 20.4-9.1 20.4-20.4v-265.3l81.9,88.1c7.7,8.3 20.6,8.7 28.9,1.1 8.3-7.7 8.7-20.6 1.1-28.9l-117.3-126.2c-11.5-11.6-25.6-5.2-29.9,0l-117.3,126.2c-7.7,8.3-7.2,21.2 1.1,28.9 8.2,7.6 21.1,7.2 28.8-1.1z\"/>\n      <path d=\"M480.6,341.2c-11.3,0-20.4,9.1-20.4,20.4V460H51.8v-98.4c0-11.3-9.1-20.4-20.4-20.4S11,350.4,11,361.6v118.8    c0,11.3,9.1,20.4,20.4,20.4h449.2c11.3,0,20.4-9.1,20.4-20.4V361.6C501,350.4,491.9,341.2,480.6,341.2z\"/>\n    </g>\n  </g>\n</svg>,\n  'Upload'\n);\n","import React, { useState, useEffect } from \"react\";\n\nimport { styled } from '@mui/material/styles';\nimport {\n    Alert,\n    Box,\n    Card,\n    CardContent,\n    CardHeader,\n    Divider,\n    TextField,\n    Typography,\n    createTheme,\n    ThemeProvider,\n    FormControl,\n    InputLabel,\n    Select,\n    MenuItem,\n} from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport CloudUploadOutlinedIcon from '@mui/icons-material/CloudUploadOutlined';\n\nimport ExcelTableView from \"../components/excel-table-view\";\nimport { Parameter } from \"../components/parameter\";\nimport { AlertComponent } from \"../components/alert-component\";\n\nimport { Upload } from '../icons/upload';\nimport { apiGetFileName } from \"../api.js\";\nimport { apiDevices, apiWorkShopList, apiDevicesData, apiGetSystemEnvSetting, apiPostSystemEnvSetting, apiGetSystemEnvSettingCount, apiPostSystemEnvSettingCount } from \"../api.js\";\n\nconst CONTENT = {\n    id: \"装置 ID\",\n    project: \"专案\",\n    process: \"制程段\",\n    line: \"产线\",\n    device_name: \"装置代号\",\n    device_cname: \"装置名称\",\n    workshop: \"车间\",\n    x_axis: \"X 轴座标\",\n    y_axis: \"Y 轴座标\",\n    is_rescue: \"是否为救援站\",\n    sop_link: \"SOP 链接\"\n}\n\nconst darkTheme = createTheme({\n    palette: {\n        mode: 'dark',\n        primary: {\n            main: '#5048E5',\n            light: '#828DF8',\n            dark: '#7582EB',\n            contrastText: '#FFFFFF'\n        },\n        background: {\n            default: '#1a1e2b',\n            paper: '#1a1e2b',\n        },\n        text: {\n            primary: '#fff',\n        }\n    },\n});\n\nconst Input = styled('input')({\n    display: 'none',\n});\n\nexport default function DevicesUpload({ token, ...rest }) {\n    const [dataStatus, setDataStatus] = useState(\"No File Chosen\");\n    const [uploading, setUpload] = useState(false);\n    const [loading, setLoading] = useState(false);\n    // init workshop\n    const [selectItem, setSelectItem] = useState(\"\");\n    const [workshop, setWorkshop] = useState(\"\");\n    const [keys, setKeys] = useState();\n    const [id2words, setId2Word] = useState();\n    const [datas, setDatas] = useState();\n\n    const [parameter, setParameter] = useState();\n\n    const [alert, setAlert] = useState(false);\n    const [errmsg, setErrMsg] = useState();\n\n    const [rescueStatus, setRescueStatus] = useState(\"\");\n    const [rescueCount, setRescueCount] = useState(\"\");\n    const [rescueTime, setRescueTime] = useState(\"\");\n\n    const [open, setOpen] = useState(false);\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    useEffect(() => {\n        updateData();\n    }, [])\n\n    useEffect(() => {\n        if (errmsg) {\n            setAlert(true);\n        }\n    }, [errmsg])\n\n    const updateData = () => {\n        setUpload(false);\n        setWorkshop(null);\n        setKeys(null);\n        setDatas(null);\n        // 先抓當前救援站數量\n        apiGetSystemEnvSettingCount({ \"key\": \"rescue_count\", token: token }).then(res => {\n            setRescueCount(() => {\n                return (res.data.value)\n            })\n        });\n        // 抓救援站設定\n        apiGetSystemEnvSetting({ \"key\": \"auto_rescue\", token: token }).then(res => {\n            if (res.data.value == \"1\") {\n                setRescueStatus(() => {\n                    return ('自动')\n                })\n            } else {\n                setRescueStatus(() => {\n                    return ('手动')\n                })\n            }\n        });\n        apiWorkShopList(token).then(res => {\n            setSelectItem(res.data.map(name => {\n                return (<MenuItem key={name} value={name}>{name}</MenuItem>)\n            }))\n        }).catch(err => {\n        });\n    }\n\n    // useEffect(() => {\n    //     handleOnClickGetEnv();\n    //     handleOnClickGetCount();\n    // }, [])\n\n    // const handleOnClickGetEnv= () => {\n    //     const data = {\n    //         \"key\": \"auto_rescue\",\n    //         \"token\": token\n    //     }\n    //     apiGetSystemEnvSetting(data).then(res => {\n    //         if (res.data.value == \"1\") {\n    //             setRescueStatus(() => {\n    //                 return ('自动')\n    //             })\n    //         } else {\n    //             setRescueStatus(() => {\n    //                 return ('手动')\n    //             })\n    //         }\n    //     });\n    // }\n    // const handleOnClickGetCount = () => {\n    //     const data = {\n    //         \"key\": \"rescue_count\",\n    //         \"token\": token\n    //     }\n    //     apiGetSystemEnvSettingCount(data).then(res => {\n    //         setRescueCount(() => {\n    //             return (res.data.value)\n    //         })\n    //     });\n    // }\n\n    const fetchData = (name) => {\n        let data = {\n            name: name,\n            token: token\n        }\n        apiDevicesData(data).then(res => {\n\n            let keys = Object.keys(res.data[0]);\n            let newKeys = []\n            keys.map(key => {\n                newKeys.push(CONTENT[key]);\n            })\n            setKeys(keys);\n            setId2Word(newKeys);\n            setDatas(res.data);\n        }).catch(err => {\n            setErrMsg(err.response.statusText);\n        }).finally(() => {\n            setUpload(false);\n        })\n    }\n    const handleWorkshopChange = (event) => {\n        setWorkshop(event.target.value);\n        fetchData(event.target.value);\n    }\n\n    const handleFileChange = (e) => {\n        if (e.target.files.length > 0) {\n\n            setDataStatus(e.target.files[0].name);\n\n            setUpload(true);\n\n            const file = e.target.files[0];\n            let formData = new FormData();\n            formData.append(\"file\", file);\n            formData.append(\"clear_all\", true);\n\n            let data = {};\n            data['token'] = token;\n            data['file'] = formData;\n\n            apiDevices(data).then(res => {\n                if (res.status === 201) {\n                    setUpload(false);\n                    updateData();\n                    let rawdata = res.data['parameter'].split(/\\n/);\n                    let processed_data = [];\n                    let keys = []\n                    rawdata.map((line, i) => {\n                        if (i == 0) {\n                            keys = line.split(',');\n                            keys[0] = 'idx';\n                        } else {\n                            let temp = line.split(',');\n                            let obj = {};\n                            temp.map((item, j) => {\n                                obj[keys[j]] = temp[j];\n                            })\n                            processed_data.push(obj);\n                        }\n                    });\n                    let csv_data = {\n                        'keys': keys,\n                        'datas': processed_data\n                    }\n\n                    setParameter(csv_data);\n                }\n                handleOpen()\n            }).catch(err => {\n                console.log(err);\n                setErrMsg(\"档案格式有误, 请重新上传！\");\n                updateData();\n            })\n        } else {\n            setDataStatus(\"No File Chosen\");\n        }\n    }\n\n    const [deviceName, setDeviceName] = useState();\n\n    useEffect(() => {\n        handleOnClick();\n    })\n\n    const updateFileName = (data) => {\n        apiGetFileName(data).then(res => {\n            // console.log(res.data)\n            setDeviceName(res.data.devices);\n            // setAlert({\n            //     'open': true,\n            //     'msg': \"更新成功\",\n            //     'type': 'success'\n            // });\n        })\n        // .catch(err => {\n        //     console.log(err)\n        //     setAlert({\n        //         'open': true,\n        //         'msg': \"错误代码：\" + err.response,\n        //         'type': 'error'\n        //     });\n        //     console.log(err);\n        // }).finally(() => {\n        //     setLoading(false);\n        // });\n    }\n    const handleOnClick = () => {\n        const data = {\n            \"token\": token,\n        }\n        updateFileName(data);\n    }\n\n    // useEffect(() => {\n    //     valueChange();\n    // })\n\n    // const valueChange = () => {\n    //     const data = {\n    //         token: token,\n    //         key: \"auto_rescue\",\n    //     }\n    //     apiGetSystemEnvSetting(data).then(res => {\n    //         setRescueValue(res.data.value)\n    //         console.log('接到的Settings value')\n    //         console.log(rescueValue)\n    //         if (res.data.value == \"0\") {\n    //             setRescueStatus(\"手動\")\n    //         }\n    //         else if (res.data.value == \"1\") {\n    //             setRescueStatus(\"自動\")\n    //         }\n    //     })\n    // }\n\n    // useEffect(() => {\n    //     // Just run the first time\n    //     const data = {\n    //         \"token\": token,\n    //         \"key\": \"auto_rescue\"\n    //     }\n    //     apiGetSystemEnvSetting(data, res => {\n    //         console.log(res.data)\n    //         if (res.data.value == \"1\") {\n    //             setRescueStatus('自动')\n    //         } else {\n    //             setRescueStatus('手动')\n    //         }\n    //     })\n    // })\n\n    // 設定救援站設定\n    const handleOnClickSetting = () => {\n        let temp = \"\"\n        if (rescueStatus == \"自动\") {\n            temp = \"0\"\n        } else {\n            temp = \"1\"\n        }\n        const data = {\n            \"token\": token,\n            \"key\": 'auto_rescue',\n            \"value\": temp\n        }\n        apiPostSystemEnvSetting(data).then(res => {\n            if (res.data.value == \"1\") {\n                setRescueStatus(() => {\n                    return ('自动')\n                })\n                handleOpen()\n            } else {\n                setRescueStatus(() => {\n                    return ('手动')\n                })\n                handleOpen()\n            }\n        }).catch(err => {\n            console.log(err);\n            setErrMsg(\"更新失败！\");\n        })\n        // apiGetSystemEnvSetting(data).then(res => {\n        //     if (res.data.value == '0') {\n        //         data.value = '1'\n        //         apiPostSystemEnvSetting(data)\n        //         console.log('我要 Post 內容')\n        //         console.log(data.value)\n        //         console.log(data.token)\n        //         setRescueStatus('自动')\n        //     }\n        //     else if (res.data.value == '1') {\n        //         data.value = '0'\n        //         apiPostSystemEnvSetting(data)\n        //         console.log('我要 Post 內容')\n        //         console.log(data.value)\n        //         setRescueStatus('手动')\n        //     }\n        // })\n    }\n\n    // 設定救援站數量\n    const handleOnClickSettingQuantity = () => {\n        const data = {\n            \"token\": token,\n            \"key\": 'rescue_count',\n            \"value\": rescueCount\n        }\n        data.value = document.getElementById('quantity').value;\n        apiPostSystemEnvSettingCount(data).catch(err => {\n            console.log(err);\n            setErrMsg(\"更新失败！\");\n        })\n        handleOpen()\n        setRescueCount(document.getElementById('quantity').value)\n    }\n\n    // 設定救援站區間\n    // const handleOnClickSettingTime = () => {\n    //     const data = {\n    //         \"token\": token,\n    //         \"key\": 'rescue_count',\n    //         \"value\": rescueCount,\n    //         \"start\": 0,\n    //         \"end\": 0\n    //     }\n    //     data.start = document.getElementById('start').value;\n    //     data.end = document.getElementById('end').value;\n    //     apiPostSystemEnvSettingCount(data).catch(err => {\n    //         console.log(err);\n    //         setErrMsg(\"更新失败！\");\n    //     })\n    //     handleOpen()\n    //     setRescueTime(document.getElementById('start').value + document.getElementById('end').value)\n    // }\n\n    return (\n        <ThemeProvider theme={darkTheme}>\n            <AlertComponent open={alert} setOpen={setAlert} message={errmsg} severity={\"error\"} />\n            <AlertComponent open={open} setOpen={setOpen} message=\"更新成功\" severity={\"success\"} />\n            <Card >\n                <CardHeader title=\"车间 Layout 座标表上传\" />\n                <Divider sx={{ borderBottomWidth: 3 }} />\n                <CardContent>\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n\n                        }}\n                    >\n                        <Upload fontSize=\"large\" />\n                    </Box>\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <label htmlFor=\"contained-button-file\">\n                            <Input type=\"file\" accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\" id=\"contained-button-file\" onChange={handleFileChange} />\n                            <LoadingButton\n                                color=\"success\"\n                                variant=\"contained\"\n                                size=\"large\"\n                                component=\"span\"\n                                startIcon={<CloudUploadOutlinedIcon sx={{ mr: 1 }} />}\n                                sx={{\n                                    borderRadius: 4,\n                                    minWidth: 200,\n                                    justifyContent: 'center',\n                                    letterSpacing: 3,\n                                }}\n                                type=\"input\"\n                                loading={uploading}\n                            >\n                                {\n                                    uploading ? \"上传中...\" : \"选择档案\"\n                                }\n                            </LoadingButton>\n                        </label>\n                    </Box>\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                            {dataStatus}\n                        </Typography>\n                    </Box>\n                    {\n                        parameter && (\n                            <Box\n                                sx={{\n                                    display: 'flex',\n                                    justifyContent: 'center',\n                                    pt: 2\n                                }}\n                            >\n                                <Divider sx={{ borderBottomWidth: 3 }} />\n                                <Parameter csv_data={parameter} />\n                            </Box>\n                        )\n                    }\n                    <Divider sx={{ borderBottomWidth: 3, m: 3 }} />\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <Typography\n                            color=\"textSecondary\"\n                            gutterBottom\n                            variant=\"overline\"\n                            fontSize=\"large\"\n                        >\n                            目前救援站狀態:{rescueStatus}\n                        </Typography>\n                    </Box>\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <LoadingButton\n                            variant=\"contained\"\n                            size=\"large\"\n                            component=\"span\"\n                            sx={{\n                                borderRadius: 4,\n                                justifyContent: 'center',\n                                letterSpacing: 3,\n                                mt: 2\n                            }}\n                            loading={loading}\n                            onClick={handleOnClickSetting}\n                        >\n                            救援站开关\n                        </LoadingButton>\n                    </Box>\n                    <Divider sx={{ borderBottomWidth: 3, m: 3 }} />\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <Typography\n                            color=\"textSecondary\"\n                            gutterBottom\n                            variant=\"overline\"\n                            fontSize=\"large\"\n                        >\n                            目前救援站数量:{rescueCount}\n                        </Typography>\n                    </Box>\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <TextField\n                            label=\"请输入救援站数量\"\n                            margin=\"normal\"\n                            name=\"quantity\"\n                            id=\"quantity\"\n                            variant=\"outlined\"\n                        />\n                        <LoadingButton\n                            variant=\"contained\"\n                            size=\"medium\"\n                            component=\"span\"\n                            sx={{\n                                borderRadius: 4,\n                                justifyContent: 'center',\n                                letterSpacing: 3,\n                                mt: 2,\n                                ml: 2\n                            }}\n                            loading={loading}\n                            onClick={handleOnClickSettingQuantity}\n                        >\n                            更新数量\n                        </LoadingButton>\n                    </Box>\n                    {/* <Divider sx={{ borderBottomWidth: 3, m: 3 }} />\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <Typography\n                            color=\"textSecondary\"\n                            gutterBottom\n                            variant=\"overline\"\n                            fontSize=\"large\"\n                        >\n                            目前救援站區間:{rescueTime}\n                        </Typography>\n                    </Box>\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <TextField\n                            label=\"请输入救援站區間\"\n                            margin=\"normal\"\n                            name=\"start\"\n                            id=\"start\"\n                            variant=\"outlined\"\n                        />\n                        <TextField\n                            label=\"请输入救援站區間\"\n                            margin=\"normal\"\n                            name=\"end\"\n                            id=\"end\"\n                            variant=\"outlined\"\n                        />\n                        <LoadingButton\n                            variant=\"contained\"\n                            size=\"medium\"\n                            component=\"span\"\n                            sx={{\n                                borderRadius: 4,\n                                justifyContent: 'center',\n                                letterSpacing: 3,\n                                mt: 2,\n                                ml: 2\n                            }}\n                            loading={loading}\n                            onClick={handleOnClickSettingTime}\n                        >\n                            更新區間\n                        </LoadingButton>\n                    </Box> */}\n                    <Divider sx={{ borderBottomWidth: 3, m: 3 }} />\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <LoadingButton\n                            variant=\"contained\"\n                            size=\"large\"\n                            component=\"span\"\n                            sx={{\n                                borderRadius: 4,\n                                justifyContent: 'center',\n                                letterSpacing: 3,\n                                mt: 2\n                            }}\n                            loading={loading}\n                            onClick={handleOnClick}\n                        >\n                            更新资料\n                        </LoadingButton>\n                    </Box>\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <Typography\n                            color=\"textSecondary\"\n                            gutterBottom\n                            variant=\"overline\"\n                            fontSize=\"large\"\n                        >\n                            档案名称:{deviceName}\n                        </Typography>\n                    </Box>\n                    {\n                        selectItem &&\n                        <Box\n                            sx={{\n                                display: 'flex',\n                                justifyContent: 'center',\n                                m: 2\n                            }}\n                        >\n                            <Typography sx={{ m: 1 }}>\n                                现有资料 :\n                            </Typography>\n                            <FormControl sx={{ width: 300 }}>\n                                <InputLabel id=\"workshop-label\">Workshop</InputLabel>\n                                <Select\n                                    labelId=\"workshop-label\"\n                                    id=\"workshop-select\"\n                                    value={workshop == null ? '' : workshop}\n                                    onChange={handleWorkshopChange}\n                                >\n                                    {\n                                        selectItem\n                                    }\n                                </Select>\n                            </FormControl>\n                        </Box>\n                    }\n                    <Box>\n                        {\n                            keys && datas && id2words &&\n                            <ExcelTableView keys={keys} datas={datas} id2words={id2words} />\n                        }\n                    </Box>\n                </CardContent>\n            </Card>\n        </ThemeProvider>\n    );\n}","import React, { useState, useEffect } from \"react\";\n\nimport {\n  Table, TableRow, TableHead, TableCell, Box, Card, CardContent, Dialog, DialogTitle, DialogContent, Button, DialogActions, TableBody\n} from '@mui/material';\n\nconst CONTENT = {\n  project: \"专案\",\n  process: \"制程段\",\n  device_name: \"装置代号\",\n  line: \"产线\",\n  exp: \"经验值\"\n}\n\nexport function WorkExperiences({ list_data, ...rest }) {\n  useEffect(() => {\n    let keys = [\"project\", \"process\", \"device_name\", \"line\", \"exp\"]\n    const display = (\n      <Card sx={{\n        m: 1,\n      }}\n        key=\"ex-card\">\n        <CardContent >\n          <Table>\n            <TableHead sx={{ background: \"#272d3a\" }}>\n              <TableRow>\n                {\n                  keys.map((key, index) => {\n                    return <TableCell key={index}>{CONTENT[key]}</TableCell>\n                  })\n                }\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {\n                list_data.map(\n                  exp => {\n                    return (\n                      <TableRow>\n                        {\n                          keys.map((key, index) => {\n                            return <TableCell key={exp[key]}>{exp[key]}</TableCell>\n                          })\n                        }\n                      </TableRow>\n                    )\n                  })\n              }\n            </TableBody>\n          </Table>\n        </CardContent>\n      </Card>\n    )\n    setData(display);\n  }, [])\n  const [data, setData] = useState();\n  const [open, setOpen] = useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Box sx={{ pt: 3, minWidth: '100%' }}>\n      <Button variant=\"contained\" onClick={handleClickOpen}>\n        查看\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n        sx={{ minWidth: '900px' }}\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          经验\n        </DialogTitle>\n        <DialogContent>\n          {\n            data\n          }\n        </DialogContent>\n        <DialogActions >\n          <Button onClick={handleClose} autoFocus variant=\"contained\">\n            关闭\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n} \n","import React, { useState, useEffect } from \"react\";\n\nimport { styled } from '@mui/material/styles';\nimport {\n    Box,\n    Card,\n    CardContent,\n    CardHeader,\n    Divider,\n    Typography,\n    createTheme,\n    ThemeProvider,\n    Table,\n    TableHead,\n    TableBody,\n    TableRow,\n    TableCell,\n    FormControl,\n    InputLabel,\n    Button\n} from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport CloudUploadOutlinedIcon from '@mui/icons-material/CloudUploadOutlined';\n\nimport { WorkExperiences } from \"../components/worker-experiences\";\nimport { Parameter } from \"../components/parameter\";\nimport { AlertComponent } from \"../components/alert-component\";\nimport { WorkshopPicker } from \"../components/workshop-picker.js\";\n\nimport { Upload } from '../icons/upload';\n\nimport { apiGetFileName } from \"../api.js\";\nimport { apiWorkerinfos, apiWorkerAll } from \"../api.js\";\n\nconst CONTENT = {\n    badge: \"员工 ID\",\n    username: \"姓名\",\n    workshop: \"车间\",\n    level: \"层级\",\n    shift: \"班别\",\n    superior: \"领导\",\n    experiences: \"经验\",\n}\n\nconst darkTheme = createTheme({\n    palette: {\n        mode: 'dark',\n        primary: {\n            main: '#5048E5',\n            light: '#828DF8',\n            dark: '#7582EB',\n            contrastText: '#FFFFFF'\n        },\n        background: {\n            default: '#1a1e2b',\n            paper: '#1a1e2b',\n        },\n        text: {\n            primary: '#fff',\n        }\n    },\n});\n\nconst infotable = (datas) => {\n    console.log(datas)\n    let keys = [\"badge\", \"username\", \"workshop\", \"level\", \"shift\", \"superior\", \"experiences\"]\n    return (\n        <div>\n            <Table >\n                <TableHead>\n                    <TableRow>\n                        <TableCell>\n                            日班\n                        </TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableHead sx={{ background: \"#272d3a\" }}>\n                    <TableRow>\n                        {\n                            keys.map((key, index) => {\n                                return <TableCell key={index}>{CONTENT[key]}</TableCell>\n                            })\n                        }\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {\n                        datas['day_shift'].map((data, i) => {\n                            return (\n                                <TableRow key={i + 1}>\n                                    {\n                                        keys.map((key, j) => {\n                                            if (key == \"shift\") {\n                                                return (\n                                                    <TableCell key={key}>\n                                                        {\n                                                            \"日\"\n                                                        }\n                                                    </TableCell>\n                                                )\n                                            }\n                                            else if (key == \"experiences\") {\n                                                return (\n                                                    <TableCell key={`${key}_btn`}>\n                                                        {\n                                                            <WorkExperiences list_data={data[\"experiences\"]}>Experiences</WorkExperiences>\n                                                        }\n                                                    </TableCell>\n                                                )\n                                            }\n                                            else {\n                                                return (\n                                                    <TableCell key={key}>\n                                                        {\n                                                            data[key]\n                                                        }\n                                                    </TableCell>\n                                                )\n                                            }\n\n                                        })\n                                    }\n                                </TableRow>\n                            )\n                        })\n                    }\n                </TableBody>\n            </Table>\n            <Divider sx={{ borderBottomWidth: 3, m: 3 }} />\n            <Table >\n                <TableHead>\n                    <TableRow>\n                        <TableCell>\n                            夜班\n                        </TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableHead sx={{ background: \"#272d3a\" }}>\n                    <TableRow >\n                        {\n                            keys.map((key, index) => {\n                                return <TableCell key={index}>{CONTENT[key]}</TableCell>\n                            })\n                        }\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {\n                        datas['night_shift'].map((data, i) => {\n                            return (\n                                <TableRow key={i + 1}>\n                                    {\n                                        keys.map((key, j) => {\n                                            if (key == \"shift\") {\n                                                return (\n                                                    <TableCell key={key}>\n                                                        {\n                                                            \"夜\"\n                                                        }\n                                                    </TableCell>\n                                                )\n                                            }\n                                            else if (key == \"experiences\") {\n                                                return (\n                                                    <TableCell key={`${key}_btn`}>\n                                                        {\n                                                            <WorkExperiences list_data={data[\"experiences\"]}>Experiences</WorkExperiences>\n                                                        }\n                                                    </TableCell>\n                                                )\n                                            }\n                                            else {\n                                                return (\n                                                    <TableCell key={key}>\n                                                        {\n                                                            data[key]\n                                                        }\n                                                    </TableCell>\n                                                )\n                                            }\n\n                                        })\n                                    }\n                                </TableRow>\n                            )\n                        })\n                    }\n                </TableBody>\n            </Table>\n        </div>\n    )\n}\n// Style component\nconst Input = styled('input')({\n    display: 'none',\n});\n\nexport default function WorkerinfoUpload({ token, setAlert, ...rest }) {\n    const [workerFile, setWorkFile] = useState();\n    const [deviceFile, setDeviceFile] = useState();\n\n\n    const [dataStatus, setDataStatus] = useState(\"\");\n    const [uploading, setUpload] = useState(false);\n    const [loading, setLoading] = useState(false);\n\n    const [data, setData] = useState();\n\n    const [parameter, setParameter] = useState();\n\n    const [workshop, setWorkshop] = useState(\"\");\n\n    useEffect(() => {\n        //UpdateData();\n        if (workshop != \"\") {\n            UpdateData();\n        }\n    }, [workshop])\n    String.prototype.replaceAt = function (index, char) {\n        var a = this.split(\"\");\n        a[index] = char;\n        return a.join(\"\");\n    }\n\n    const UpdateData = () => {\n        setDataStatus(\"Loading Data ...\");\n        let data = {\n            'token': token,\n            'workshop': workshop\n        };\n\n        apiWorkerAll(data).then(res => {\n            setData(res.data);\n            console.log(res.data);\n        }).catch(err => {\n            console.log(err);\n            setAlert({\n                'open': true,\n                'msg': \"資料载入異常\",\n                'type': 'error'\n            });\n        }).finally(() => {\n            setDataStatus(\"\");\n        })\n    }\n\n    const parseParm = (str) => {\n        let rawdata = str.split(/\\n/);\n        let processed_data = [];\n        let keys = []\n        // Data processing\n        rawdata.map((line, i) => {\n            if (i == 0) {\n                keys = line.split(',');\n                keys[0] = 'idx';\n            } else {\n                let flag = false;\n                for (let i = 0; i < line.length; i++) {\n                    if (line[i] == '(') {\n                        flag = true;\n                    }\n                    if (flag == true) {\n                        if (line[i] == ',') continue;\n                        if (line[i] == ')') flag = false;\n                    } else {\n                        if (line[i] == ',') line = line.replaceAt(i, '@');\n                    }\n                }\n                let temp = line.split('@');\n                let obj = {}\n                temp.map((item, j) => {\n                    obj[keys[j]] = temp[j];\n                })\n                processed_data.push(obj);\n            }\n\n        })\n        let csv_data = {\n            'keys': keys,\n            'datas': processed_data\n        }\n        setParameter(csv_data);\n    }\n\n    const workerFileChangeHandler = (event) => {\n        if (event.target.files.length > 0) {\n            setWorkFile(event.target.files[0]);\n        }\n    };\n    const deviceFileChangeHandler = (event) => {\n        if (event.target.files.length > 0) {\n            setDeviceFile(event.target.files[0]);\n        }\n    };\n    const postData = (data) => {\n        apiWorkerinfos(data).then(res => {\n            parseParm(res.data);\n            setAlert({\n                'open': true,\n                'msg': \"上传成功\",\n                'type': 'success'\n            });\n        }).catch(err => {\n            console.log(err);\n            setAlert({\n                'open': true,\n                'msg': \"上传錯誤\",\n                'type': 'error'\n            });\n        }).finally(() => {\n            setUpload(false);\n            setWorkFile(null);\n            setDeviceFile(null);\n        });\n    }\n    const handleUpload = () => {\n        if (workerFile == null) {\n            setAlert({\n                'open': true,\n                'msg': \"请完整选取档案\",\n                'type': 'error'\n            });\n        }\n        else {\n            setUpload(true);\n            let fd = new FormData();\n            fd.append(\"worker_file\", workerFile);\n            //fd.append(\"device_file\", deviceFile)\n            let data = {\n                'token': token,\n                'file': fd\n            };\n            postData(data);\n        }\n    }\n\n    const [workerinfoName, setWorkerinfoName] = useState();\n\n    useEffect(() => {\n        handleOnClick();\n    })\n\n    const updateFileName = (data) => {\n        apiGetFileName(data).then(res => {\n            console.log(res.data)\n            setWorkerinfoName(res.data.worker);\n            // setAlert({\n            //     'open': true,\n            //     'msg': \"更新成功\",\n            //     'type': 'success'\n            // });\n        })\n        // .catch(err => {\n        //     console.log(err)\n        //     setAlert({\n        //         'open': true,\n        //         'msg': \"错误代码：\" + err.response,\n        //         'type': 'error'\n        //     });\n        //     console.log(err);\n        // }).finally(() => {\n        //     setLoading(false);\n        // });\n    }\n    const handleOnClick = () => {\n        const data = {\n            token: token,\n        }\n        updateFileName(data);\n    }\n\n    return (\n        <ThemeProvider theme={darkTheme}>\n            <Card >\n                <CardHeader title=\"员工专职表上传\" />\n                <Divider sx={{ borderBottomWidth: 3 }} />\n                <CardContent>\n                    {/* icon */}\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n\n                        }}\n                    >\n                        <Upload fontSize=\"large\" />\n                    </Box>\n                    {/* 員工專職 */}\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <label htmlFor=\"contained-button-work-file\">\n                            <Input type=\"file\" accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\" id=\"contained-button-work-file\" onChange={workerFileChangeHandler} />\n                            <LoadingButton\n                                color=\"success\"\n                                variant=\"contained\"\n                                size=\"large\"\n                                component=\"span\"\n                                startIcon={<CloudUploadOutlinedIcon sx={{ mr: 1 }} />}\n                                sx={{\n                                    borderRadius: 4,\n                                    minWidth: 200,\n                                    justifyContent: 'center',\n                                    letterSpacing: 3,\n                                }}\n                                type=\"input\"\n                                loading={uploading}\n                            >\n                                {\n                                    workerFile ? \"已载入\" : \"选择员工专职表\"\n                                }\n                            </LoadingButton>\n                        </label>\n                    </Box>\n                    {/* 座標表 */}\n                    {/* <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <label htmlFor=\"contained-button-device-file\">\n                            <Input type=\"file\" accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\" id=\"contained-button-device-file\" onChange={deviceFileChangeHandler} />\n                            <LoadingButton\n                                color=\"success\"\n                                variant=\"contained\"\n                                size=\"large\"\n                                component=\"span\"\n                                startIcon={<CloudUploadOutlinedIcon sx={{ mr: 1 }} />}\n                                sx={{\n                                    borderRadius: 4,\n                                    minWidth: 200,\n                                    justifyContent: 'center',\n                                    letterSpacing: 3,\n                                }}\n                                type=\"input\"\n                                loading={uploading}\n                            >\n                                {\n                                    deviceFile ? \"已载入\" : \"选择座标表档案\"\n                                }\n                            </LoadingButton>\n                        </label>\n                    </Box> */}\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <LoadingButton\n                            variant=\"contained\"\n                            size=\"large\"\n                            component=\"span\"\n                            sx={{\n                                borderRadius: 4,\n                                justifyContent: 'center',\n                                letterSpacing: 3,\n                                mt: 4\n                            }}\n                            loading={uploading}\n                            onClick={handleUpload}\n                        >\n                            上传资料\n                        </LoadingButton>\n                    </Box>\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                            {dataStatus}\n                        </Typography>\n                    </Box>\n                    <Divider sx={{ borderBottomWidth: 3, m: 3 }} />\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <LoadingButton\n                            variant=\"contained\"\n                            size=\"large\"\n                            component=\"span\"\n                            sx={{\n                                borderRadius: 4,\n                                justifyContent: 'center',\n                                letterSpacing: 3,\n                                mt: 2\n                            }}\n                            loading={loading}\n                            onClick={handleOnClick}\n                        >\n                            更新资料\n                        </LoadingButton>\n                    </Box>\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <Typography\n                            color=\"textSecondary\"\n                            gutterBottom\n                            variant=\"overline\"\n                            fontSize=\"large\"\n                        >\n                            档案名称:{workerinfoName}\n                        </Typography>\n                    </Box>\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            m: 2\n                        }}\n                    >\n                        <Typography sx={{ m: 1 }}>\n                            现有资料 :\n                        </Typography>\n                        <FormControl >\n                            <InputLabel id=\"demo-simple-select-label\">WorkShop</InputLabel>\n                            <WorkshopPicker token={token} workshop={workshop} setWorkshop={setWorkshop} />\n                        </FormControl>\n                    </Box>\n                    {\n                        parameter && (\n                            <Box\n                                sx={{\n                                    display: 'flex',\n                                    justifyContent: 'center',\n                                    pt: 2\n                                }}\n                            >\n                                <Parameter csv_data={parameter} />\n                            </Box>\n                        )\n                    }\n                    <Box>\n                        {\n                            data && infotable(data)\n                        }\n                    </Box>\n                </CardContent>\n            </Card>\n        </ThemeProvider>\n    )\n}","import React, { useState, useEffect, useReducer } from \"react\";\nimport { styled } from '@mui/material/styles';\nimport {\n    Box,\n    Card,\n    CardContent,\n    CardHeader,\n    Divider,\n    Typography,\n    createTheme,\n    ThemeProvider,\n} from '@mui/material';\n\nimport LoadingButton from '@mui/lab/LoadingButton';\n\nimport CloudUploadOutlinedIcon from '@mui/icons-material/CloudUploadOutlined';\nimport { Upload } from '../icons/upload';\n\nimport { apiMapPost } from \"../api.js\";\nimport { apiGetFileName } from \"../api.js\";\n\nimport { AlertComponent } from \"../components/alert-component\";\n\n\nconst darkTheme = createTheme({\n    palette: {\n        mode: 'dark',\n        primary: {\n            main: '#5048E5',\n            light: '#828DF8',\n            dark: '#7582EB',\n            contrastText: '#FFFFFF'\n        },\n        background: {\n            default: '#1a1e2b',\n            paper: '#1a1e2b',\n        },\n        text: {\n            primary: '#fff',\n        }\n    },\n});\n\nconst Input = styled('input')({\n    display: 'none',\n});\n\nexport default function MapUpload({ token, ...rest }) {\n    const [dataStatus, setDataStatus] = useState(\" No File Chosen\");\n    const [uploading, setUpload] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [errmsg, setErrMsg] = useState();\n    const [alert, setAlert] = useState(false);\n\n    useEffect(() => {\n        if (errmsg) {\n            setAlert(true);\n        }\n    }, [errmsg])\n\n    const handleFileChange = (e) => {\n        if (e.target.files.length > 0) {\n            let filename = e.target.files[0].name;\n            let regex = filename.match(/Layout_(.+)_([0-9]+)/);\n\n            if (regex && regex.length == 3) {\n                let filename = regex[1];\n                setDataStatus(filename);\n\n                setUpload(true);\n\n                const file = e.target.files[0];\n                let formData = new FormData();\n                formData.append(\"image\", file);\n\n                let data = {};\n                data['token'] = token;\n                data['file'] = formData;\n                data['name'] = filename;\n\n                apiMapPost(data).then(res => {\n                    setDataStatus(\"上传完毕\");\n                }).catch(err => {\n                    // 後端沒有擋擋名錯誤\n                    setErrMsg(err.response.statusText);\n                }).finally(() => {\n                    setUpload(false);\n                })\n\n            } else {\n                setErrMsg(\"档名有误, 请重新上传！\");\n                document.getElementById('contained-button-file').value = null;\n                console.log(document.getElementById('contained-button-file').value);\n            }\n        } else {\n            setDataStatus(\"No File Chosen\");\n        }\n    }\n\n    const [mapName, setMapName] = useState();\n\n    useEffect(() => {\n        handleOnClick();\n    })\n\n    const updateFileName = (data) => {\n        apiGetFileName(data).then(res => {\n            console.log(res.data)\n            setMapName(res.data.images);\n            // setAlert({\n            //     'open': true,\n            //     'msg': \"更新成功\",\n            //     'type': 'success'\n            // });\n        })\n        // .catch(err => {\n        //     console.log(err)\n        //     setAlert({\n        //         'open': true,\n        //         'msg': \"错误代码：\" + err.response,\n        //         'type': 'error'\n        //     });\n        //     console.log(err);\n        // }).finally(() => {\n        //     setLoading(false);\n        // });\n    }\n    const handleOnClick = () => {\n        const data = {\n            token: token,\n        }\n        updateFileName(data);\n    }\n\n    return (\n        <ThemeProvider theme={darkTheme}>\n            <AlertComponent open={alert} setOpen={setAlert} message={errmsg} severity={\"error\"} />\n            <Card >\n                <CardHeader title=\"车间 Layout 图上传\" />\n                <Divider sx={{ borderBottomWidth: 3 }} />\n                <CardContent>\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n\n                        }}\n                    >\n                        <Upload fontSize=\"large\" />\n                    </Box>\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <label htmlFor=\"contained-button-file\">\n                            <Input type=\"file\" accept=\"image/png\" id=\"contained-button-file\" onChange={handleFileChange} value='' />\n                            <LoadingButton\n                                color=\"success\"\n                                variant=\"contained\"\n                                size=\"large\"\n                                component=\"span\"\n                                startIcon={<CloudUploadOutlinedIcon sx={{ mr: 1 }} />}\n                                sx={{\n                                    borderRadius: 4,\n                                    minWidth: 200,\n                                    justifyContent: 'center',\n                                    letterSpacing: 3,\n                                }}\n                                type=\"input\"\n                                loading={uploading}\n                            >\n                                {\n                                    uploading ? \"上传中...\" : \"选择档案\"\n                                }\n                            </LoadingButton>\n                        </label>\n                    </Box>\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                            {dataStatus}\n                        </Typography>\n                    </Box>\n                    <Divider sx={{ borderBottomWidth: 3, m: 3 }} />\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <LoadingButton\n                            variant=\"contained\"\n                            size=\"large\"\n                            component=\"span\"\n                            sx={{\n                                borderRadius: 4,\n                                justifyContent: 'center',\n                                letterSpacing: 3,\n                                mt: 2\n                            }}\n                            loading={loading}\n                            onClick={handleOnClick}\n                        >\n                            更新资料\n                        </LoadingButton>\n                    </Box>\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            pt: 2\n                        }}\n                    >\n                        <Typography\n                            color=\"textSecondary\"\n                            gutterBottom\n                            variant=\"overline\"\n                            fontSize=\"large\"\n                        >\n                            档案名称:{mapName}\n                        </Typography>\n                    </Box>\n                </CardContent>\n            </Card>\n        </ThemeProvider>\n    )\n}","import React, { useState, useEffect } from \"react\";\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n    Box,\n    Button,\n    Card,\n    CardHeader,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    createTheme,\n    ThemeProvider,\n    Divider,\n} from '@mui/material';\nimport { Typography, Container, InputLabel, MenuItem, Select, FormControl } from '@mui/material';\n\nimport { apiGetWhiteList, apiGetDeviceNameById, apiWorkShopList, apiGetDeviceRecommend, apiGetWorkersByDevice, apiPostAddWorkersWhitelist, apiDeleteWorkersWhitelist } from \"../api.js\";\n\nconst darkTheme = createTheme({\n    palette: {\n        mode: 'dark',\n        background: {\n            default: '#1a1e2b',\n            paper: '#1a1e2b',\n        },\n        text: {\n            primary: '#EDF2F7',\n        },\n        secondary: {\n            main: '#10B981',\n            light: '#3FC79A',\n            dark: '#0B815A',\n            contrastText: '#FFFFFF'\n        },\n        success: {\n            main: '#14B8A6',\n            light: '#43C6B7',\n            dark: '#0E8074',\n            contrastText: '#FFFFFF'\n        },\n        info: {\n            main: '#2196F3',\n            light: '#64B6F7',\n            dark: '#0B79D0',\n            contrastText: '#FFFFFF'\n        },\n        warning: {\n            main: '#FFB020',\n            light: '#FFBF4C',\n            dark: '#B27B16',\n            contrastText: '#FFFFFF'\n        },\n        error: {\n            main: '#D14343',\n            light: '#DA6868',\n            dark: '#922E2E',\n            contrastText: '#FFFFFF'\n        },\n    },\n});\n\nconst CONTENT = {\n    title: \"白名單\",\n    editTitle: \"编辑白名單\",\n    device_cname: \"装置名称\",\n    device_id: \"装置 ID\",\n    name: \"員工姓名\",\n    id: \"員工 ID\",\n    project: \"专案\",\n    update: \"更新资料\",\n    shift: \"班別\",\n    recommand: \"推荐员工\",\n    action: \"新增\",\n    remove: \"移除\"\n}\n\nexport default function WhiteList({ token, ...rest }) {\n    const [deviceMap, setDeviceMap] = useState();\n    const [deviceRecommend, setDeviceRecommend] = useState();\n\n    const [workshop, setWorkshop] = useState();\n\n    const [selectItem, setSelectItem] = useState();\n    const [deviceSelect, setDeviceSelect] = useState();\n    const [workSelect, setWorkSelect] = useState();\n\n    const [shift, setShift] = useState();\n    const [device, setDevice] = useState();\n    const [worker, setWorker] = useState();\n\n    useEffect(() => {\n        handleUpdate();\n        return () => {\n        }\n    }, [])\n\n    const handleChange = (event) => {\n        setWorkshop(event.target.value);\n        apiGetWhiteList(event.target.value).then(res => {\n            let promises = []\n            let ids = Object.keys(res.data);\n\n            ids.map(id => {\n                promises.push(GetDeviceName(id, res.data[String(id)]));\n            })\n            Promise.all(promises).then(response => {\n                setDeviceMap(response);\n            })\n        }).catch(err => {\n            console.log(err);\n        })\n\n        apiGetDeviceRecommend(event.target.value).then(res => {\n            setDeviceRecommend(res.data);\n            // 看 apiGetDeviceRecommend 的資料型態\n            // console.log('apiGetDeviceRecommend : ')\n            // console.log(res.data)\n        }).catch(err => {\n            console.log(err);\n        })\n    }\n\n    const GetDeviceName = (id, employee) => {\n        return new Promise((resolve, reject) => {\n            let data = {\n                \"token\": token,\n                \"device_id\": id\n            }\n            apiGetDeviceNameById(data).then(res => {\n                // 看 apiGetDeviceNameById 的資料型態\n                // console.log('apiGetDeviceNameById : ')\n                // console.log(res.data)\n                resolve({ 'id': id, 'project': res.data['project'], 'name': res.data['device_cname'], 'employee': employee });\n            }).catch(err => {\n                reject();\n            })\n        })\n    }\n\n    const handleUpdate = () => {\n        setShift(null);\n\n        setWorkshop(null);\n        setSelectItem(null);\n        setDeviceSelect(null);\n        setDeviceRecommend(null);\n        setWorker(null);\n        setWorkSelect(null);\n        setDeviceMap(null);\n        apiWorkShopList(token).then(res => {\n            setSelectItem(res.data.map(name => {\n                return (<MenuItem key={name} value={name}>{name}</MenuItem>)\n            }))\n        }).catch(err => {\n\n        });\n\n\n    }\n\n    const handDelete = (device_id, user_id) => {\n        let data = {\n            device_id: device_id,\n            username: user_id\n        }\n        apiDeleteWorkersWhitelist(data).then(res => {\n            if (res.status == 200) {\n                alert('移除成功');\n                handleUpdate();\n            }\n        }).catch(err => {\n            console.log(err);\n        })\n    }\n\n    // select change handler\n    const shiftChange = (event) => {\n        setWorker(null);\n        setDevice(null);\n        setDeviceSelect(null);\n        setWorkSelect(null);\n        let shift = event.target.value;\n        setShift(shift);\n\n        if (deviceRecommend != null) {\n            let promises = [];\n            let allDevice = Object.keys(deviceRecommend[shift.toString()]);\n            allDevice.map(id => {\n                promises.push(GetDeviceName(id, \"\"));\n            })\n            Promise.all(promises).then(response => {\n                setDeviceSelect(response.map(item => {\n                    return (<MenuItem key={item['id']} value={item['id']}>{`(${item[\"id\"]}) ${item[\"name\"]} 异常次数：${deviceRecommend[shift.toString()][item['id'].toString()]} `}</MenuItem>)\n                }))\n                console.log()\n            })\n\n\n        }\n    }\n    const deviceChange = (event) => {\n        setWorker(null);\n        setWorkSelect(null);\n        setDevice(event.target.value);\n        let data = {\n            device_id: event.target.value.toString(),\n            shift: shift === \"day\" ? false : true\n        }\n\n        console.log('apiGetWorkersByDevice : ')\n        console.log(apiGetWorkersByDevice(data))\n\n\n        apiGetWorkersByDevice(data).then(res => {\n            // 看 apiGetWorkersByDevice 的資料型態\n            setWorkSelect(res.data.map(worker => {\n                return (<MenuItem key={worker['username']} value={worker['username']}>{worker['username']}</MenuItem>)\n            }))\n            console.log('apiGetWorkersByDevice : ')\n            console.log(res.data)\n\n\n        }).catch(err => {\n            console.log(err);\n        })\n    }\n    const workChange = (event) => {\n        setWorker(event.target.value);\n    }\n    const addWhiteList = (event) => {\n\n        let data = {\n            device_id: device,\n            username: worker\n        }\n        apiPostAddWorkersWhitelist(data).then(res => {\n            if (res.status == 200) {\n                alert(`新增 ${device}, ${worker}`);\n            }\n        }).catch(err => {\n            alert('重复建立，请重新操作');\n            console.log(err);\n        })\n\n    }\n\n\n    return (\n        <ThemeProvider theme={darkTheme}>\n            <Card >\n                <CardHeader title={CONTENT.title}\n                    action={(<Button\n                        color=\"primary\"\n                        size=\"large\"\n                        variant=\"text\"\n                        onClick={handleUpdate}\n                        sx={{ mr: 3 }}\n                    >\n                        {CONTENT.update}\n                    </Button>)} />\n\n                <Divider sx={{ borderBottomWidth: 3 }} />\n                <Box\n                    sx={{\n                        display: 'flex',\n                        justifyContent: 'center',\n                        pt: 2\n                    }}\n                >\n                    <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                        请选取要显示的车间\n                    </Typography>\n                </Box>\n                <Box\n                    sx={{\n                        display: 'flex',\n                        justifyContent: 'center',\n                        pt: 2\n                    }}\n                >\n                    {\n                        selectItem &&\n                        <FormControl >\n                            <InputLabel id=\"demo-simple-select-label\">WorkShop</InputLabel>\n                            <Select\n                                labelId=\"demo-simple-select-label\"\n                                id=\"workshop-select\"\n                                value={workshop}\n                                label=\"WorkShop\"\n                                onChange={handleChange}\n                                sx={{ minWidth: \"200px\" }}\n                            >\n                                {\n                                    selectItem\n                                }\n                            </Select>\n                        </FormControl>\n                    }\n                </Box>\n                <PerfectScrollbar>\n                    <Box sx={{ minWidth: 800 }}>\n                        <Table>\n                            <TableHead sx={{ background: \"#272d3a\" }}>\n                                <TableRow>\n                                    <TableCell>\n                                        {CONTENT.device_id}\n                                    </TableCell>\n                                    <TableCell>\n                                        {CONTENT.device_cname}\n                                    </TableCell>\n                                    <TableCell >\n                                        {CONTENT.id}\n                                    </TableCell>\n                                    <TableCell >\n                                        {CONTENT.name}\n                                    </TableCell>\n                                    <TableCell >\n                                        {CONTENT.remove}\n                                    </TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {\n                                    deviceMap &&\n                                    deviceMap.map(device => {\n                                        return device.employee.map(worker => (\n                                            (\n                                                <TableRow\n                                                    hover\n                                                    key={device.id}\n                                                >\n                                                    <TableCell>\n                                                        {device.id}\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        {device.name}\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        {worker.username}\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        {worker.full_name}\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        {\n                                                            <Button key={device.id} color=\"error\" onClick={() => handDelete(device.id, worker.username)}>移除白名單</Button>\n                                                        }\n                                                    </TableCell>\n                                                </TableRow>\n                                            )\n                                        ))\n                                    })\n                                }\n                            </TableBody>\n                        </Table>\n                    </Box>\n                </PerfectScrollbar>\n\n            </Card>\n            {\n                deviceRecommend &&\n                <Card sx={{ mt: 5 }}>\n                    <CardHeader title={CONTENT.editTitle} />\n                    <PerfectScrollbar>\n                        <Box sx={{ minWidth: 800 }}>\n                            <Table>\n                                <TableHead sx={{ background: \"#272d3a\" }}>\n                                    <TableRow>\n                                        <TableCell>\n                                            {CONTENT.shift}\n                                        </TableCell>\n                                        <TableCell>\n                                            {CONTENT.device_cname}\n                                        </TableCell>\n                                        <TableCell >\n                                            {CONTENT.recommand}\n                                        </TableCell>\n                                        <TableCell >\n                                            {CONTENT.action}\n                                        </TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    <TableRow>\n                                        <TableCell>\n                                            {\n                                                workshop &&\n                                                <FormControl >\n                                                    <InputLabel id=\"shift-select\">{CONTENT.shift}</InputLabel>\n                                                    <Select\n                                                        labelId=\"shift-select\"\n                                                        id=\"shift-select-id\"\n                                                        value={shift}\n                                                        label=\"WorkShop\"\n                                                        onChange={shiftChange}\n                                                        sx={{ minWidth: \"100px\" }}\n                                                    >\n                                                        <MenuItem key={0} value={\"day\"}>日</MenuItem>\n                                                        <MenuItem key={1} value={\"night\"}>夜</MenuItem>\n                                                    </Select>\n                                                </FormControl>\n                                            }\n                                        </TableCell>\n                                        <TableCell>\n                                            {\n                                                deviceSelect &&\n                                                <FormControl >\n                                                    <InputLabel id=\"device-select\">{CONTENT.device_cname}</InputLabel>\n                                                    <Select\n                                                        labelId=\"device-select\"\n                                                        id=\"device-select-id\"\n                                                        value={device}\n                                                        label=\"device\"\n                                                        onChange={deviceChange}\n                                                        sx={{ minWidth: \"200px\" }}\n                                                    >\n                                                        {\n                                                            deviceSelect\n                                                        }\n                                                    </Select>\n                                                </FormControl>\n                                            }\n                                        </TableCell>\n                                        <TableCell >\n                                            {\n                                                workSelect &&\n                                                <FormControl >\n                                                    <InputLabel id=\"work-select\">{CONTENT.name}</InputLabel>\n                                                    <Select\n                                                        labelId=\"work-select\"\n                                                        id=\"work-select-id\"\n                                                        value={worker}\n                                                        label=\"worker\"\n                                                        onChange={workChange}\n                                                        sx={{ minWidth: \"100px\" }}\n                                                    >\n                                                        {\n                                                            workSelect\n                                                        }\n                                                    </Select>\n                                                </FormControl>\n                                            }\n                                        </TableCell>\n                                        <TableCell >\n                                            <Button onClick={addWhiteList} color=\"success\">加入白名單</Button>\n                                        </TableCell>\n                                    </TableRow>\n                                </TableBody>\n                            </Table>\n                        </Box>\n                    </PerfectScrollbar>\n\n                </Card>\n            }\n\n        </ThemeProvider>\n    );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Avatar, Box, Card, CardContent, Grid, \n  Typography, Dialog, DialogTitle, DialogContent, Button, DialogActions\n} from '@mui/material';\nimport ReportGmailerrorredSharpIcon from '@mui/icons-material/ReportGmailerrorredSharp';\n\nconst CONTENT = {\n  title : \"紧急通报\",\n}\n\nexport function Emergency({list_data, ...rest}) {\n  useEffect(()=> {\n    if(list_data.length > 0){\n      const display = list_data.map(\n        mission => {\n          return (\n            <Card sx={{m:1, minWidth: \"500px\"\n          }} key={mission.mission_id}>\n              <CardContent>\n                  <Typography\n                      color=\"textSecondary\"\n                      gutterBottom\n                      variant=\"overline\"\n                      fontSize=\"large\"\n                  >\n                    任务 ID : {mission.mission_id}\n                  </Typography>\n                  <Typography>\n                  装置 ID : {mission.device.device_id}\n                  </Typography>\n                  <Typography>\n                  装置名称 : {mission.device.device_id}\n                  </Typography>\n                  {/* <Typography>\n                  类别 : {mission.category}\n                  </Typography>\n                  <Typography>\n                  说明 : {mission.description}\n                  </Typography>\n                  <Typography>\n                  assignees : {\n                    mission.assignees && \n                    mission.assignees.map(user=>{\n                      return (\n                        <Card key={user.username}>\n                          <CardContent>\n                          <Typography\n                              color=\"textSecondary\"\n                              gutterBottom\n                              variant=\"overline\"\n                              fontSize=\"small\"\n                          >\n                            ID : {user.username}\n                          </Typography>\n                          <Typography fontSize=\"small\">\n                            full_name : {user.full_name}\n                          </Typography>\n                          </CardContent>\n                        </Card>\n                      )\n                    })\n                  }\n                  </Typography> */}\n              </CardContent>\n            </Card>\n          )\n        }\n      )\n      setData(display);\n    }\n    else{\n      const display = <Card sx={{m:1}} key=\"no-data\"><CardContent>\n        暂时无紧急通报任务\n        </CardContent></Card>;\n        setData(display);\n    }\n}, [])\n  const [data, setData] = useState();\n  const [open, setOpen] = useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  \n  return (\n    <Card\n    sx={{ height: '100%' }}\n  >\n    <CardContent>\n      <Grid\n        container\n        spacing={3}\n        sx={{ justifyContent: 'space-between' }}\n      >\n        <Grid item>\n          <Typography\n            color=\"textSecondary\"\n            gutterBottom\n            variant=\"overline\"\n            fontSize=\"large\"\n          >\n            紧急通报\n          </Typography>\n          <Typography\n            color=\"textPrimary\"\n            variant=\"h4\"\n          >\n            {list_data.length}\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Avatar\n            sx={{\n              backgroundColor: 'error.main',\n              height: 56,\n              width: 56\n            }}\n          >\n            <ReportGmailerrorredSharpIcon />\n          </Avatar>\n        </Grid>\n      </Grid>\n      <Box sx={{ pt: 3 }}>\n      <Button variant=\"contained\" onClick={handleClickOpen}>\n        查看\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {CONTENT.title}\n        </DialogTitle>\n        <DialogContent>\n          {\n            data\n          }\n        </DialogContent>\n        <DialogActions >\n          <Button onClick={handleClose} autoFocus variant=\"contained\">\n          关闭\n          </Button>\n        </DialogActions>\n      </Dialog>\n      </Box>\n    </CardContent>\n  </Card>\n  );\n} \n","import React, { useState, useEffect } from \"react\";\n\nimport { Avatar, Box, Card, CardContent, Grid, \n  Typography, Dialog, DialogTitle, DialogContent, Button, DialogActions\n} from '@mui/material';\nimport BrokenImageSharpIcon from '@mui/icons-material/BrokenImageSharp';\n\nconst CONTENT = {\n  title:\"无人维修之任务\",\n\n}\n\nexport function MissionNeedRepair({list_data, ...rest}) {\n  useEffect(()=> {\n    if(list_data.length > 0){\n      const display = list_data.map(\n        mission => {\n          return (\n            <Card sx={{m:1, minWidth: \"500px\"\n          }}\n            key={mission.mission_id}>\n              <CardContent>\n                    <Typography\n                      color=\"textSecondary\"\n                      gutterBottom\n                      variant=\"overline\"\n                      fontSize=\"large\"\n                    >\n                      任务 ID : {mission.mission_id}\n                    </Typography>\n                    <Typography>\n                      任务名称 : {mission.name}\n                    </Typography>\n                    <Typography>\n                      任务信息 : {mission.description}\n                    </Typography>\n              </CardContent>\n            </Card>\n          )\n        }\n      )\n        setData(display);\n    }\n}, [])\n  const [data, setData] = useState();\n  const [open, setOpen] = useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  \n  return (\n    <Card\n    sx={{ height: '100%' }}\n    \n  >\n    <CardContent>\n      <Grid\n        container\n        spacing={3}\n        sx={{ justifyContent: 'space-between' }}\n      >\n        <Grid item>\n          <Typography\n            color=\"textSecondary\"\n            gutterBottom\n            variant=\"overline\"\n            fontSize=\"large\"\n          >\n            无人维修之任务\n          </Typography>\n          <Typography\n            color=\"textPrimary\"\n            variant=\"h4\"\n          >\n            {list_data.length}\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Avatar\n            sx={{\n              backgroundColor: 'info.main',\n              height: 56,\n              width: 56\n            }}\n          >\n            <BrokenImageSharpIcon />\n          </Avatar>\n        </Grid>\n      </Grid>\n      <Box sx={{ pt: 3 }}>\n      <Button variant=\"contained\" onClick={handleClickOpen}>\n        查看\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {CONTENT.title}\n        </DialogTitle>\n        <DialogContent>\n          {\n            data\n          }\n        </DialogContent>\n        <DialogActions >\n          <Button onClick={handleClose} autoFocus variant=\"contained\">\n          关闭\n          </Button>\n        </DialogActions>\n      </Dialog>\n      </Box>\n    </CardContent>\n  </Card>\n  );\n} \n","import React, { useState, useEffect, useRef } from \"react\";\n\nimport {\n  Box,\n  Card,\n  Skeleton,\n  Grid,\n  Button,\n  Typography,\n  FormControl,\n  InputLabel\n} from '@mui/material';\n\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { Emergency } from \"../components/emergency.js\";\nimport { MissionNeedRepair } from \"../components/mission-need-repair.js\";\nimport { WorkshopPicker } from \"../components/workshop-picker.js\";\n\nimport { apiMissionEmergency, apiMissionNeedRepair } from \"../api.js\";\n\n\nconst darkTheme = createTheme({\n  palette: {\n    mode: 'dark',\n    background: {\n      default: '#1a1e2b',\n      paper: '#1a1e2b',\n    },\n    text: {\n      primary: '#EDF2F7',\n    },\n    primary: {\n      // Purple and green play nicely together.\n      main: '#5048E5',\n    },\n  },\n});\n\nexport default function ENRMission({ token, ...rest }) {\n  const _isMounted = useRef(true);\n  const [emergencyMission, setEmergencyMission] = useState();\n  const [needRepairMissions, setNeedRepairMissions] = useState();\n  const [workshop, setWorkshop] = useState(\"\");\n  \n  useEffect(() => {\n    //updatedata();\n  }, [])\n\n  const updatedata = (data) => {\n    setEmergencyMission(null);\n    setNeedRepairMissions(null);\n    apiMissionNeedRepair(data).then(res => {\n      setNeedRepairMissions(res.data);\n    }).catch(err => {\n      console.log(err);\n    })\n    apiMissionEmergency(data).then(res => {\n      setEmergencyMission(res.data);\n    }).catch(err => {\n      if(workshop === \"\"){\n        alert(\"请选取车间\");\n      }\n      console.log(err);\n    })\n  }\n  const handleOnClick = () => {\n    let now = new Date(Date.now());\n    const data = {\n      token: token,\n      workshop: workshop,\n      start: now.toISOString(),\n      end: now.toISOString(),\n    }\n    updatedata(data);\n  }\n\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <Grid\n        container\n        spacing={3}\n        sx={{pb:5}}\n        >\n        <Grid item xs={4} justifyContent={\"center\"}>\n          <Card >\n            <Box>\n              <FormControl sx={{mt:3, mb:3, mr:3, ml: 3}}>\n                  <InputLabel id=\"demo-simple-select-label\" >WorkShop</InputLabel>\n                  <WorkshopPicker token={token} workshop={workshop} setWorkshop={setWorkshop} />\n              </FormControl>\n              <Button sx={{mt:3, mb:3}} size=\"large\"  variant=\"contained\" onClick={handleOnClick}>更新资料</Button>\n            </Box>\n          </Card>\n        </Grid>\n      </Grid>\n      {\n        emergencyMission && \n        <Grid\n        container\n        spacing={3}\n        >\n        <Grid\n          item\n          lg={4}\n        >\n          <Emergency list_data={emergencyMission} />\n        </Grid>\n        <Grid\n        item\n        lg={4}\n        >\n          {\n            needRepairMissions ?  \n            (\n              <MissionNeedRepair list_data={needRepairMissions} />\n            ) : \n            (\n              <Box\n                sx={{\n                  width: '100%',\n                  display: 'flex',\n                  justifyContent: 'center',\n                  p: 8,\n                }}\n              >\n                <Skeleton\n                  sx={{ bgcolor: 'grey.900' }}\n                  variant=\"rectangular\"\n                  width={1000}\n                  height={80}\n                >\n                  <Typography>.</Typography>\n                </Skeleton>\n              </Box>\n            )\n          }\n        </Grid>\n        </Grid>\n      }\n    </ThemeProvider>\n\n  );\n}","import React, { useState } from 'react';\nimport {\n    BrowserRouter as Router,\n    Routes,\n    Route,\n    Navigate\n} from 'react-router-dom'\n\nimport Login from './LoginPage';\nimport FoxlinkPages from './homepage';\nimport SnackbarAlert from \"./Snackbar\";\nimport Status from \"./AllStatus\";\nimport Statistics from \"./Statistics\";\nimport QrcodeDownload from \"./Qrcode\";\nimport Map from \"./Map\";\nimport DevicesUpload from \"./DevicesUpload\";\nimport WorkerinfoUpload from \"./WorkinfoUpload\";\nimport MapUpload from \"./MapUpload\";\nimport WhiteList from \"./WhiteList\";\nimport ENRMission from \"./OtherMission\";\nimport { NotFound } from \"./404\";\n\nexport default function App() {\n\n    const [alert, setAlert] = useState({\n        'open': false,\n        'type': '',\n        'msg': '',\n        'duration': 3000\n    })\n    // user auth\n    const [authUser, setAuthUser] = useState({\n        'token': null,\n        'token_type': null,\n        'username': null,\n        'level': null,\n    })\n\n    return (\n        <>\n            <SnackbarAlert open={alert.open} message={alert.msg} type={alert.type} setAlert={setAlert} duration={alert.duration} />\n            <Router>\n                <Routes>\n                    <Route element={<Login setAlert={setAlert} setUser={setAuthUser} />} path={'/login'}></Route>\n                    {/* <Route element={<FoxlinkPages authUser={authUser} />} path={'/'}>\n                        <Route element={<Status token={authUser.token} setAlert={setAlert} />} path={'/all-status'}></Route>\n                        <Route element={<WorkerinfoUpload setAlert={setAlert} token={authUser.token} />} path={'/worker-info-upload'}></Route>\n                        <Route element={<DevicesUpload token={authUser.token} />} path={'/devices-upload'}></Route>\n                        <Route element={<Statistics token={authUser.token} setAlert={setAlert} />} path={'/statistics'}></Route>\n                        <Route element={<QrcodeDownload token={authUser.token} />} path={'/qrcode-download'}></Route>\n                        <Route element={<Map setAlert={setAlert} token={authUser.token} />} path={'/map'}></Route>\n                        <Route element={<MapUpload token={authUser.token} />} path={'/map-upload'}></Route>\n                        <Route element={<WhiteList token={authUser.token} />} path={'/white-list'}></Route>\n                        <Route element={<ENRMission token={authUser.token} />} path={'/ENRMission'}></Route>\n                    </Route> */}\n                    <Route element={<WorkerinfoUpload setAlert={setAlert} />} path={'/worker-info-upload'}></Route>\n                    <Route element={<DevicesUpload />} path={'/devices-upload'}></Route>\n                    <Route element={<Statistics setAlert={setAlert} />} path={'/statistics'}></Route>\n                    <Route element={<QrcodeDownload />} path={'/qrcode-download'}></Route>\n                    <Route element={<Map setAlert={setAlert} />} path={'/map'}></Route>\n                    <Route element={<MapUpload />} path={'/map-upload'}></Route>\n                    <Route element={<WhiteList />} path={'/white-list'}></Route>\n                    <Route element={<ENRMission />} path={'/ENRMission'}></Route>\n                    {/* <Route\n                        path='*'\n                        element={\n                            <Navigate to=\"/login\" replace />\n                        }\n                    /> */}\n                </Routes>\n            </Router>\n        </>\n\n    )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './pages/app';\n\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  // <BrowserRouter>\n  //   <Homepage />\n  // </BrowserRouter>\n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}